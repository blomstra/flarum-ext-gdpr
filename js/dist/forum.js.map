{"version":3,"file":"forum.js","mappings":"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","sources":["webpack://@blomstra/gdpr/webpack/bootstrap","webpack://@blomstra/gdpr/webpack/runtime/compat get default export","webpack://@blomstra/gdpr/webpack/runtime/define property getters","webpack://@blomstra/gdpr/webpack/runtime/hasOwnProperty shorthand","webpack://@blomstra/gdpr/webpack/runtime/make namespace object","webpack://@blomstra/gdpr/external root \"flarum.core.compat['forum/app']\"","webpack://@blomstra/gdpr/./src/forum/states/ErasureRequestsListState.ts","webpack://@blomstra/gdpr/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@blomstra/gdpr/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@blomstra/gdpr/external root \"flarum.core.compat['forum/components/Notification']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/helpers/username']\"","webpack://@blomstra/gdpr/./src/forum/components/ExportAvailableNotification.ts","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/extend']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/utils/ItemList']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['forum/components/SettingsPage']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/components/FieldSet']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/components/Button']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/components/Modal']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/utils/extractText']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/utils/Stream']\"","webpack://@blomstra/gdpr/./src/forum/components/RequestErasureModal.js","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/app']\"","webpack://@blomstra/gdpr/./src/common/components/RequestDataExportModal.tsx","webpack://@blomstra/gdpr/external root \"flarum.core.compat['forum/components/HeaderSecondary']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['forum/components/NotificationsDropdown']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/Component']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/components/LoadingIndicator']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/helpers/avatar']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/helpers/icon']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/helpers/humanTime']\"","webpack://@blomstra/gdpr/./src/forum/components/ProcessErasureRequestModal.tsx","webpack://@blomstra/gdpr/./src/forum/components/ErasureRequestsList.js","webpack://@blomstra/gdpr/./src/forum/components/ErasureRequestsDropdown.tsx","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/components/Page']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['forum/utils/UserControls']\"","webpack://@blomstra/gdpr/./src/forum/components/DeleteUserModal.tsx","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/extenders']\"","webpack://@blomstra/gdpr/./src/forum/components/ErasureRequestsPage.js","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/models/User']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/Model']\"","webpack://@blomstra/gdpr/./src/common/models/ErasureRequest.ts","webpack://@blomstra/gdpr/./src/common/models/Export.ts","webpack://@blomstra/gdpr/./src/common/extend.ts","webpack://@blomstra/gdpr/./src/forum/extend.ts","webpack://@blomstra/gdpr/./src/forum/index.ts","webpack://@blomstra/gdpr/./src/forum/extenders/extendUserSettingsPage.tsx","webpack://@blomstra/gdpr/./src/forum/extenders/extendHeaderSecondary.tsx","webpack://@blomstra/gdpr/./src/forum/extenders/extendPage.ts","webpack://@blomstra/gdpr/./src/forum/extenders/extendUserControls.tsx"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","import app from 'flarum/forum/app';\n\nexport default class ErasureRequestsListState {\n  loading: boolean = false;\n  requestsLoaded: boolean = false;\n\n  load() {\n    if (this.requestsLoaded) {\n      return;\n    }\n\n    this.loading = true;\n    m.redraw();\n\n    app.store\n      .find('user-erasure-requests')\n      .then(\n        () => (this.requestsLoaded = true),\n        () => {}\n      )\n      .then(() => {\n        this.loading = false;\n        m.redraw();\n      });\n  }\n}\n","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/Notification'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/username'];","import app from 'flarum/forum/app';\nimport Notification from 'flarum/forum/components/Notification';\nimport Export from '../../common/models/Export';\nimport username from 'flarum/common/helpers/username';\n\nexport default class ExportAvailableNotification extends Notification {\n  icon() {\n    return 'fas fa-file-export';\n  }\n\n  href() {\n    const exportModel = this.attrs.notification.subject() as Export;\n\n    // Building the full url scheme so that Mithril treats this as an external link, so the download will work correctly.\n    return app.forum.attribute('baseUrl') + `/gdpr/export/${exportModel.file()}`;\n  }\n\n  content() {\n    const notification = this.attrs.notification;\n    return app.translator.trans('blomstra-gdpr.forum.notification.export-ready', {\n      username: username(notification.fromUser()),\n    });\n  }\n\n  excerpt() {\n    return null;\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/ItemList'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/SettingsPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/FieldSet'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Modal'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/extractText'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/Stream'];","import app from 'flarum/forum/app';\nimport Modal from 'flarum/common/components/Modal';\nimport Button from 'flarum/common/components/Button';\nimport extractText from 'flarum/common/utils/extractText';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport Stream from 'flarum/common/utils/Stream';\n\nexport default class RequestErasureModal extends Modal {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    this.reason = Stream('');\n    this.password = Stream('');\n  }\n\n  className() {\n    return 'RequestErasureModal Modal--small';\n  }\n\n  title() {\n    return app.translator.trans('blomstra-gdpr.forum.request_erasure.title');\n  }\n\n  content() {\n    return (\n      <div className=\"Modal-body\">\n        <div className=\"Form Form--centered\">{this.fields().toArray()}</div>\n      </div>\n    );\n  }\n\n  fields() {\n    const items = new ItemList();\n\n    const currRequest = app.session.user.erasureRequest();\n\n    if (currRequest) {\n      items.add(\n        'status',\n        <div className=\"Form-group\">\n          <p className=\"helpText\">{app.translator.trans(`blomstra-gdpr.forum.request_erasure.status.${currRequest.status()}`)}</p>\n        </div>\n      );\n\n      if (currRequest.reason()) {\n        items.add(\n          'reason',\n          <div className=\"Form-group\">\n            <p className=\"helpText\">{app.translator.trans('blomstra-gdpr.forum.request_erasure.reason', { reason: currRequest.reason() })}</p>\n          </div>\n        );\n      }\n\n      items.add(\n        'cancel',\n        <div className=\"Form-group\">\n          {Button.component(\n            {\n              className: 'Button Button--primary Button--block',\n              onclick: this.oncancel.bind(this),\n              loading: this.loading,\n            },\n            app.translator.trans('blomstra-gdpr.forum.request_erasure.cancel_button')\n          )}\n        </div>\n      );\n    } else {\n      items.add('text', <p className=\"helpText\">{app.translator.trans('blomstra-gdpr.forum.request_erasure.text')}</p>);\n\n      if (!app.forum.attribute('passwordlessSignUp')) {\n        items.add(\n          'password',\n          <div className=\"Form-group\">\n            <input\n              type=\"password\"\n              className=\"FormControl\"\n              bidi={this.password}\n              placeholder={extractText(app.translator.trans('blomstra-gdpr.forum.request_erasure.password_label'))}\n            />\n          </div>\n        );\n      }\n\n      items.add(\n        'reason',\n        <div className=\"Form-group\">\n          <textarea\n            className=\"FormControl\"\n            value={this.reason()}\n            oninput={(e) => this.reason(e.target.value)}\n            placeholder={extractText(app.translator.trans('blomstra-gdpr.forum.request_erasure.reason_label'))}\n          ></textarea>\n        </div>\n      );\n\n      items.add(\n        'submit',\n        <div className=\"Form-group\">\n          {Button.component(\n            {\n              className: 'Button Button--primary Button--block',\n              type: 'submit',\n              loading: this.loading,\n            },\n            app.translator.trans('blomstra-gdpr.forum.request_erasure.request_button')\n          )}\n        </div>\n      );\n    }\n\n    return items;\n  }\n\n  oncancel(e) {\n    this.loading = true;\n    m.redraw();\n\n    app.session.user\n      .erasureRequest()\n      .delete()\n      .then(() => {\n        this.loading = false;\n        m.redraw();\n      });\n  }\n\n  data() {\n    // Status is set so that the proper confirmation message is displayed.\n    return {\n      reason: this.reason(),\n      status: 'user_confirmed',\n      relationships: { user: app.session.user },\n    };\n  }\n\n  onsubmit(e) {\n    e.preventDefault();\n\n    this.loading = true;\n\n    app.store\n      .createRecord('user-erasure-requests')\n      .save(this.data(), { meta: { password: this.password() } })\n      .then((erasureRequest) => {\n        app.session.user.pushData({ relationships: { erasureRequest } });\n        this.loading = false;\n        m.redraw();\n      })\n      .catch(() => {\n        this.loading = false;\n        m.redraw();\n      });\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/app'];","import app from 'flarum/common/app';\nimport Modal, { IInternalModalAttrs } from 'flarum/common/components/Modal';\nimport Button from 'flarum/common/components/Button';\nimport username from 'flarum/common/helpers/username';\nimport User from 'flarum/common/models/User';\nimport type Mithril from 'mithril';\n\ninterface RequestDataExportModalAttrs extends IInternalModalAttrs {\n  user: User;\n}\n\nexport default class RequestDataExportModal extends Modal<RequestDataExportModalAttrs> {\n  user!: User;\n\n  oninit(vnode: Mithril.Vnode<RequestDataExportModalAttrs>) {\n    super.oninit(vnode);\n\n    this.user = this.attrs.user;\n  }\n\n  className() {\n    return 'RequestDataModal Modal--small';\n  }\n\n  title() {\n    return app.translator.trans('blomstra-gdpr.lib.request_data.title', {\n      username: username(this.user),\n    });\n  }\n\n  content() {\n    return (\n      <div className=\"Modal-body\">\n        <div className=\"Form Form--centered\">\n          <p className=\"helpText\">{app.translator.trans('blomstra-gdpr.lib.request_data.text')}</p>\n          <div className=\"Form-group\">\n            <Button\n              className=\"Button Button--primary Button--block\"\n              onclick={() => this.requestExport()}\n              loading={this.loading}\n              disabled={this.loading}\n            >\n              {app.translator.trans('blomstra-gdpr.lib.request_data.request_button')}\n            </Button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  requestExport() {\n    this.loading = true;\n\n    app\n      .request({\n        method: 'POST',\n        url: app.forum.attribute('apiUrl') + '/gdpr/export',\n        body: {\n          data: {\n            attributes: {\n              userId: this.user.id(),\n            },\n          },\n        },\n      })\n      .then(this.hide.bind(this), this.loaded.bind(this));\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/HeaderSecondary'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/NotificationsDropdown'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Component'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/LoadingIndicator'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/avatar'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/icon'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/humanTime'];","import app from 'flarum/forum/app';\nimport Modal, { IInternalModalAttrs } from 'flarum/common/components/Modal';\nimport Button from 'flarum/common/components/Button';\nimport username from 'flarum/common/helpers/username';\nimport extractText from 'flarum/common/utils/extractText';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport Stream from 'flarum/common/utils/Stream';\nimport type Mithril from 'mithril';\nimport ErasureRequest from 'src/common/models/ErasureRequest';\n\ninterface ProcessErasureRequestModalAttrs extends IInternalModalAttrs {\n  request: ErasureRequest;\n}\n\nexport default class ProcessErasureRequestModal extends Modal<ProcessErasureRequestModalAttrs> {\n  comments: Stream<string>;\n  loadingAnonymization: boolean = false;\n  loadingDeletion: boolean = false;\n  request!: ErasureRequest;\n\n  oninit(vnode: Mithril.Vnode<ProcessErasureRequestModalAttrs>) {\n    super.oninit(vnode);\n\n    this.request = this.attrs.request;\n\n    this.comments = Stream('');\n  }\n\n  className() {\n    return 'ProcessErasureRequestModal Modal--small';\n  }\n\n  title() {\n    return app.translator.trans('blomstra-gdpr.forum.process_erasure.title');\n  }\n\n  content() {\n    return (\n      <div className=\"Modal-body\">\n        <div className=\"Form Form--centered\">{this.fields().toArray()}</div>\n      </div>\n    );\n  }\n\n  fields() {\n    const items = new ItemList<Mithril.Children>();\n\n    const erasureRequest = this.attrs.request;\n\n    items.add(\n      'text',\n      <p className=\"helpText\">{app.translator.trans('blomstra-gdpr.forum.process_erasure.text', { name: username(this.request.user()) })}</p>\n    );\n\n    erasureRequest?.reason() &&\n      items.add(\n        'reason',\n        <p className=\"helpText\">\n          <code>{erasureRequest.reason()}</code>\n        </p>\n      );\n\n    items.add(\n      'comments',\n      <div className=\"Form-group\">\n        <textarea\n          className=\"FormControl\"\n          value={this.comments()}\n          bidi={this.comments}\n          placeholder={extractText(app.translator.trans('blomstra-gdpr.forum.process_erasure.comments_label'))}\n        ></textarea>\n      </div>\n    );\n\n    if (app.forum.attribute('erasureAnonymizationAllowed')) {\n      items.add(\n        'anonymize',\n        <div className=\"Form-group\">\n          {Button.component(\n            {\n              className: 'Button Button--primary Button--block',\n              loading: this.loadingAnonymization,\n              onclick: () => this.process('anonymization'),\n            },\n            app.translator.trans('blomstra-gdpr.forum.process_erasure.anonymization_button')\n          )}\n        </div>\n      );\n    }\n\n    if (app.forum.attribute('erasureDeletionAllowed')) {\n      items.add(\n        'delete',\n        <div className=\"Form-group\">\n          {Button.component(\n            {\n              className: 'Button Button--danger Button--block',\n              loading: this.loadingDeletion,\n              onclick: () => this.process('deletion'),\n            },\n            app.translator.trans('blomstra-gdpr.forum.process_erasure.deletion_button')\n          )}\n        </div>\n      );\n    }\n\n    return items;\n  }\n\n  process(mode: string) {\n    if (\n      !confirm(\n        app.translator.trans('blomstra-gdpr.forum.process_erasure.confirm', {\n          name: extractText(username(this.request.user())),\n          mode,\n        }) as string\n      )\n    ) {\n      return;\n    }\n\n    if (mode === 'anonymization') {\n      this.loadingAnonymization = true;\n    } else {\n      this.loadingDeletion = true;\n    }\n\n    m.redraw();\n\n    this.request\n      .save({ processor_comment: this.comments(), meta: { mode } })\n      .then((erasureRequest) => {\n        app.store.remove(erasureRequest);\n        this.loadingAnonymization = false;\n        this.loadingDeletion = false;\n        m.redraw();\n        this.hide();\n      })\n      .catch(() => {\n        this.loadingAnonymization = false;\n        this.loadingDeletion = false;\n        m.redraw();\n      });\n  }\n}\n","import app from 'flarum/forum/app';\nimport Component from 'flarum/common/Component';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport avatar from 'flarum/common/helpers/avatar';\nimport icon from 'flarum/common/helpers/icon';\nimport username from 'flarum/common/helpers/username';\nimport humanTime from 'flarum/common/helpers/humanTime';\n\nimport ProcessErasureRequestModal from './ProcessErasureRequestModal';\n\nexport default class ErasureRequestsList extends Component {\n  view() {\n    const erasureRequests = app.store.all('user-erasure-requests');\n    const state = this.attrs.state;\n\n    return (\n      <div className=\"NotificationList ErasureRequestsList\">\n        <div className=\"NotificationList-header\">\n          <h4 className=\"App-titleControl App-titleControl--text\">{app.translator.trans('blomstra-gdpr.forum.erasure_requests.title')}</h4>\n        </div>\n        <div className=\"NotificationList-content\">\n          <ul className=\"NotificationGroup-content\">\n            {erasureRequests.length ? (\n              erasureRequests.map((request) => {\n                return (\n                  <li>\n                    <a onclick={this.showModal.bind(this, request)} className=\"Notification Request\">\n                      {avatar(request.user())}\n                      {icon('fas fa-user-edit', { className: 'Notification-icon' })}\n                      <span className=\"Notification-content\">\n                        {app.translator.trans(`blomstra-gdpr.forum.erasure_requests.item_text`, {\n                          name: username(request.user()),\n                        })}\n                      </span>\n                      {humanTime(request.createdAt())}\n                    </a>\n                  </li>\n                );\n              })\n            ) : !state.loading ? (\n              <div className=\"NotificationList-empty\">{app.translator.trans('blomstra-gdpr.forum.erasure_requests.empty_text')}</div>\n            ) : (\n              LoadingIndicator.component({ className: 'LoadingIndicator--block' })\n            )}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n\n  showModal(request) {\n    app.modal.show(ProcessErasureRequestModal, { request });\n  }\n}\n","import app from 'flarum/forum/app';\nimport NotificationsDropdown from 'flarum/forum/components/NotificationsDropdown';\n\nimport ErasureRequestsList from './ErasureRequestsList';\nimport { IDropdownAttrs } from 'flarum/common/components/Dropdown';\nimport ErasureRequestsListState from '../states/ErasureRequestsListState';\n\ninterface ErasureRequestsDropdownAttrs extends IDropdownAttrs {\n  state: ErasureRequestsListState;\n}\n\nexport default class ErasureRequestsDropdown extends NotificationsDropdown<ErasureRequestsDropdownAttrs> {\n  static initAttrs(attrs: ErasureRequestsDropdownAttrs) {\n    attrs.label = attrs.label || app.translator.trans('blomstra-gdpr.forum.erasure_requests.tooltip');\n    attrs.icon = attrs.icon || 'fas fa-user-minus';\n\n    super.initAttrs(attrs);\n  }\n\n  getMenu() {\n    return (\n      <div className={'Dropdown-menu ' + this.attrs.menuClassName} onclick={this.menuClick.bind(this)}>\n        {this.showing ? ErasureRequestsList.component({ state: this.attrs.state }) : ''}\n      </div>\n    );\n  }\n\n  goToRoute() {\n    m.route.set(app.route('erasure-requests'));\n  }\n\n  getUnreadCount(): number | undefined {\n    if (!this.attrs.state.requestsLoaded) {\n      return app.forum.attribute('erasureRequestCount');\n    }\n\n    return app.store.all('erasure-requests').length;\n  }\n\n  getNewCount() {\n    return this.getUnreadCount();\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Page'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/utils/UserControls'];","import app from 'flarum/forum/app';\nimport Modal, { IInternalModalAttrs } from 'flarum/common/components/Modal';\nimport User from 'flarum/common/models/User';\nimport type Mithril from 'mithril';\nimport username from 'flarum/common/helpers/username';\nimport Button from 'flarum/common/components/Button';\n\ninterface DeleteUserModalAttrs extends IInternalModalAttrs {\n  user: User;\n}\n\nexport default class DeleteUserModal extends Modal<DeleteUserModalAttrs> {\n  user!: User;\n\n  oninit(vnode: Mithril.Vnode<DeleteUserModalAttrs>) {\n    super.oninit(vnode);\n\n    this.user = this.attrs.user;\n  }\n\n  className() {\n    return 'DeleteUserModal Modal--small';\n  }\n\n  title() {\n    return app.translator.trans('blomstra-gdpr.forum.delete_user.title', {\n      username: username(this.user),\n    });\n  }\n\n  content() {\n    return (\n      <div className=\"Modal-body\">\n        <div className=\"Form Form--centered\">\n          <p className=\"helpText\">\n            {app.translator.trans('blomstra-gdpr.forum.delete_user.text', {\n              username: username(this.user),\n            })}\n          </p>\n          <div className=\"Form-group\">\n            <Button\n              className=\"Button Button--primary Button--block\"\n              onclick={() => this.requestErasure()}\n              loading={this.loading}\n              disabled={this.loading}\n            >\n              {app.translator.trans('blomstra-gdpr.forum.delete_user.delete_button')}\n            </Button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  requestErasure() {\n    this.loading = true;\n\n    this.user.delete().then(\n      () => {\n        this.hide();\n        this.loading = false;\n        m.redraw();\n      },\n      () => {}\n    );\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extenders'];","import app from 'flarum/forum/app';\nimport Page from 'flarum/common/components/Page';\n\nimport ErasureRequestsList from './ErasureRequestsList';\n\nexport default class ErasureRequestsPage extends Page {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    app.history.push('erasure-requests');\n\n    app.erasureRequests.load();\n\n    this.bodyClass = 'App--ErasureRequests';\n  }\n\n  view() {\n    return (\n      <div className=\"ErasureRequestsPage\">\n        <ErasureRequestsList state={app.erasureRequests}></ErasureRequestsList>\n      </div>\n    );\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/models/User'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Model'];","import Model from 'flarum/common/Model';\nimport User from 'flarum/common/models/User';\n\nexport default class ErasureRequest extends Model {\n  status() {\n    return Model.attribute<string>('status').call(this);\n  }\n\n  reason() {\n    return Model.attribute<string>('reason').call(this);\n  }\n\n  createdAt() {\n    return Model.attribute('createdAt', Model.transformDate).call(this);\n  }\n\n  userConfirmedAt() {\n    return Model.attribute('userConfirmedAt', Model.transformDate).call(this);\n  }\n\n  processedAt() {\n    return Model.attribute('processedAt', Model.transformDate).call(this);\n  }\n\n  processorComment() {\n    return Model.attribute<string>('processorComment').call(this);\n  }\n\n  processedMode() {\n    return Model.attribute<string>('processedMode').call(this);\n  }\n\n  user() {\n    return Model.hasOne<User>('user').call(this);\n  }\n\n  processedBy() {\n    return Model.hasOne<User>('processedBy').call(this);\n  }\n}\n","import Model from 'flarum/common/Model';\nimport User from 'flarum/common/models/User';\n\nexport default class Export extends Model {\n  file() {\n    return Model.attribute<string>('file').call(this);\n  }\n\n  createdAt() {\n    return Model.attribute('createdAt', Model.transformDate);\n  }\n\n  destroysAt() {\n    return Model.attribute('destroysAt', Model.transformDate);\n  }\n\n  user() {\n    return Model.hasOne<User>('user');\n  }\n\n  actor() {\n    return Model.hasOne<User>('actor');\n  }\n}\n","import Extend from 'flarum/common/extenders';\nimport User from 'flarum/common/models/User';\nimport ErasureRequest from './models/ErasureRequest';\nimport Export from './models/Export';\n\nexport default [\n  new Extend.Store() //\n    .add('user-erasure-requests', ErasureRequest)\n    .add('exports', Export),\n\n  new Extend.Model(User) //\n    .attribute<boolean>('canModerateExports')\n    .hasOne<ErasureRequest>('erasureRequest'),\n];\n","import Extend from 'flarum/common/extenders';\nimport ErasureRequestsPage from './components/ErasureRequestsPage';\n\nimport { default as extend } from '../common/extend';\n\nexport default [\n  ...extend,\n\n  new Extend.Routes() //\n    .add('erasure-requests', '/erasure-requests', ErasureRequestsPage),\n];\n","import app from 'flarum/forum/app';\nimport ErasureRequestsListState from './states/ErasureRequestsListState';\nimport ExportAvailableNotification from './components/ExportAvailableNotification';\nimport extendUserSettingsPage from './extenders/extendUserSettingsPage';\nimport extendHeaderSecondary from './extenders/extendHeaderSecondary';\nimport extendPage from './extenders/extendPage';\nimport extendUserControls from './extenders/extendUserControls';\n\nexport { default as extend } from './extend';\n\napp.initializers.add('blomstra-gdpr', () => {\n  app.erasureRequests = new ErasureRequestsListState();\n\n  app.notificationComponents.gdprExportAvailable = ExportAvailableNotification;\n\n  extendUserSettingsPage();\n  extendHeaderSecondary();\n  extendPage();\n  extendUserControls();\n});\n","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport SettingsPage from 'flarum/forum/components/SettingsPage';\nimport FieldSet from 'flarum/common/components/FieldSet';\nimport type Mithril from 'mithril';\nimport Button from 'flarum/common/components/Button';\nimport RequestErasureModal from '../components/RequestErasureModal';\nimport RequestDataExportModal from '../../common/components/RequestDataExportModal';\n\nexport default function extendUserSettingsPage() {\n  extend(SettingsPage.prototype, 'settingsItems', function (items: ItemList<Mithril.Children>) {\n    const user = this.user;\n\n    if (!user) {\n      return;\n    }\n\n    items.add(\n      'dataItems',\n      <FieldSet className=\"Settings-gdpr\" label={app.translator.trans('blomstra-gdpr.forum.settings.data.heading')}>\n        {\n          /** @ts-ignore **/\n          this.dataItems().toArray()\n        }\n      </FieldSet>,\n      90\n    );\n  });\n\n  /** @ts-ignore */\n  SettingsPage.prototype.dataItems = function (): ItemList<Mithril.Children> {\n    const items = new ItemList<Mithril.Children>();\n\n    items.add(\n      'gdprErasure',\n      <div className=\"gdprErasure-container\">\n        <Button className=\"Button Button-gdprErasure\" icon=\"fas fa-user-minus\" onclick={() => app.modal.show(RequestErasureModal)}>\n          {app.translator.trans('blomstra-gdpr.forum.settings.request_erasure_button')}\n        </Button>\n        <p className=\"helpText\">{app.translator.trans('blomstra-gdpr.forum.settings.request_erasure_help')}</p>\n      </div>,\n      50\n    );\n\n    items.add(\n      'gdprExport',\n      <div className=\"gdprExport-container\">\n        <Button\n          className=\"Button Button-gdprExport\"\n          icon=\"fas fa-file-export\"\n          onclick={() => app.modal.show(RequestDataExportModal, { user: this.user })}\n        >\n          {app.translator.trans('blomstra-gdpr.forum.settings.export_data_button')}\n        </Button>\n        <p className=\"helpText\">{app.translator.trans('blomstra-gdpr.forum.settings.export_data_help')}</p>\n      </div>,\n      40\n    );\n\n    return items;\n  };\n}\n","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport HeaderSecondary from 'flarum/forum/components/HeaderSecondary';\nimport ErasureRequestsDropdown from '../components/ErasureRequestsDropdown';\n\nexport default function extendHeaderSecondary() {\n  extend(HeaderSecondary.prototype, 'items', function (items) {\n    if (app.forum.attribute('erasureRequestCount')) {\n      items.add('erasureRequests', <ErasureRequestsDropdown state={app.erasureRequests} />, 20);\n    }\n  });\n}\n","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport Page from 'flarum/common/components/Page';\n\nexport default function extendPage() {\n  extend(Page.prototype, 'oninit', function () {\n    if (m.route.param('erasureRequestConfirmed')) {\n      app.alerts.show({ type: 'success' }, app.translator.trans('blomstra-gdpr.forum.erasure_request_confirmed'));\n    }\n  });\n}\n","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport UserControls from 'flarum/forum/utils/UserControls';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport User from 'flarum/common/models/User';\nimport Button from 'flarum/common/components/Button';\nimport RequestDataExportModal from '../../common/components/RequestDataExportModal';\nimport type Mithril from 'mithril';\nimport DeleteUserModal from '../components/DeleteUserModal';\n\nexport default function extendUserControls() {\n  extend(UserControls, 'moderationControls', function (items: ItemList<Mithril.Children>, user: User) {\n    if (app.session.user?.canModerateExports()) {\n      items.add(\n        'gdpr-export',\n        <Button icon=\"fas fa-file-export\" onclick={() => app.modal.show(RequestDataExportModal, { user })}>\n          {app.translator.trans('blomstra-gdpr.forum.settings.export_data_button')}\n        </Button>\n      );\n    }\n  });\n\n  extend(UserControls, 'destructiveControls', function (items: ItemList<Mithril.Children>, user: User) {\n    items.remove('delete');\n\n    if (user.canDelete()) {\n      items.add(\n        'gdpr-erase',\n        <Button icon=\"fas fa-eraser\" onclick={() => app.modal.show(DeleteUserModal, { user })}>\n          {app.translator.trans('blomstra-gdpr.forum.delete_user.delete_button')}\n        </Button>\n      );\n    }\n  });\n}\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","ErasureRequestsListState","loading","requestsLoaded","load","this","m","redraw","app","find","then","_setPrototypeOf","p","setPrototypeOf","bind","__proto__","_inheritsLoose","subClass","superClass","create","constructor","ExportAvailableNotification","icon","href","exportModel","attrs","notification","subject","attribute","file","content","trans","username","fromUser","excerpt","Notification","RequestErasureModal","oninit","vnode","reason","Stream","password","className","title","fields","toArray","items","ItemList","currRequest","user","erasureRequest","add","status","Button","onclick","oncancel","type","bidi","placeholder","extractText","oninput","e","target","data","relationships","onsubmit","preventDefault","createRecord","save","meta","pushData","Modal","RequestDataExportModal","requestExport","disabled","method","url","body","attributes","userId","id","hide","loaded","ProcessErasureRequestModal","comments","loadingAnonymization","loadingDeletion","request","name","process","mode","confirm","processor_comment","remove","ErasureRequestsList","view","erasureRequests","all","state","length","map","showModal","avatar","humanTime","createdAt","LoadingIndicator","show","Component","ErasureRequestsDropdown","initAttrs","label","getMenu","menuClassName","menuClick","showing","component","goToRoute","route","set","getUnreadCount","getNewCount","NotificationsDropdown","DeleteUserModal","requestErasure","ErasureRequestsPage","push","bodyClass","Page","ErasureRequest","Model","userConfirmedAt","processedAt","processorComment","processedMode","processedBy","Export","destroysAt","actor","Extend","User","hasOne","extend","gdprExportAvailable","SettingsPage","dataItems","HeaderSecondary","param","UserControls","canModerateExports","canDelete"],"sourceRoot":""}