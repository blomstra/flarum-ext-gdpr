{"version":3,"file":"forum.js","mappings":"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","sources":["webpack://@blomstra/gdpr/webpack/bootstrap","webpack://@blomstra/gdpr/webpack/runtime/compat get default export","webpack://@blomstra/gdpr/webpack/runtime/define property getters","webpack://@blomstra/gdpr/webpack/runtime/hasOwnProperty shorthand","webpack://@blomstra/gdpr/webpack/runtime/make namespace object","webpack://@blomstra/gdpr/external root \"flarum.core.compat['forum/app']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/extend']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['forum/components/HeaderSecondary']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/components/Page']\"","webpack://@blomstra/gdpr/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@blomstra/gdpr/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/components/NotificationsDropdown']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/Component']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/components/LoadingIndicator']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/helpers/avatar']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/helpers/icon']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/helpers/username']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/helpers/humanTime']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/components/Modal']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/components/Button']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/utils/extractText']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/utils/ItemList']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/utils/Stream']\"","webpack://@blomstra/gdpr/./src/forum/components/ProcessErasureRequestModal.js","webpack://@blomstra/gdpr/./src/forum/components/ErasureRequestsList.js","webpack://@blomstra/gdpr/./src/forum/components/ErasureRequestsDropdown.js","webpack://@blomstra/gdpr/./src/forum/states/ErasureRequestsListState.js","webpack://@blomstra/gdpr/external root \"flarum.core.compat['forum/components/Notification']\"","webpack://@blomstra/gdpr/./src/forum/components/ExportAvailableNotification.ts","webpack://@blomstra/gdpr/external root \"flarum.core.compat['forum/components/SettingsPage']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/components/FieldSet']\"","webpack://@blomstra/gdpr/./src/forum/components/RequestErasureModal.js","webpack://@blomstra/gdpr/./src/forum/components/RequestDataModal.js","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/extenders']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/models/User']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/Model']\"","webpack://@blomstra/gdpr/./src/forum/models/ErasureRequest.ts","webpack://@blomstra/gdpr/./src/forum/components/ErasureRequestsPage.js","webpack://@blomstra/gdpr/./src/forum/models/Export.ts","webpack://@blomstra/gdpr/./src/forum/extend.ts","webpack://@blomstra/gdpr/./src/forum/index.js","webpack://@blomstra/gdpr/./src/forum/extenders/extendUserSettingsPage.tsx"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/HeaderSecondary'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Page'];","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/NotificationsDropdown'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Component'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/LoadingIndicator'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/avatar'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/icon'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/username'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/humanTime'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Modal'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/extractText'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/ItemList'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/Stream'];","import app from 'flarum/forum/app';\nimport Modal from 'flarum/common/components/Modal';\nimport Button from 'flarum/common/components/Button';\nimport username from 'flarum/common/helpers/username';\nimport extractText from 'flarum/common/utils/extractText';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport Stream from 'flarum/common/utils/Stream';\n\nexport default class ProcessErasureRequestModal extends Modal {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    this.comments = Stream('');\n\n    this.loading = {};\n  }\n\n  className() {\n    return 'ProcessErasureRequestModal Modal--small';\n  }\n\n  title() {\n    return app.translator.trans('blomstra-gdpr.forum.process_erasure.title');\n  }\n\n  content() {\n    return (\n      <div className=\"Modal-body\">\n        <div className=\"Form Form--centered\">{this.fields().toArray()}</div>\n      </div>\n    );\n  }\n\n  fields() {\n    const items = new ItemList();\n\n    items.add(\n      'text',\n      <p className=\"helpText\">{app.translator.trans('blomstra-gdpr.forum.process_erasure.text', { name: username(this.attrs.request.user()) })}</p>\n    );\n\n    items.add(\n      'comments',\n      <div className=\"Form-group\">\n        <textarea\n          className=\"FormControl\"\n          value={this.comments()}\n          oninput={(e) => this.comments(e.target.value)}\n          placeholder={extractText(app.translator.trans('blomstra-gdpr.forum.process_erasure.comments_label'))}\n        ></textarea>\n      </div>\n    );\n\n    if (app.forum.attribute('erasureAnonymizationAllowed')) {\n      items.add(\n        'anonymize',\n        <div className=\"Form-group\">\n          {Button.component(\n            {\n              className: 'Button Button--primary Button--block',\n              type: 'submit',\n              loading: this.loading.anonymization,\n              onclick: (e) => this.onsubmit(e, 'anonymization'),\n            },\n            app.translator.trans('blomstra-gdpr.forum.process_erasure.anonymization_button')\n          )}\n        </div>\n      );\n    }\n\n    if (app.forum.attribute('erasureDeletionAllowed')) {\n      items.add(\n        'delete',\n        <div className=\"Form-group\">\n          {Button.component(\n            {\n              className: 'Button Button--danger Button--block',\n              type: 'submit',\n              loading: this.loading.deletion,\n              onclick: (e) => this.onsubmit(e, 'deletion'),\n            },\n            app.translator.trans('blomstra-gdpr.forum.process_erasure.deletion_button')\n          )}\n        </div>\n      );\n    }\n\n    return items;\n  }\n\n  onsubmit(e, mode) {\n    e.preventDefault();\n\n    if (\n      !confirm(\n        app.translator.trans('blomstra-gdpr.forum.process_erasure.confirm', {\n          name: extractText(username(this.attrs.request.user())),\n          mode: extractText(mode),\n        })\n      )\n    ) {\n      return;\n    }\n\n    this.loading[MediaSource] = true;\n    m.redraw();\n\n    this.attrs.request\n      .save({ processor_comment: this.comments() }, { meta: { mode } })\n      .then((erasureRequest) => {\n        app.store.remove(erasureRequest);\n        this.loading[MediaSource] = false;\n        m.redraw();\n        this.hide();\n      })\n      .catch(() => {\n        this.loading[MediaSource] = false;\n        m.redraw();\n      });\n  }\n}\n","import app from 'flarum/forum/app';\nimport Component from 'flarum/common/Component';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport avatar from 'flarum/common/helpers/avatar';\nimport icon from 'flarum/common/helpers/icon';\nimport username from 'flarum/common/helpers/username';\nimport humanTime from 'flarum/common/helpers/humanTime';\n\nimport ProcessErasureRequestModal from './ProcessErasureRequestModal';\n\nexport default class ErasureRequestsList extends Component {\n  view() {\n    const erasureRequests = app.store.all('user-erasure-requests');\n    const state = this.attrs.state;\n\n    return (\n      <div className=\"NotificationList ErasureRequestsList\">\n        <div className=\"NotificationList-header\">\n          <h4 className=\"App-titleControl App-titleControl--text\">{app.translator.trans('blomstra-gdpr.forum.erasure_requests.title')}</h4>\n        </div>\n        <div className=\"NotificationList-content\">\n          <ul className=\"NotificationGroup-content\">\n            {erasureRequests.length ? (\n              erasureRequests.map((request) => {\n                return (\n                  <li>\n                    <a onclick={this.showModal.bind(this, request)} className=\"Notification Request\">\n                      {avatar(request.user())}\n                      {icon('fas fa-user-edit', { className: 'Notification-icon' })}\n                      <span className=\"Notification-content\">\n                        {app.translator.trans(`blomstra-gdpr.forum.erasure_requests.item_text`, {\n                          name: username(request.user()),\n                        })}\n                      </span>\n                      {humanTime(request.createdAt())}\n                    </a>\n                  </li>\n                );\n              })\n            ) : !state.loading ? (\n              <div className=\"NotificationList-empty\">{app.translator.trans('blomstra-gdpr.forum.erasure_requests.empty_text')}</div>\n            ) : (\n              LoadingIndicator.component({ className: 'LoadingIndicator--block' })\n            )}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n\n  showModal(request) {\n    app.modal.show(ProcessErasureRequestModal, { request });\n  }\n}\n","import app from 'flarum/forum/app';\nimport NotificationsDropdown from 'flarum/common/components/NotificationsDropdown';\n\nimport ErasureRequestsList from './ErasureRequestsList';\n\nexport default class ErasureRequestsDropdown extends NotificationsDropdown {\n  static initAttrs(attrs) {\n    attrs.label = attrs.label || app.translator.trans('blomstra-gdpr.forum.erasure_requests.tooltip');\n    attrs.icon = attrs.icon || 'fas fa-user-minus';\n\n    super.initAttrs(attrs);\n  }\n\n  getMenu() {\n    return (\n      <div className={'Dropdown-menu ' + this.attrs.menuClassName} onclick={this.menuClick.bind(this)}>\n        {this.showing ? ErasureRequestsList.component({ state: this.attrs.state }) : ''}\n      </div>\n    );\n  }\n\n  goToRoute() {\n    m.route.set(app.route('erasure-requests'));\n  }\n\n  getUnreadCount() {\n    if (!this.attrs.state.requestsLoaded) {\n      return app.forum.attribute('erasureRequestCount');\n    }\n\n    return app.store.all('erasure-requests').length;\n  }\n\n  getNewCount() {\n    return this.getUnreadCount();\n  }\n}\n","export default class ErasureRequestsListState {\n  constructor(app) {\n    this.app = app;\n\n    this.loading = false;\n\n    this.requestsLoaded = false;\n  }\n\n  load() {\n    if (this.requestsLoaded) {\n      return;\n    }\n\n    this.loading = true;\n    m.redraw();\n\n    app.store\n      .find('user-erasure-requests')\n      .then(\n        () => (this.requestsLoaded = true),\n        () => {}\n      )\n      .then(() => {\n        this.loading = false;\n        m.redraw();\n      });\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/Notification'];","import app from 'flarum/forum/app';\nimport Notification from 'flarum/forum/components/Notification';\nimport Export from '../models/Export';\n\nexport default class ExportAvailableNotification extends Notification {\n  icon() {\n    return 'fas fa-file-export';\n  }\n\n  href() {\n    const exportModel = this.attrs.notification.subject() as Export;\n\n    // Building the full url scheme so that Mithril treats this as an external link, so the download will work correctly.\n    return app.forum.attribute('baseUrl') + app.route('gdpr.export', { file: exportModel.file() });\n  }\n\n  content() {\n    return app.translator.trans('blomstra-gdpr.forum.notification.export-ready');\n  }\n\n  excerpt() {\n    return null;\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/SettingsPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/FieldSet'];","import app from 'flarum/forum/app';\nimport Modal from 'flarum/common/components/Modal';\nimport Button from 'flarum/common/components/Button';\nimport extractText from 'flarum/common/utils/extractText';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport Stream from 'flarum/common/utils/Stream';\n\nexport default class RequestErasureModal extends Modal {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    this.reason = Stream('');\n    this.password = Stream('');\n  }\n\n  className() {\n    return 'RequestErasureModal Modal--small';\n  }\n\n  title() {\n    return app.translator.trans('blomstra-gdpr.forum.request_erasure.title');\n  }\n\n  content() {\n    return (\n      <div className=\"Modal-body\">\n        <div className=\"Form Form--centered\">{this.fields().toArray()}</div>\n      </div>\n    );\n  }\n\n  fields() {\n    const items = new ItemList();\n\n    const currRequest = app.session.user.erasureRequest();\n\n    if (currRequest) {\n      items.add(\n        'status',\n        <div className=\"Form-group\">\n          <p className=\"helpText\">{app.translator.trans(`blomstra-gdpr.forum.request_erasure.status.${currRequest.status()}`)}</p>\n        </div>\n      );\n\n      if (currRequest.reason()) {\n        items.add(\n          'reason',\n          <div className=\"Form-group\">\n            <p className=\"helpText\">{app.translator.trans('blomstra-gdpr.forum.request_erasure.reason', { reason: currRequest.reason() })}</p>\n          </div>\n        );\n      }\n\n      items.add(\n        'cancel',\n        <div className=\"Form-group\">\n          {Button.component(\n            {\n              className: 'Button Button--primary Button--block',\n              onclick: this.oncancel.bind(this),\n              loading: this.loading,\n            },\n            app.translator.trans('blomstra-gdpr.forum.request_erasure.cancel_button')\n          )}\n        </div>\n      );\n    } else {\n      items.add('text', <p className=\"helpText\">{app.translator.trans('blomstra-gdpr.forum.request_erasure.text')}</p>);\n\n      items.add(\n        'password',\n        <div className=\"Form-group\">\n          <input\n            type=\"password\"\n            className=\"FormControl\"\n            bidi={this.password}\n            placeholder={extractText(app.translator.trans('blomstra-gdpr.forum.request_erasure.password_label'))}\n          />\n        </div>\n      );\n\n      items.add(\n        'reason',\n        <div className=\"Form-group\">\n          <textarea\n            className=\"FormControl\"\n            value={this.reason()}\n            oninput={(e) => this.reason(e.target.value)}\n            placeholder={extractText(app.translator.trans('blomstra-gdpr.forum.request_erasure.reason_label'))}\n          ></textarea>\n        </div>\n      );\n\n      items.add(\n        'submit',\n        <div className=\"Form-group\">\n          {Button.component(\n            {\n              className: 'Button Button--primary Button--block',\n              type: 'submit',\n              loading: this.loading,\n            },\n            app.translator.trans('blomstra-gdpr.forum.request_erasure.request_button')\n          )}\n        </div>\n      );\n    }\n\n    return items;\n  }\n\n  oncancel(e) {\n    this.loading = true;\n    m.redraw();\n\n    app.session.user\n      .erasureRequest()\n      .delete()\n      .then(() => {\n        this.loading = false;\n        m.redraw();\n      });\n  }\n\n  data() {\n    // Status is set so that the proper confirmation message is displayed.\n    return {\n      reason: this.reason(),\n      status: 'user_confirmed',\n      relationships: { user: app.session.user },\n    };\n  }\n\n  onsubmit(e) {\n    e.preventDefault();\n\n    this.loading = true;\n\n    app.store\n      .createRecord('user-erasure-requests')\n      .save(this.data(), { meta: { password: this.password() } })\n      .then((erasureRequest) => {\n        app.session.user.pushData({ relationships: { erasureRequest } });\n        this.loading = false;\n        m.redraw();\n      })\n      .catch(() => {\n        this.loading = false;\n        m.redraw();\n      });\n  }\n}\n","import app from 'flarum/forum/app';\nimport Modal from 'flarum/common/components/Modal';\nimport Button from 'flarum/common/components/Button';\n\nexport default class RequestDataModal extends Modal {\n  className() {\n    return 'RequestDataModal Modal--small';\n  }\n\n  title() {\n    return app.translator.trans('blomstra-gdpr.forum.request_data.title');\n  }\n\n  content() {\n    return (\n      <div className=\"Modal-body\">\n        <div className=\"Form Form--centered\">\n          <p className=\"helpText\">{app.translator.trans('blomstra-gdpr.forum.request_data.text')}</p>\n          <div className=\"Form-group\">\n            {Button.component(\n              {\n                className: 'Button Button--primary Button--block',\n                type: 'submit',\n                loading: this.loading,\n              },\n              app.translator.trans('blomstra-gdpr.forum.request_data.request_button')\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  onsubmit(e) {\n    e.preventDefault();\n\n    this.loading = true;\n\n    app\n      .request({\n        method: 'POST',\n        url: app.forum.attribute('apiUrl') + '/gdpr/export',\n      })\n      .then(this.hide.bind(this), this.loaded.bind(this));\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extenders'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/models/User'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Model'];","import Model from 'flarum/common/Model';\nimport User from 'flarum/common/models/User';\n\nexport default class ErasureRequest extends Model {\n  status() {\n    return Model.attribute<string>('status').call(this);\n  }\n\n  reason() {\n    return Model.attribute<string>('reason').call(this);\n  }\n\n  createdAt() {\n    return Model.attribute('createdAt', Model.transformDate).call(this);\n  }\n\n  userConfirmedAt() {\n    return Model.attribute('userConfirmedAt', Model.transformDate).call(this);\n  }\n\n  processedAt() {\n    return Model.attribute('processedAt', Model.transformDate).call(this);\n  }\n\n  processorComment() {\n    return Model.attribute<string>('processorComment').call(this);\n  }\n\n  user() {\n    return Model.hasOne<User>('user').call(this);\n  }\n\n  processedBy() {\n    return Model.hasOne<User>('processedBy').call(this);\n  }\n}\n","import app from 'flarum/forum/app';\nimport Page from 'flarum/common/components/Page';\n\nimport ErasureRequestsList from './ErasureRequestsList';\n\nexport default class ErasureRequestsPage extends Page {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    app.history.push('erasure-requests');\n\n    app.erasureRequests.load();\n\n    this.bodyClass = 'App--ErasureRequests';\n  }\n\n  view() {\n    return (\n      <div className=\"ErasureRequestsPage\">\n        <ErasureRequestsList state={app.erasureRequests}></ErasureRequestsList>\n      </div>\n    );\n  }\n}\n","import Model from 'flarum/common/Model';\n\nexport default class Export extends Model {\n  file() {\n    return Model.attribute<string>('file').call(this);\n  }\n\n  destroysAt() {\n    return Model.attribute('destroysAt', Model.transformDate);\n  }\n}\n","import Extend from 'flarum/common/extenders';\nimport User from 'flarum/common/models/User';\nimport ErasureRequest from './models/ErasureRequest';\nimport ErasureRequestsPage from './components/ErasureRequestsPage';\nimport Export from './models/Export';\n\nexport default [\n  new Extend.Store() //\n    .add('user-erasure-requests', ErasureRequest)\n    .add('exports', Export),\n\n  new Extend.Model(User) //\n    .hasOne<ErasureRequest>('erasureRequest'),\n\n  new Extend.Routes() //\n    .add('erasure-requests', '/erasure-requests', ErasureRequestsPage)\n    .add('gdpr.export', '/gdpr/export/:file', ''),\n];\n","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport HeaderSecondary from 'flarum/forum/components/HeaderSecondary';\nimport Page from 'flarum/common/components/Page';\nimport ErasureRequestsDropdown from './components/ErasureRequestsDropdown';\nimport ErasureRequestsListState from './states/ErasureRequestsListState';\nimport ExportAvailableNotification from './components/ExportAvailableNotification';\nimport extendUserSettingsPage from './extenders/extendUserSettingsPage';\n\nexport { default as extend } from './extend';\n\napp.initializers.add('blomstra-gdpr', () => {\n  app.erasureRequests = new ErasureRequestsListState(app);\n\n  app.notificationComponents.gdprExportAvailable = ExportAvailableNotification;\n\n  extendUserSettingsPage();\n\n  extend(Page.prototype, 'oninit', function () {\n    if (m.route.param('erasureRequestConfirmed')) {\n      app.alerts.show({ type: 'success' }, app.translator.trans('blomstra-gdpr.forum.erasure_request_confirmed'));\n    }\n  });\n\n  extend(HeaderSecondary.prototype, 'items', function (items) {\n    if (app.forum.attribute('erasureRequestCount')) {\n      items.add('UsernameRequests', <ErasureRequestsDropdown state={app.erasureRequests} />, 20);\n    }\n  });\n});\n","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport SettingsPage from 'flarum/forum/components/SettingsPage';\nimport FieldSet from 'flarum/common/components/FieldSet';\nimport type Mithril from 'mithril';\nimport Button from 'flarum/common/components/Button';\nimport RequestErasureModal from '../components/RequestErasureModal';\nimport RequestDataModal from '../components/RequestDataModal';\n\nexport default function extendUserSettingsPage() {\n  extend(SettingsPage.prototype, 'settingsItems', function (items: ItemList<Mithril.Children>) {\n    const user = this.user;\n\n    if (!user) {\n      return;\n    }\n\n    items.add(\n      'dataItems',\n      <FieldSet className=\"Settings-gdpr\" label={app.translator.trans('blomstra-gdpr.forum.settings.data.heading')}>\n        {\n          /** @ts-ignore **/\n          this.dataItems().toArray()\n        }\n      </FieldSet>,\n      90\n    );\n  });\n\n  /** @ts-ignore */\n  SettingsPage.prototype.dataItems = function (): ItemList<Mithril.Children> {\n    const items = new ItemList<Mithril.Children>();\n\n    items.add(\n      'gdprErasure',\n      <div className=\"gdprErasure-container\">\n        <Button className=\"Button Button-gdprErasure\" icon=\"fas fa-user-minus\" onclick={() => app.modal.show(RequestErasureModal)}>\n          {app.translator.trans('blomstra-gdpr.forum.settings.request_erasure_button')}\n        </Button>\n        <p className=\"helpText\">{app.translator.trans('blomstra-gdpr.forum.settings.request_erasure_help')}</p>\n      </div>,\n      50\n    );\n\n    items.add(\n      'gdprExport',\n      <div className=\"gdprExport-container\">\n        <Button className=\"Button Button-gdprExport\" icon=\"fas fa-file-export\" onclick={() => app.modal.show(RequestDataModal)}>\n          {app.translator.trans('blomstra-gdpr.forum.settings.export_data_button')}\n        </Button>\n        <p className=\"helpText\">{app.translator.trans('blomstra-gdpr.forum.settings.export_data_help')}</p>\n      </div>,\n      40\n    );\n\n    return items;\n  };\n}\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","_setPrototypeOf","p","setPrototypeOf","bind","__proto__","_inheritsLoose","subClass","superClass","create","constructor","ProcessErasureRequestModal","oninit","vnode","this","comments","Stream","loading","className","title","app","trans","content","fields","toArray","items","ItemList","add","name","username","attrs","request","user","oninput","e","target","placeholder","extractText","attribute","Button","type","anonymization","onclick","onsubmit","deletion","mode","preventDefault","confirm","MediaSource","m","redraw","save","processor_comment","meta","then","erasureRequest","remove","hide","Modal","ErasureRequestsList","view","erasureRequests","all","state","length","map","showModal","avatar","icon","humanTime","createdAt","LoadingIndicator","show","Component","ErasureRequestsDropdown","initAttrs","label","getMenu","menuClassName","menuClick","showing","component","goToRoute","route","set","getUnreadCount","requestsLoaded","getNewCount","NotificationsDropdown","ErasureRequestsListState","load","store","find","ExportAvailableNotification","href","exportModel","notification","subject","file","excerpt","Notification","RequestErasureModal","reason","password","currRequest","status","oncancel","bidi","data","relationships","createRecord","pushData","RequestDataModal","method","url","loaded","ErasureRequest","Model","userConfirmedAt","processedAt","processorComment","processedBy","ErasureRequestsPage","push","bodyClass","Page","Export","destroysAt","Extend","User","hasOne","gdprExportAvailable","extend","SettingsPage","dataItems","param","HeaderSecondary"],"sourceRoot":""}