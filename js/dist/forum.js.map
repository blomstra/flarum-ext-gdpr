{"version":3,"file":"forum.js","mappings":"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","sources":["webpack://@blomstra/gdpr/webpack/bootstrap","webpack://@blomstra/gdpr/webpack/runtime/compat get default export","webpack://@blomstra/gdpr/webpack/runtime/define property getters","webpack://@blomstra/gdpr/webpack/runtime/hasOwnProperty shorthand","webpack://@blomstra/gdpr/webpack/runtime/make namespace object","webpack://@blomstra/gdpr/external root \"flarum.core.compat['forum/app']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/extend']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/Model']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/components/Button']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['forum/components/HeaderSecondary']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/components/Page']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['forum/components/SettingsPage']\"","webpack://@blomstra/gdpr/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@blomstra/gdpr/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@blomstra/gdpr/external root \"flarum.core.compat['components/Modal']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['components/Button']\"","webpack://@blomstra/gdpr/./src/forum/components/RequestDataModal.js","webpack://@blomstra/gdpr/external root \"flarum.core.compat['utils/extractText']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['utils/ItemList']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['utils/Stream']\"","webpack://@blomstra/gdpr/./src/forum/components/RequestErasureModal.js","webpack://@blomstra/gdpr/./src/forum/models/ErasureRequest.js","webpack://@blomstra/gdpr/external root \"flarum.core.compat['components/Page']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['Component']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['components/LoadingIndicator']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['helpers/avatar']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['helpers/icon']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['helpers/username']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['helpers/humanTime']\"","webpack://@blomstra/gdpr/./src/forum/components/ProcessErasureRequestModal.js","webpack://@blomstra/gdpr/./src/forum/components/ErasureRequestsList.js","webpack://@blomstra/gdpr/./src/forum/components/ErasureRequestsPage.js","webpack://@blomstra/gdpr/external root \"flarum.core.compat['components/NotificationsDropdown']\"","webpack://@blomstra/gdpr/./src/forum/components/ErasureRequestsDropdown.js","webpack://@blomstra/gdpr/./src/forum/states/ErasureRequestsListState.js","webpack://@blomstra/gdpr/./src/forum/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Model'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/HeaderSecondary'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Page'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/SettingsPage'];","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['components/Modal'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['components/Button'];","import Modal from 'flarum/components/Modal';\nimport Button from 'flarum/components/Button';\n\nexport default class RequestDataModal extends Modal {\n    className() {\n        return 'RequestDataModal Modal--small';\n    }\n\n    title() {\n        return app.translator.trans('blomstra-gdpr.forum.request_data.title');\n    }\n\n    content() {\n        return (\n            <div className=\"Modal-body\">\n                <div className=\"Form Form--centered\">\n                    <p className=\"helpText\">{app.translator.trans('blomstra-gdpr.forum.request_data.text')}</p>\n                    <div className=\"Form-group\">\n                        {Button.component({\n                            className: 'Button Button--primary Button--block',\n                            type: 'submit',\n                            loading: this.loading,\n                        }, app.translator.trans('blomstra-gdpr.forum.request_data.request_button'))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    onsubmit(e) {\n        e.preventDefault();\n\n        this.loading = true;\n\n        app\n            .request({\n                method: 'POST',\n                url: app.forum.attribute('apiUrl') + '/gdpr/export',\n            })\n            .then(this.hide.bind(this), this.loaded.bind(this));\n    }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['utils/extractText'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['utils/ItemList'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['utils/Stream'];","import Modal from 'flarum/components/Modal';\nimport Button from 'flarum/components/Button';\nimport extractText from 'flarum/utils/extractText';\nimport ItemList from 'flarum/utils/ItemList';\nimport Stream from 'flarum/utils/Stream';\n\nexport default class RequestErasureModal extends Modal {\n    oninit(vnode) {\n        super.oninit(vnode);\n\n        this.reason = Stream(\"\");\n        this.password = Stream(\"\");\n    }\n\n    className() {\n        return 'RequestErasureModal Modal--small';\n    }\n\n    title() {\n        return app.translator.trans('blomstra-gdpr.forum.request_erasure.title');\n    }\n\n    content() {\n        return (\n            <div className=\"Modal-body\">\n                <div className=\"Form Form--centered\">\n                    {this.fields().toArray()}\n                </div>\n            </div>\n        );\n    }\n\n    fields() {\n        const items = new ItemList();\n\n        const currRequest = app.session.user.erasureRequest();\n\n        if (currRequest) {\n            items.add(\n                'status',\n                <div className=\"Form-group\">\n                    <p className=\"helpText\">{app.translator.trans(`blomstra-gdpr.forum.request_erasure.status.${currRequest.status()}`)}</p>\n                </div>\n            );\n\n            if (currRequest.reason()) {\n                items.add(\n                    'reason',\n                    <div className=\"Form-group\">\n                        <p className=\"helpText\">{app.translator.trans('blomstra-gdpr.forum.request_erasure.reason', { reason: currRequest.reason() })}</p>\n                    </div>\n                );\n            }\n\n            items.add(\n                'cancel',\n                <div className=\"Form-group\">\n                    {Button.component({\n                        className: 'Button Button--primary Button--block',\n                        onclick: this.oncancel.bind(this),\n                        loading: this.loading,\n                    }, app.translator.trans('blomstra-gdpr.forum.request_erasure.cancel_button'))}\n                </div>\n            );\n        } else {\n            items.add(\n                'text',\n                <p className=\"helpText\">{app.translator.trans('blomstra-gdpr.forum.request_erasure.text')}</p>\n            );\n\n            items.add(\n                'password',\n                <div className=\"Form-group\">\n                    <input\n                        type=\"password\"\n                        className=\"FormControl\"\n                        bidi={this.password}\n                        placeholder={extractText(app.translator.trans('blomstra-gdpr.forum.request_erasure.password_label'))}\n                    />\n                </div>\n            );\n\n            items.add(\n                'reason',\n                <div className=\"Form-group\">\n                    <textarea\n                        className=\"FormControl\"\n                        value={this.reason()}\n                        oninput={(e) => this.reason(e.target.value)}\n                        placeholder={extractText(app.translator.trans('blomstra-gdpr.forum.request_erasure.reason_label'))}\n                    ></textarea>\n                </div>\n            );\n\n            items.add(\n                'submit',\n                <div className=\"Form-group\">\n                    {Button.component({\n                        className: 'Button Button--primary Button--block',\n                        type: 'submit',\n                        loading: this.loading,\n                    }, app.translator.trans('blomstra-gdpr.forum.request_erasure.request_button'))}\n                </div>\n            );\n        }\n\n        return items;\n    }\n\n    oncancel(e) {\n        this.loading = true;\n        m.redraw();\n\n        app.session.user\n            .erasureRequest()\n            .delete()\n            .then(() => {\n                this.loading = false;\n                m.redraw();\n            });\n    }\n\n    data() {\n        // Status is set so that the proper confirmation message is displayed.\n        return {\n            reason: this.reason(),\n            status: 'user_confirmed',\n            relationships: { user: app.session.user }\n        }\n    }\n\n    onsubmit(e) {\n        e.preventDefault();\n\n        this.loading = true;\n\n        app.store\n            .createRecord('user-erasure-requests')\n            .save(this.data(), { meta: { password: this.password() } })\n            .then(erasureRequest => {\n                app.session.user.pushData({ relationships: { erasureRequest } });\n                this.loading = false;\n                m.redraw();\n            })\n            .catch(() => {\n                this.loading = false;\n                m.redraw();\n            });\n    }\n}\n","import Model from 'flarum/common/Model';\n\nexport default class ErasureRequest extends Model { }\n\nObject.assign(ErasureRequest.prototype, {\n    status: Model.attribute('status'),\n    reason: Model.attribute('reason'),\n    createdAt: Model.attribute('createdAt', Model.transformDate),\n    userConfirmedAt: Model.attribute('userConfirmedAt', Model.transformDate),\n    processedAt: Model.attribute('processedAt', Model.transformDate),\n    processorComment: Model.attribute('processorComment'),\n\n    user: Model.hasOne('user'),\n    processedBy: Model.hasOne('processedBy'),\n});\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['components/Page'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['Component'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['components/LoadingIndicator'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['helpers/avatar'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['helpers/icon'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['helpers/username'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['helpers/humanTime'];","import Modal from 'flarum/components/Modal';\nimport Button from 'flarum/components/Button';\nimport username from 'flarum/helpers/username';\nimport extractText from 'flarum/utils/extractText';\nimport ItemList from 'flarum/utils/ItemList';\nimport Stream from 'flarum/utils/Stream';\n\nexport default class ProcessErasureRequestModal extends Modal {\n    oninit(vnode) {\n        super.oninit(vnode);\n\n        this.comments = Stream(\"\");\n\n        this.loading = {};\n    }\n\n    className() {\n        return 'ProcessErasureRequestModal Modal--small';\n    }\n\n    title() {\n        return app.translator.trans('blomstra-gdpr.forum.process_erasure.title');\n    }\n\n    content() {\n        return (\n            <div className=\"Modal-body\">\n                <div className=\"Form Form--centered\">\n                    {this.fields().toArray()}\n                </div>\n            </div>\n        );\n    }\n\n    fields() {\n        const items = new ItemList();\n\n        items.add(\n            'text',\n            <p className=\"helpText\">{app.translator.trans('blomstra-gdpr.forum.process_erasure.text', { name: username(this.attrs.request.user()) })}</p>\n        );\n\n\n        items.add(\n            'comments',\n            <div className=\"Form-group\">\n                <textarea\n                    className=\"FormControl\"\n                    value={this.comments()}\n                    oninput={(e) => this.comments(e.target.value)}\n                    placeholder={extractText(app.translator.trans('blomstra-gdpr.forum.process_erasure.comments_label'))}\n                ></textarea>\n            </div>\n        );\n\n        if (app.forum.attribute('erasureAnonymizationAllowed')) {\n            items.add(\n                'anonymize',\n                <div className=\"Form-group\">\n                    {Button.component({\n                        className: 'Button Button--primary Button--block',\n                        type: 'submit',\n                        loading: this.loading.anonymization,\n                        onclick: e => this.onsubmit(e, 'anonymization')\n                    }, app.translator.trans('blomstra-gdpr.forum.process_erasure.anonymization_button'))}\n                </div>\n            );\n        }\n\n        if (app.forum.attribute('erasureDeletionAllowed')) {\n            items.add(\n                'delete',\n                <div className=\"Form-group\">\n\n                    {Button.component({\n                        className: 'Button Button--danger Button--block',\n                        type: 'submit',\n                        loading: this.loading.deletion,\n                        onclick: e => this.onsubmit(e, 'deletion')\n                    }, app.translator.trans('blomstra-gdpr.forum.process_erasure.deletion_button'))}\n                </div>\n            );\n        }\n\n        return items;\n    }\n\n    onsubmit(e, mode) {\n        e.preventDefault();\n\n        if (!confirm(app.translator.trans('blomstra-gdpr.forum.process_erasure.confirm', { name: extractText(username(this.attrs.request.user())), mode: extractText(mode) }))) {\n            return;\n        }\n\n        this.loading[MediaSource] = true;\n        m.redraw();\n\n        this.attrs.request\n            .save({ processor_comment: this.comments() }, { meta: { mode } })\n            .then(erasureRequest => {\n                app.store.remove(erasureRequest);\n                this.loading[MediaSource] = false;\n                m.redraw();\n                this.hide();\n            })\n            .catch(() => {\n                this.loading[MediaSource] = false;\n                m.redraw();\n            });\n    }\n}\n","/*\n *\n *  This file is part of fof/erasurerequests.\n *\n *  Copyright (c) 2019 FriendsOfFlarum.\n *\n *  For the full copyright and license information, please view the LICENSE.md\n *  file that was distributed with this source code.\n *\n */\n\nimport Component from 'flarum/Component';\nimport LoadingIndicator from 'flarum/components/LoadingIndicator';\nimport avatar from 'flarum/helpers/avatar';\nimport icon from 'flarum/helpers/icon';\nimport username from 'flarum/helpers/username';\nimport humanTime from 'flarum/helpers/humanTime';\n\nimport ProcessErasureRequestModal from './ProcessErasureRequestModal';\n\nexport default class ErasureRequestsList extends Component {\n    view() {\n        const erasureRequests = app.store.all('user-erasure-requests');\n        const state = this.attrs.state;\n\n        return (\n            <div className=\"NotificationList ErasureRequestsList\">\n                <div className=\"NotificationList-header\">\n                    <h4 className=\"App-titleControl App-titleControl--text\">{app.translator.trans('blomstra-gdpr.forum.erasure_requests.title')}</h4>\n                </div>\n                <div className=\"NotificationList-content\">\n                    <ul className=\"NotificationGroup-content\">\n                        {erasureRequests.length ? (\n                            erasureRequests.map((request) => {\n                                return (\n                                    <li>\n                                        <a onclick={this.showModal.bind(this, request)} className=\"Notification Request\">\n                                            {avatar(request.user())}\n                                            {icon('fas fa-user-edit', { className: 'Notification-icon' })}\n                                            <span className=\"Notification-content\">\n                                                {app.translator.trans(`blomstra-gdpr.forum.erasure_requests.item_text`, {\n                                                    name: username(request.user()),\n                                                })}\n                                            </span>\n                                            {humanTime(request.createdAt())}\n                                        </a>\n                                    </li>\n                                );\n                            })\n                        ) : !state.loading ? (\n                            <div className=\"NotificationList-empty\">{app.translator.trans('blomstra-gdpr.forum.erasure_requests.empty_text')}</div>\n                        ) : (\n                            LoadingIndicator.component({ className: 'LoadingIndicator--block' })\n                        )}\n                    </ul>\n                </div>\n            </div>\n        );\n    }\n\n    showModal(request) {\n        app.modal.show(ProcessErasureRequestModal, { request });\n    }\n}\n","/*\n *\n *  This file is part of fof/erasurerequests.\n *\n *  Copyright (c) 2019 FriendsOfFlarum.\n *\n *  For the full copyright and license information, please view the LICENSE.md\n *  file that was distributed with this source code.\n *\n */\n\nimport Page from 'flarum/components/Page';\n\nimport ErasureRequestsList from './ErasureRequestsList';\n\nexport default class ErasureRequestsPage extends Page {\n    oninit(vnode) {\n        super.oninit(vnode);\n\n        app.history.push('erasure-requests');\n\n        app.erasureRequests.load();\n\n        this.bodyClass = 'App--ErasureRequests';\n    }\n\n    view() {\n        return (\n            <div className=\"ErasureRequestsPage\">\n                <ErasureRequestsList state={app.erasureRequests}></ErasureRequestsList>\n            </div>\n        );\n    }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['components/NotificationsDropdown'];","/*\n *\n *  This file is part of fof/erasurerequests.\n *\n *  Copyright (c) 2019 FriendsOfFlarum.\n *\n *  For the full copyright and license information, please view the LICENSE.md\n *  file that was distributed with this source code.\n *\n */\n\nimport NotificationsDropdown from 'flarum/components/NotificationsDropdown';\n\nimport ErasureRequestsList from './ErasureRequestsList';\n\nexport default class ErasureRequestsDropdown extends NotificationsDropdown {\n    static initAttrs(attrs) {\n        attrs.label = attrs.label || app.translator.trans('blomstra-gdpr.forum.erasure_requests.tooltip');\n        attrs.icon = attrs.icon || 'fas fa-user-minus';\n\n        super.initAttrs(attrs);\n    }\n\n    getMenu() {\n        return (\n            <div className={'Dropdown-menu ' + this.attrs.menuClassName} onclick={this.menuClick.bind(this)}>\n                {this.showing ? ErasureRequestsList.component({ state: this.attrs.state }) : ''}\n            </div>\n        );\n    }\n\n    goToRoute() {\n        m.route.set(app.route('erasure-requests'));\n    }\n\n    getUnreadCount() {\n        if (!this.attrs.state.requestsLoaded) {\n            return app.forum.attribute('erasureRequestCount');\n        }\n\n        return app.store.all('erasure-requests').length;\n    }\n\n    getNewCount() {\n        return this.getUnreadCount();\n    }\n}\n","export default class ErasureRequestsListState {\n    constructor(app) {\n        this.app = app;\n\n        this.loading = false;\n\n        this.requestsLoaded = false;\n    }\n\n    load() {\n        if (this.requestsLoaded) {\n            return;\n        }\n\n        this.loading = true;\n        m.redraw();\n\n        app.store\n            .find('user-erasure-requests')\n            .then(\n                () => (this.requestsLoaded = true),\n                () => {}\n            )\n            .then(() => {\n                this.loading = false;\n                m.redraw();\n            });\n    }\n}\n","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport Model from 'flarum/common/Model';\nimport Button from 'flarum/common/components/Button';\nimport HeaderSecondary from 'flarum/forum/components/HeaderSecondary';\nimport Page from 'flarum/common/components/Page';\nimport SettingsPage from 'flarum/forum/components/SettingsPage';\nimport RequestDataModal from './components/RequestDataModal';\nimport RequestErasureModal from './components/RequestErasureModal';\nimport ErasureRequest from './models/ErasureRequest';\nimport ErasureRequestsPage from './components/ErasureRequestsPage';\nimport ErasureRequestsDropdown from './components/ErasureRequestsDropdown';\nimport ErasureRequestsListState from './states/ErasureRequestsListState';\n\n\napp.initializers.add(\n    'blomstra-gdpr',\n    () => {\n        app.store.models['user-erasure-requests'] = ErasureRequest;\n        app.store.models.users.prototype.erasureRequest = Model.hasOne('erasureRequest');\n\n        app.routes['erasure-requests'] = { path: '/erasure-requests', component: ErasureRequestsPage };\n\n        app.erasureRequests = new ErasureRequestsListState(app);\n\n        extend(Page.prototype, 'oninit', function () {\n            if (m.route.param('erasureRequestConfirmed')) {\n                app.alerts.show({ type: 'success' }, app.translator.trans('blomstra-gdpr.forum.erasure_request_confirmed'));\n            }\n        });\n\n        extend(SettingsPage.prototype, 'accountItems', function (items) {\n            items.add(\n                'gdprErasure',\n                Button.component({\n                    className: 'Button',\n                    onclick: () => app.modal.show(RequestErasureModal),\n                }, app.translator.trans('blomstra-gdpr.forum.settings.request_erasure_button'))\n            );\n        });\n\n        extend(SettingsPage.prototype, 'accountItems', function (items) {\n            items.add(\n                'gdprExport',\n                Button.component({\n                    className: 'Button',\n                    onclick: () => app.modal.show(RequestDataModal),\n                }, app.translator.trans('blomstra-gdpr.forum.settings.export_data_button'))\n            );\n        });\n\n        extend(HeaderSecondary.prototype, 'items', function (items) {\n            if (app.forum.attribute('erasureRequestCount')) {\n                items.add('UsernameRequests', <ErasureRequestsDropdown state={app.erasureRequests} />, 20);\n            }\n        });\n    }\n);\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","_setPrototypeOf","p","setPrototypeOf","bind","__proto__","_inheritsLoose","subClass","superClass","create","constructor","RequestDataModal","className","title","app","translator","trans","content","Button","type","loading","this","onsubmit","e","preventDefault","request","method","url","forum","attribute","then","hide","loaded","Modal","RequestErasureModal","oninit","vnode","reason","Stream","password","fields","toArray","items","ItemList","currRequest","session","user","erasureRequest","add","status","onclick","oncancel","bidi","placeholder","extractText","oninput","target","m","redraw","data","relationships","store","createRecord","save","meta","pushData","ErasureRequest","Model","assign","createdAt","userConfirmedAt","processedAt","processorComment","processedBy","ProcessErasureRequestModal","comments","name","username","attrs","anonymization","deletion","mode","confirm","MediaSource","processor_comment","remove","ErasureRequestsList","view","erasureRequests","all","state","length","map","showModal","avatar","icon","humanTime","LoadingIndicator","modal","show","Component","ErasureRequestsPage","history","push","load","bodyClass","Page","ErasureRequestsDropdown","initAttrs","label","getMenu","menuClassName","menuClick","showing","component","goToRoute","route","set","getUnreadCount","requestsLoaded","getNewCount","NotificationsDropdown","ErasureRequestsListState","find","path","extend","param","SettingsPage","HeaderSecondary"],"sourceRoot":""}