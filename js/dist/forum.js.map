{"version":3,"file":"forum.js","mappings":"MACA,IAAIA,EAAsB,CCA1BA,EAAyBC,IACxB,IAAIC,EAASD,GAAUA,EAAOE,WAC7B,IAAOF,EAAiB,QACxB,IAAM,EAEP,OADAD,EAAoBI,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CAAM,ECLdF,EAAwB,CAACM,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXP,EAAoBS,EAAEF,EAAYC,KAASR,EAAoBS,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDR,EAAwB,CAACc,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFf,EAAyBM,IACH,oBAAXa,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAeL,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAeL,EAAS,aAAc,CAAEe,OAAO,GAAO,G,sDCL9D,MAAM,EAA+BC,OAAOC,KAAKC,OAAO,a,aCEnCC,EAAwB,oBAAAA,IAAA,KAC3CC,SAAmB,EAAK,KACxBC,gBAA0B,CAAK,CAoB9B,OApB8BF,EAAAT,UAE/BY,KAAA,WAAO,IAAAC,EAAA,KACDC,KAAKH,iBAITG,KAAKJ,SAAU,EACfK,EAAEC,SAEFC,IAAAA,MACGC,KAAK,yBACLC,MACC,kBAAON,EAAKF,gBAAiB,CAAI,IACjC,WAAO,IAERQ,MAAK,WACJN,EAAKH,SAAU,EACfK,EAAEC,QACJ,IACJ,EAACP,CAAA,CAtB0C,GCF9B,SAASW,EAAgB3B,EAAG4B,GAKzC,OAJAD,EAAkB1B,OAAO4B,eAAiB5B,OAAO4B,eAAeC,OAAS,SAAyB9B,EAAG4B,GAEnG,OADA5B,EAAE+B,UAAYH,EACP5B,CACT,EACO2B,EAAgB3B,EAAG4B,EAC5B,CCLe,SAASI,EAAeC,EAAUC,GAC/CD,EAAS1B,UAAYN,OAAOkC,OAAOD,EAAW3B,WAC9C0B,EAAS1B,UAAU6B,YAAcH,EACjCJ,EAAeI,EAAUC,EAC3B,CCLA,MAAM,EAA+BrB,OAAOC,KAAKC,OAAO,iC,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,2B,aCKnCsB,EAA2B,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAAC,MAAA,KAAAC,YAAA,KAAAR,EAAAK,EAAAC,GAAA,IAAAG,EAAAJ,EAAA9B,UAqB7C,OArB6CkC,EAC9CC,KAAA,WACE,MAAO,oBACT,EAACD,EAEDE,KAAA,WACE,IAAMC,EAAcvB,KAAKwB,MAAMC,aAAaC,UAG5C,OAAOvB,IAAAA,MAAUwB,UAAU,WAAU,gBAAmBJ,EAAYK,MACtE,EAACR,EAEDS,QAAA,WACE,IAAMJ,EAAezB,KAAKwB,MAAMC,aAChC,OAAOtB,IAAAA,WAAe2B,MAAM,gDAAiD,CAC3EC,SAAUA,IAASN,EAAaO,aAEpC,EAACZ,EAEDa,QAAA,WACE,OAAO,IACT,EAACjB,CAAA,CArB6C,CAASkB,KCLzD,MAAM,EAA+B1C,OAAOC,KAAKC,OAAO,iBCAlD,EAA+BF,OAAOC,KAAKC,OAAO,yB,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,iC,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,8B,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,4B,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,2B,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,4B,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,uB,aCOnCyC,EAAmB,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAAlB,MAAA,KAAAC,YAAA,KAAAR,EAAAwB,EAAAC,GAAA,IAAAhB,EAAAe,EAAAjD,UAiJrC,OAjJqCkC,EACtCiB,OAAA,SAAOC,GACLF,EAAAlD,UAAMmD,OAAMjD,KAAC,KAAAkD,GAEbtC,KAAKuC,OAASC,IAAO,IACrBxC,KAAKyC,SAAWD,IAAO,GACzB,EAACpB,EAEDsB,UAAA,WACE,MAAO,kCACT,EAACtB,EAEDuB,MAAA,WACE,OAAOxC,IAAAA,WAAe2B,MAAM,4CAC9B,EAACV,EAEDS,QAAA,WACE,OACE5B,EAAA,OAAKyC,UAAU,cACbzC,EAAA,OAAKyC,UAAU,uBAAuB1C,KAAK4C,SAASC,WAG1D,EAACzB,EAEDwB,OAAA,WAAS,IAAA7C,EAAA,KACD+C,EAAQ,IAAIC,KAEZC,EAAc7C,IAAAA,QAAY8C,KAAKC,iBA4ErC,OA1EIF,GACFF,EAAMK,IACJ,SACAlD,EAAA,OAAKyC,UAAU,cACbzC,EAAA,KAAGyC,UAAU,YAAYvC,IAAAA,WAAe2B,MAAM,8CAA8CkB,EAAYI,aAIxGJ,EAAYT,UACdO,EAAMK,IACJ,SACAlD,EAAA,OAAKyC,UAAU,cACbzC,EAAA,KAAGyC,UAAU,YAAYvC,IAAAA,WAAe2B,MAAM,6CAA8C,CAAES,OAAQS,EAAYT,cAKxHO,EAAMK,IACJ,SACAlD,EAAA,OAAKyC,UAAU,cACZW,IAAAA,UACC,CACEX,UAAW,uCACXY,QAAStD,KAAKuD,SAAS9C,KAAKT,MAC5BJ,QAASI,KAAKJ,SAEhBO,IAAAA,WAAe2B,MAAM,0DAK3BgB,EAAMK,IAAI,OAAQlD,EAAA,KAAGyC,UAAU,YAAYvC,IAAAA,WAAe2B,MAAM,8CAE3D3B,IAAAA,MAAUwB,UAAU,uBACvBmB,EAAMK,IACJ,WACAlD,EAAA,OAAKyC,UAAU,cACbzC,EAAA,SACEuD,KAAK,WACLd,UAAU,cACVe,KAAMzD,KAAKyC,SACXiB,YAAaC,IAAYxD,IAAAA,WAAe2B,MAAM,2DAMtDgB,EAAMK,IACJ,SACAlD,EAAA,OAAKyC,UAAU,cACbzC,EAAA,YACEyC,UAAU,cACVnD,MAAOS,KAAKuC,SACZqB,QAAS,SAACC,GAAC,OAAK9D,EAAKwC,OAAOsB,EAAEC,OAAOvE,MAAM,EAC3CmE,YAAaC,IAAYxD,IAAAA,WAAe2B,MAAM,yDAKpDgB,EAAMK,IACJ,SACAlD,EAAA,OAAKyC,UAAU,cACZW,IAAAA,UACC,CACEX,UAAW,uCACXc,KAAM,SACN5D,QAASI,KAAKJ,SAEhBO,IAAAA,WAAe2B,MAAM,0DAMtBgB,CACT,EAAC1B,EAEDmC,SAAA,SAASM,GAAG,IAAAE,EAAA,KACV/D,KAAKJ,SAAU,EACfK,EAAEC,SAEFC,IAAAA,QAAY8C,KACTC,iBAAgB,SAEhB7C,MAAK,WACJ0D,EAAKnE,SAAU,EACfK,EAAEC,QACJ,GACJ,EAACkB,EAED4C,KAAA,WAEE,MAAO,CACLzB,OAAQvC,KAAKuC,SACba,OAAQ,iBACRa,cAAe,CAAEhB,KAAM9C,IAAAA,QAAY8C,MAEvC,EAAC7B,EAED8C,SAAA,SAASL,GAAG,IAAAM,EAAA,KACVN,EAAEO,iBAEFpE,KAAKJ,SAAU,EAEfO,IAAAA,MACGkE,aAAa,yBACbC,KAAKtE,KAAKgE,OAAQ,CAAEO,KAAM,CAAE9B,SAAUzC,KAAKyC,cAC3CpC,MAAK,SAAC6C,GACL/C,IAAAA,QAAY8C,KAAKuB,SAAS,CAAEP,cAAe,CAAEf,eAAAA,KAC7CiB,EAAKvE,SAAU,EACfK,EAAEC,QACJ,IAAE,OACK,WACLiE,EAAKvE,SAAU,EACfK,EAAEC,QACJ,GACJ,EAACiC,CAAA,CAjJqC,CAASsC,KCPjD,MAAM,EAA+BjF,OAAOC,KAAKC,OAAO,c,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,yB,aCYnCgF,EAAsB,SAAAtC,GAAA,SAAAsC,IAAA,QAAA3E,EAAA4E,EAAAxD,UAAAyD,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAA5D,UAAA4D,GACrC,OADqChF,EAAAqC,EAAAhD,KAAA8B,MAAAkB,EAAA,OAAA4C,OAAAH,KAAA,MACzC5B,UAAI,EAAAlD,CAAA,CADqCY,EAAA+D,EAAAtC,GACrC,IAAAhB,EAAAsD,EAAAxF,UAuDH,OAvDGkC,EAEJiB,OAAA,SAAOC,GACLF,EAAAlD,UAAMmD,OAAMjD,KAAC,KAAAkD,GAEbtC,KAAKiD,KAAOjD,KAAKwB,MAAMyB,IACzB,EAAC7B,EAEDsB,UAAA,WACE,MAAO,+BACT,EAACtB,EAEDuB,MAAA,WACE,OAAOxC,IAAAA,WAAe2B,MAAM,uCAAwC,CAClEC,SAAUA,IAAS/B,KAAKiD,OAE5B,EAAC7B,EAEDS,QAAA,WAAU,IAAAkC,EAAA,KACR,OACE9D,EAAA,OAAKyC,UAAU,cACbzC,EAAA,OAAKyC,UAAU,uBACbzC,EAAA,OAAKyC,UAAU,QAAQuC,IAAOjF,KAAKiD,OACnChD,EAAA,KAAGyC,UAAU,YAAYvC,IAAAA,WAAe2B,MAAM,wCAC9C7B,EAAA,OAAKyC,UAAU,cACbzC,EAACoD,IAAM,CACLX,UAAU,uCACVY,QAAS,kBAAMS,EAAKmB,eAAe,EACnCtF,QAASI,KAAKJ,QACduF,SAAUnF,KAAKJ,SAEdO,IAAAA,WAAe2B,MAAM,oDAMlC,EAACV,EAED8D,cAAA,WACElF,KAAKJ,SAAU,EAEfO,IAAAA,QACW,CACPiF,OAAQ,OACRC,IAAKlF,IAAAA,MAAUwB,UAAU,UAAY,eACrC2D,KAAM,CACJtB,KAAM,CACJuB,WAAY,CACVC,OAAQxF,KAAKiD,KAAKwC,UAKzBpF,KAAKL,KAAK0F,KAAKjF,KAAKT,MAAOA,KAAK2F,OAAOlF,KAAKT,MACjD,EAAC0E,CAAA,CAxDwC,CAASD,KCZpD,MAAM,EAA+BjF,OAAOC,KAAKC,OAAO,oC,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,0C,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,oB,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,sC,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,uB,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,4B,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,6B,aCenCkG,EAA0B,SAAAxD,GAAA,SAAAwD,IAAA,QAAA7F,EAAA4E,EAAAxD,UAAAyD,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAA5D,UAAA4D,GAItC,OAJsChF,EAAAqC,EAAAhD,KAAA8B,MAAAkB,EAAA,OAAA4C,OAAAH,KAAA,MAC7CgB,cAAQ,EAAA9F,EACR+F,sBAAgC,EAAK/F,EACrCgG,iBAA2B,EAAKhG,EAChCiG,aAAO,EAAAjG,CAAA,CAJsCY,EAAAiF,EAAAxD,GAItC,IAAAhB,EAAAwE,EAAA1G,UAgIN,OAhIMkC,EAEPiB,OAAA,SAAOC,GACLF,EAAAlD,UAAMmD,OAAMjD,KAAC,KAAAkD,GAEbtC,KAAKgG,QAAUhG,KAAKwB,MAAMwE,QAE1BhG,KAAK6F,SAAWrD,IAAO,GACzB,EAACpB,EAEDsB,UAAA,WACE,MAAO,0CACT,EAACtB,EAEDuB,MAAA,WACE,OAAOxC,IAAAA,WAAe2B,MAAM,4CAC9B,EAACV,EAEDS,QAAA,WACE,OACE5B,EAAA,OAAKyC,UAAU,cACbzC,EAAA,OAAKyC,UAAU,uBAAuB1C,KAAK4C,SAASC,WAG1D,EAACzB,EAEDwB,OAAA,WAAS,IAAAmB,EAAA,KACDjB,EAAQ,IAAIC,KAEZG,EAAiBlD,KAAKwB,MAAMwE,QA8DlC,OA5DAlD,EAAMK,IACJ,OACAlD,EAAA,WACEA,EAACgG,IAAQ,CAACvD,UAAU,mCAAmCO,KAAMjD,KAAKgG,QAAQ/C,SAC1EhD,EAAA,KAAGyC,UAAU,YAAYvC,IAAAA,WAAe2B,MAAM,2CAA4C,CAAEoE,KAAMnE,IAAS/B,KAAKgG,QAAQ/C,cAI9G,MAAdC,OAAc,EAAdA,EAAgBX,WACdO,EAAMK,IACJ,SACAlD,EAAA,KAAGyC,UAAU,YACXzC,EAAA,YAAOiD,EAAeX,YAI5BO,EAAMK,IACJ,WACAlD,EAAA,OAAKyC,UAAU,cACbzC,EAAA,YACEyC,UAAU,cACVnD,MAAOS,KAAK6F,WACZpC,KAAMzD,KAAK6F,SACXnC,YAAaC,IAAYxD,IAAAA,WAAe2B,MAAM,2DAKhD3B,IAAAA,MAAUwB,UAAU,gCACtBmB,EAAMK,IACJ,YACAlD,EAAA,OAAKyC,UAAU,cACZW,IAAAA,UACC,CACEX,UAAW,uCACX9C,QAASI,KAAK8F,qBACdxC,QAAS,kBAAMS,EAAKoC,QAAQ,gBAAgB,GAE9ChG,IAAAA,WAAe2B,MAAM,+DAMzB3B,IAAAA,MAAUwB,UAAU,2BACtBmB,EAAMK,IACJ,SACAlD,EAAA,OAAKyC,UAAU,cACZW,IAAAA,UACC,CACEX,UAAW,sCACX9C,QAASI,KAAK+F,gBACdzC,QAAS,kBAAMS,EAAKoC,QAAQ,WAAW,GAEzChG,IAAAA,WAAe2B,MAAM,0DAMtBgB,CACT,EAAC1B,EAED+E,QAAA,SAAQC,GAAc,IAAAjC,EAAA,KAEjBkC,QACClG,IAAAA,WAAe2B,MAAM,8CAA+C,CAClEoE,KAAMvC,IAAY5B,IAAS/B,KAAKgG,QAAQ/C,SACxCmD,KAAAA,OAOO,kBAATA,EACFpG,KAAK8F,sBAAuB,EAE5B9F,KAAK+F,iBAAkB,EAGzB9F,EAAEC,SAEFF,KAAKgG,QACF1B,KAAK,CAAEgC,kBAAmBtG,KAAK6F,WAAYtB,KAAM,CAAE6B,KAAAA,KACnD/F,MAAK,SAAC6C,GACL/C,IAAAA,MAAUoG,OAAOrD,GACjBiB,EAAK2B,sBAAuB,EAC5B3B,EAAK4B,iBAAkB,EACvB9F,EAAEC,SACFiE,EAAKuB,MACP,IAAE,OACK,WACLvB,EAAK2B,sBAAuB,EAC5B3B,EAAK4B,iBAAkB,EACvB9F,EAAEC,QACJ,IACJ,EAAC0F,CAAA,CApI4C,CAASnB,KCLnC+B,EAAmB,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAAvF,MAAA,KAAAC,YAAA,KAAAR,EAAA6F,EAAAC,GAAA,IAAArF,EAAAoF,EAAAtH,UA0CrC,OA1CqCkC,EACtCsF,KAAA,WAAO,IAAA3G,EAAA,KACC4G,EAAkBxG,IAAAA,MAAUyG,IAAI,yBAChCC,EAAQ7G,KAAKwB,MAAMqF,MAEzB,OACE5G,EAAA,OAAKyC,UAAU,wCACbzC,EAAA,OAAKyC,UAAU,2BACbzC,EAAA,MAAIyC,UAAU,2CAA2CvC,IAAAA,WAAe2B,MAAM,gDAEhF7B,EAAA,OAAKyC,UAAU,4BACbzC,EAAA,MAAIyC,UAAU,6BACXiE,EAAgB/B,OACf+B,EAAgBG,KAAI,SAACd,GACnB,OACE/F,EAAA,UACEA,EAAA,KAAGqD,QAASvD,EAAKgH,UAAUtG,KAAKV,EAAMiG,GAAUtD,UAAU,wBACvDuC,IAAOe,EAAQ/C,QACf5B,IAAK,mBAAoB,CAAEqB,UAAW,sBACvCzC,EAAA,QAAMyC,UAAU,wBACbvC,IAAAA,WAAe2B,MAAM,iDAAkD,CACtEoE,KAAMnE,IAASiE,EAAQ/C,WAG1B+D,IAAUhB,EAAQiB,cAI3B,IACGJ,EAAMjH,QAGTsH,IAAAA,UAA2B,CAAExE,UAAW,4BAFxCzC,EAAA,OAAKyC,UAAU,0BAA0BvC,IAAAA,WAAe2B,MAAM,sDAQ1E,EAACV,EAED2F,UAAA,SAAUf,GACR7F,IAAAA,MAAUgH,KAAKvB,EAA4B,CAAEI,QAAAA,GAC/C,EAACQ,CAAA,CA1CqC,CAASY,KCC5BC,EAAuB,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAApG,MAAA,KAAAC,YAAA,KAAAR,EAAA0G,EAAAC,GAAAD,EACnCE,UAAP,SAAiB/F,GACfA,EAAMgG,MAAQhG,EAAMgG,OAASrH,IAAAA,WAAe2B,MAAM,gDAClDN,EAAMH,KAAOG,EAAMH,MAAQ,oBAE3BiG,EAAMC,UAASnI,KAAC,KAAAoC,EAClB,EAAC,IAAAJ,EAAAiG,EAAAnI,UAwBA,OAxBAkC,EAEDqG,QAAA,WACE,OACExH,EAAA,OAAKyC,UAAW,iBAAmB1C,KAAKwB,MAAMkG,cAAepE,QAAStD,KAAK2H,UAAUlH,KAAKT,OACvFA,KAAK4H,QAAUpB,EAAoBqB,UAAU,CAAEhB,MAAO7G,KAAKwB,MAAMqF,QAAW,GAGnF,EAACzF,EAED0G,UAAA,WACE7H,EAAE8H,MAAMC,IAAI7H,IAAAA,MAAU,oBACxB,EAACiB,EAED6G,eAAA,WACE,OAAKjI,KAAKwB,MAAMqF,MAAMhH,eAIfM,IAAAA,MAAUyG,IAAI,oBAAoBhC,OAHhCzE,IAAAA,MAAUwB,UAAU,sBAI/B,EAACP,EAED8G,YAAA,WACE,OAAOlI,KAAKiI,gBACd,EAACZ,CAAA,CA9ByC,CAASc,KCXrD,MAAM,EAA+B3I,OAAOC,KAAKC,OAAO,0B,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,4B,cCWnC0I,GAAe,SAAAhG,GAAA,SAAAgG,IAAA,QAAArI,EAAA4E,EAAAxD,UAAAyD,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAA5D,UAAA4D,GAGF,OAHEhF,EAAAqC,EAAAhD,KAAA8B,MAAAkB,EAAA,OAAA4C,OAAAH,KAAA,MAClC5B,UAAI,EAAAlD,EACJ+F,sBAAgC,EAAK/F,EACrCgG,iBAA2B,EAAKhG,CAAA,CAHEY,EAAAyH,EAAAhG,GAGF,IAAAhB,EAAAgH,EAAAlJ,UAoG/B,OApG+BkC,EAEhCiB,OAAA,SAAOC,GACLF,EAAAlD,UAAMmD,OAAMjD,KAAC,KAAAkD,GAEbtC,KAAKiD,KAAOjD,KAAKwB,MAAMyB,IACzB,EAAC7B,EAEDsB,UAAA,WACE,MAAO,8BACT,EAACtB,EAEDuB,MAAA,WACE,OAAOxC,IAAAA,WAAe2B,MAAM,wCAAyC,CACnEC,SAAUA,IAAS/B,KAAKiD,OAE5B,EAAC7B,EAEDS,QAAA,WAAU,IAAAkC,EAAA,KACR,OACE9D,EAAA,OAAKyC,UAAU,cACbzC,EAAA,OAAKyC,UAAU,uBACbzC,EAAA,KAAGyC,UAAU,YACVvC,IAAAA,WAAe2B,MAAM,uCAAwC,CAC5DC,SAAUA,IAAS/B,KAAKiD,SAG5BhD,EAAA,OAAKyC,UAAU,cACbzC,EAACoD,IAAM,CACLX,UAAU,uCACVY,QAAS,kBAAMS,EAAKsE,gBAAgB,EACpCzI,QAASI,KAAKJ,QACduF,SAAUnF,KAAKJ,SAEdO,IAAAA,WAAe2B,MAAM,yDAGzB3B,IAAAA,MAAUwB,UAAU,gCAAkCxB,IAAAA,MAAUwB,UAAU,2BACzE1B,EAAA,WACEA,EAAA,OAAKyC,UAAU,cACbzC,EAACoD,IAAM,CACLX,UAAU,uBACVY,QAAS,kBAAMS,EAAKuE,gBAAgB,gBAAgB,EACpD1I,QAASI,KAAK8F,qBACdX,SAAUnF,KAAK8F,sBAEd3F,IAAAA,WAAe2B,MAAM,8DAG1B7B,EAAA,OAAKyC,UAAU,cACbzC,EAACoD,IAAM,CACLX,UAAU,sCACVY,QAAS,kBAAMS,EAAKuE,gBAAgB,WAAW,EAC/C1I,QAASI,KAAK+F,gBACdZ,SAAUnF,KAAK+F,iBAEd5F,IAAAA,WAAe2B,MAAM,2DAQtC,EAACV,EAEDiH,eAAA,WAAiB,IAAAlE,EAAA,KACfnE,KAAKJ,SAAU,EAEfI,KAAKiD,KAAI,SAAU5C,MACjB,WACE8D,EAAKuB,OACLvB,EAAKvE,SAAU,EACfK,EAAEC,QACJ,IACA,WAAO,GAEX,EAACkB,EAEDkH,gBAAA,SAAgBlC,GAAc,IAAAmC,EAAA,KACf,kBAATnC,EACFpG,KAAK8F,sBAAuB,EAE5B9F,KAAK+F,iBAAkB,EAGzB5F,IAAAA,QACW,CACPiF,OAAQ,SACRC,IAAKlF,IAAAA,MAAUwB,UAAU,UAAY,UAAY3B,KAAKiD,KAAKwC,KAAO,SAAWW,IAE9E/F,MACC,WACEkI,EAAK7C,OACL6C,EAAKzC,sBAAuB,EAC5ByC,EAAKxC,iBAAkB,EACvB9F,EAAEC,QACJ,IACA,iBAAM,EAAE,GAEd,EAACkI,CAAA,CAvGiC,CAAS3D,KCX7C,MAAM,GAA+BjF,OAAOC,KAAKC,OAAO,sB,eCAxD,MAAM,GAA+BF,OAAOC,KAAKC,OAAO,2B,eCAxD,MAAM,GAA+BF,OAAOC,KAAKC,OAAO,oB,eCKnC8I,GAAmB,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAAvH,MAAA,KAAAC,YAAA,KAAAR,EAAA6H,EAAAC,GAAA,IAAArH,EAAAoH,EAAAtJ,UAiBrC,OAjBqCkC,EACtCiB,OAAA,SAAOC,GACLmG,EAAAvJ,UAAMmD,OAAMjD,KAAC,KAAAkD,GAEbnC,IAAAA,QAAYuI,KAAK,oBAEjBvI,IAAAA,gBAAoBL,OAEpBE,KAAK2I,UAAY,sBACnB,EAACvH,EAEDsF,KAAA,WACE,OACEzG,EAAA,OAAKyC,UAAU,uBACbzC,EAACuG,EAAmB,CAACK,MAAO1G,IAAAA,kBAGlC,EAACqI,CAAA,CAjBqC,CAASI,KCLjD,MAAM,GAA+BpJ,OAAOC,KAAKC,OAAO,gB,eCGnCmJ,GAAc,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAA5H,MAAA,KAAAC,YAAA,KAAAR,EAAAkI,EAAAC,GAAA,IAAA1H,EAAAyH,EAAA3J,UAmChC,OAnCgCkC,EACjCgC,OAAA,WACE,OAAO2F,KAAAA,UAAwB,UAAU3J,KAAKY,KAChD,EAACoB,EAEDmB,OAAA,WACE,OAAOwG,KAAAA,UAAwB,UAAU3J,KAAKY,KAChD,EAACoB,EAED6F,UAAA,WACE,OAAO8B,KAAAA,UAAgB,YAAaA,KAAAA,eAAqB3J,KAAKY,KAChE,EAACoB,EAED4H,gBAAA,WACE,OAAOD,KAAAA,UAAgB,kBAAmBA,KAAAA,eAAqB3J,KAAKY,KACtE,EAACoB,EAED6H,YAAA,WACE,OAAOF,KAAAA,UAAgB,cAAeA,KAAAA,eAAqB3J,KAAKY,KAClE,EAACoB,EAED8H,iBAAA,WACE,OAAOH,KAAAA,UAAwB,oBAAoB3J,KAAKY,KAC1D,EAACoB,EAED+H,cAAA,WACE,OAAOJ,KAAAA,UAAwB,iBAAiB3J,KAAKY,KACvD,EAACoB,EAED6B,KAAA,WACE,OAAO8F,KAAAA,OAAmB,QAAQ3J,KAAKY,KACzC,EAACoB,EAEDgI,YAAA,WACE,OAAOL,KAAAA,OAAmB,eAAe3J,KAAKY,KAChD,EAAC6I,CAAA,CAnCgC,CAASE,MCAvBM,GAAM,SAAAP,GAAA,SAAAO,IAAA,OAAAP,EAAA5H,MAAA,KAAAC,YAAA,KAAAR,EAAA0I,EAAAP,GAAA,IAAA1H,EAAAiI,EAAAnK,UAmBxB,OAnBwBkC,EACzBQ,KAAA,WACE,OAAOmH,KAAAA,UAAwB,QAAQ3J,KAAKY,KAC9C,EAACoB,EAED6F,UAAA,WACE,OAAO8B,KAAAA,UAAgB,YAAaA,KAAAA,cACtC,EAAC3H,EAEDkI,WAAA,WACE,OAAOP,KAAAA,UAAgB,aAAcA,KAAAA,cACvC,EAAC3H,EAED6B,KAAA,WACE,OAAO8F,KAAAA,OAAmB,OAC5B,EAAC3H,EAEDmI,MAAA,WACE,OAAOR,KAAAA,OAAmB,QAC5B,EAACM,CAAA,CAnBwB,CAASN,MCEpC,WACE,IAAIS,KAAAA,QACDrG,IAAI,wBAAyB0F,IAC7B1F,IAAI,UAAWkG,IAElB,IAAIG,KAAAA,OAAaC,MACd9H,UAAmB,sBACnBA,UAAmB,cACnB+H,OAAuB,mBCR5B,GAAe,GAAf1E,OACK2E,GAAM,EAET,IAAIH,KAAAA,SACDrG,IAAI,mBAAoB,oBAAqBqF,MCElDrI,IAAAA,aAAiBgD,IAAI,iBAAiB,WACpChD,IAAAA,gBAAsB,IAAIR,EAE1BQ,IAAAA,uBAA2ByJ,oBAAsB5I,GCHjD2I,EAAAA,EAAAA,QAAOE,IAAAA,UAAwB,iBAAiB,SAAU/G,GAC3C9C,KAAKiD,MAMlBH,EAAMK,IACJ,YACAlD,EAAC6J,IAAQ,CAACpH,UAAU,gBAAgB8E,MAAOrH,IAAAA,WAAe2B,MAAM,8CAG5D9B,KAAK+J,YAAYlH,WAGrB,GAEJ,IAGAgH,IAAAA,UAAuBE,UAAY,WAAwC,IAAAhK,EAAA,KACnE+C,EAAQ,IAAIC,KA4BlB,OA1BAD,EAAMK,IACJ,cACAlD,EAAA,OAAKyC,UAAU,yBACbzC,EAACoD,IAAM,CAACX,UAAU,4BAA4BrB,KAAK,oBAAoBiC,QAAS,kBAAMnD,IAAAA,MAAUgH,KAAKhF,EAAoB,GACtHhC,IAAAA,WAAe2B,MAAM,wDAExB7B,EAAA,KAAGyC,UAAU,YAAYvC,IAAAA,WAAe2B,MAAM,uDAEhD,IAGFgB,EAAMK,IACJ,aACAlD,EAAA,OAAKyC,UAAU,wBACbzC,EAACoD,IAAM,CACLX,UAAU,2BACVrB,KAAK,qBACLiC,QAAS,kBAAMnD,IAAAA,MAAUgH,KAAKzC,EAAwB,CAAEzB,KAAMlD,EAAKkD,MAAO,GAEzE9C,IAAAA,WAAe2B,MAAM,oDAExB7B,EAAA,KAAGyC,UAAU,YAAYvC,IAAAA,WAAe2B,MAAM,mDAEhD,IAGKgB,CACT,GCvDA6G,EAAAA,EAAAA,QAAOK,IAAAA,UAA2B,SAAS,SAAUlH,GAC/C3C,IAAAA,MAAUwB,UAAU,wBACtBmB,EAAMK,IAAI,kBAAmBlD,EAACoH,EAAuB,CAACR,MAAO1G,IAAAA,kBAAyB,GAE1F,KCLAwJ,EAAAA,EAAAA,QAAOf,IAAAA,UAAgB,UAAU,WAC3B3I,EAAE8H,MAAMkC,MAAM,4BAChB9J,IAAAA,OAAWgH,KAAK,CAAE3D,KAAM,WAAarD,IAAAA,WAAe2B,MAAM,iDAE9D,KCEA6H,EAAAA,EAAAA,QAAOO,KAAc,sBAAsB,SAAUpH,EAAmCG,GAClFA,EAAKkH,sBACPrH,EAAMK,IACJ,cACAlD,EAACoD,IAAM,CAAChC,KAAK,qBAAqBiC,QAAS,kBAAMnD,IAAAA,MAAUgH,KAAKzC,EAAwB,CAAEzB,KAAAA,GAAO,GAC9F9C,IAAAA,WAAe2B,MAAM,oDAI9B,KAEA6H,EAAAA,EAAAA,QAAOO,KAAc,uBAAuB,SAAUpH,EAAmCG,GACvFH,EAAMyD,OAAO,UAETtD,EAAKmH,aACPtH,EAAMK,IACJ,aACAlD,EAACoD,IAAM,CAAChC,KAAK,gBAAgBiC,QAAS,kBAAMnD,IAAAA,MAAUgH,KAAKiB,GAAiB,CAAEnF,KAAAA,GAAO,GAClF9C,IAAAA,WAAe2B,MAAM,kDAI9B,KCzBA6H,EAAAA,EAAAA,QAAOF,KAAAA,UAAgB,UAAU,SAAUY,GACrCrK,KAAKsK,cACPD,EAAOlH,IACL,aACAlD,EAACsK,KAAK,CAAC/C,MAAOrH,IAAAA,WAAe2B,MAAM,8CAA+CT,KAAK,qBAAqBmC,KAAK,eAGvH,GLMF,G","sources":["webpack://@blomstra/gdpr/webpack/bootstrap","webpack://@blomstra/gdpr/webpack/runtime/compat get default export","webpack://@blomstra/gdpr/webpack/runtime/define property getters","webpack://@blomstra/gdpr/webpack/runtime/hasOwnProperty shorthand","webpack://@blomstra/gdpr/webpack/runtime/make namespace object","webpack://@blomstra/gdpr/external root \"flarum.core.compat['forum/app']\"","webpack://@blomstra/gdpr/./src/forum/states/ErasureRequestsListState.ts","webpack://@blomstra/gdpr/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@blomstra/gdpr/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@blomstra/gdpr/external root \"flarum.core.compat['forum/components/Notification']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/helpers/username']\"","webpack://@blomstra/gdpr/./src/forum/components/ExportAvailableNotification.ts","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/extend']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/utils/ItemList']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['forum/components/SettingsPage']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/components/FieldSet']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/components/Button']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/components/Modal']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/utils/extractText']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/utils/Stream']\"","webpack://@blomstra/gdpr/./src/forum/components/RequestErasureModal.js","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/app']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/helpers/avatar']\"","webpack://@blomstra/gdpr/./src/common/components/RequestDataExportModal.tsx","webpack://@blomstra/gdpr/external root \"flarum.core.compat['forum/components/HeaderSecondary']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['forum/components/NotificationsDropdown']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/Component']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/components/LoadingIndicator']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/helpers/icon']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/helpers/humanTime']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['forum/components/UserCard']\"","webpack://@blomstra/gdpr/./src/forum/components/ProcessErasureRequestModal.tsx","webpack://@blomstra/gdpr/./src/forum/components/ErasureRequestsList.js","webpack://@blomstra/gdpr/./src/forum/components/ErasureRequestsDropdown.tsx","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/components/Page']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['forum/utils/UserControls']\"","webpack://@blomstra/gdpr/./src/forum/components/DeleteUserModal.tsx","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/models/User']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/components/Badge']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/extenders']\"","webpack://@blomstra/gdpr/./src/forum/components/ErasureRequestsPage.js","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/Model']\"","webpack://@blomstra/gdpr/./src/common/models/ErasureRequest.ts","webpack://@blomstra/gdpr/./src/common/models/Export.ts","webpack://@blomstra/gdpr/./src/common/extend.ts","webpack://@blomstra/gdpr/./src/forum/extend.ts","webpack://@blomstra/gdpr/./src/forum/index.ts","webpack://@blomstra/gdpr/./src/forum/extenders/extendUserSettingsPage.tsx","webpack://@blomstra/gdpr/./src/forum/extenders/extendHeaderSecondary.tsx","webpack://@blomstra/gdpr/./src/forum/extenders/extendPage.ts","webpack://@blomstra/gdpr/./src/forum/extenders/extendUserControls.tsx","webpack://@blomstra/gdpr/./src/forum/addAnonymousBadges.tsx"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","import app from 'flarum/forum/app';\n\nexport default class ErasureRequestsListState {\n  loading: boolean = false;\n  requestsLoaded: boolean = false;\n\n  load() {\n    if (this.requestsLoaded) {\n      return;\n    }\n\n    this.loading = true;\n    m.redraw();\n\n    app.store\n      .find('user-erasure-requests')\n      .then(\n        () => (this.requestsLoaded = true),\n        () => {}\n      )\n      .then(() => {\n        this.loading = false;\n        m.redraw();\n      });\n  }\n}\n","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/Notification'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/username'];","import app from 'flarum/forum/app';\nimport Notification from 'flarum/forum/components/Notification';\nimport Export from '../../common/models/Export';\nimport username from 'flarum/common/helpers/username';\n\nexport default class ExportAvailableNotification extends Notification {\n  icon() {\n    return 'fas fa-file-export';\n  }\n\n  href() {\n    const exportModel = this.attrs.notification.subject() as Export;\n\n    // Building the full url scheme so that Mithril treats this as an external link, so the download will work correctly.\n    return app.forum.attribute('baseUrl') + `/gdpr/export/${exportModel.file()}`;\n  }\n\n  content() {\n    const notification = this.attrs.notification;\n    return app.translator.trans('blomstra-gdpr.forum.notification.export-ready', {\n      username: username(notification.fromUser()),\n    });\n  }\n\n  excerpt() {\n    return null;\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/ItemList'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/SettingsPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/FieldSet'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Modal'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/extractText'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/Stream'];","import app from 'flarum/forum/app';\nimport Modal from 'flarum/common/components/Modal';\nimport Button from 'flarum/common/components/Button';\nimport extractText from 'flarum/common/utils/extractText';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport Stream from 'flarum/common/utils/Stream';\n\nexport default class RequestErasureModal extends Modal {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    this.reason = Stream('');\n    this.password = Stream('');\n  }\n\n  className() {\n    return 'RequestErasureModal Modal--small';\n  }\n\n  title() {\n    return app.translator.trans('blomstra-gdpr.forum.request_erasure.title');\n  }\n\n  content() {\n    return (\n      <div className=\"Modal-body\">\n        <div className=\"Form Form--centered\">{this.fields().toArray()}</div>\n      </div>\n    );\n  }\n\n  fields() {\n    const items = new ItemList();\n\n    const currRequest = app.session.user.erasureRequest();\n\n    if (currRequest) {\n      items.add(\n        'status',\n        <div className=\"Form-group\">\n          <p className=\"helpText\">{app.translator.trans(`blomstra-gdpr.forum.request_erasure.status.${currRequest.status()}`)}</p>\n        </div>\n      );\n\n      if (currRequest.reason()) {\n        items.add(\n          'reason',\n          <div className=\"Form-group\">\n            <p className=\"helpText\">{app.translator.trans('blomstra-gdpr.forum.request_erasure.reason', { reason: currRequest.reason() })}</p>\n          </div>\n        );\n      }\n\n      items.add(\n        'cancel',\n        <div className=\"Form-group\">\n          {Button.component(\n            {\n              className: 'Button Button--primary Button--block',\n              onclick: this.oncancel.bind(this),\n              loading: this.loading,\n            },\n            app.translator.trans('blomstra-gdpr.forum.request_erasure.cancel_button')\n          )}\n        </div>\n      );\n    } else {\n      items.add('text', <p className=\"helpText\">{app.translator.trans('blomstra-gdpr.forum.request_erasure.text')}</p>);\n\n      if (!app.forum.attribute('passwordlessSignUp')) {\n        items.add(\n          'password',\n          <div className=\"Form-group\">\n            <input\n              type=\"password\"\n              className=\"FormControl\"\n              bidi={this.password}\n              placeholder={extractText(app.translator.trans('blomstra-gdpr.forum.request_erasure.password_label'))}\n            />\n          </div>\n        );\n      }\n\n      items.add(\n        'reason',\n        <div className=\"Form-group\">\n          <textarea\n            className=\"FormControl\"\n            value={this.reason()}\n            oninput={(e) => this.reason(e.target.value)}\n            placeholder={extractText(app.translator.trans('blomstra-gdpr.forum.request_erasure.reason_label'))}\n          ></textarea>\n        </div>\n      );\n\n      items.add(\n        'submit',\n        <div className=\"Form-group\">\n          {Button.component(\n            {\n              className: 'Button Button--primary Button--block',\n              type: 'submit',\n              loading: this.loading,\n            },\n            app.translator.trans('blomstra-gdpr.forum.request_erasure.request_button')\n          )}\n        </div>\n      );\n    }\n\n    return items;\n  }\n\n  oncancel(e) {\n    this.loading = true;\n    m.redraw();\n\n    app.session.user\n      .erasureRequest()\n      .delete()\n      .then(() => {\n        this.loading = false;\n        m.redraw();\n      });\n  }\n\n  data() {\n    // Status is set so that the proper confirmation message is displayed.\n    return {\n      reason: this.reason(),\n      status: 'user_confirmed',\n      relationships: { user: app.session.user },\n    };\n  }\n\n  onsubmit(e) {\n    e.preventDefault();\n\n    this.loading = true;\n\n    app.store\n      .createRecord('user-erasure-requests')\n      .save(this.data(), { meta: { password: this.password() } })\n      .then((erasureRequest) => {\n        app.session.user.pushData({ relationships: { erasureRequest } });\n        this.loading = false;\n        m.redraw();\n      })\n      .catch(() => {\n        this.loading = false;\n        m.redraw();\n      });\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/avatar'];","import app from 'flarum/common/app';\nimport Modal, { IInternalModalAttrs } from 'flarum/common/components/Modal';\nimport Button from 'flarum/common/components/Button';\nimport username from 'flarum/common/helpers/username';\nimport User from 'flarum/common/models/User';\nimport type Mithril from 'mithril';\nimport avatar from 'flarum/common/helpers/avatar';\n\ninterface RequestDataExportModalAttrs extends IInternalModalAttrs {\n  user: User;\n}\n\nexport default class RequestDataExportModal extends Modal<RequestDataExportModalAttrs> {\n  user!: User;\n\n  oninit(vnode: Mithril.Vnode<RequestDataExportModalAttrs>) {\n    super.oninit(vnode);\n\n    this.user = this.attrs.user;\n  }\n\n  className() {\n    return 'RequestDataModal Modal--small';\n  }\n\n  title() {\n    return app.translator.trans('blomstra-gdpr.lib.request_data.title', {\n      username: username(this.user),\n    });\n  }\n\n  content() {\n    return (\n      <div className=\"Modal-body\">\n        <div className=\"Form Form--centered\">\n          <div className=\"User\">{avatar(this.user)}</div>\n          <p className=\"helpText\">{app.translator.trans('blomstra-gdpr.lib.request_data.text')}</p>\n          <div className=\"Form-group\">\n            <Button\n              className=\"Button Button--primary Button--block\"\n              onclick={() => this.requestExport()}\n              loading={this.loading}\n              disabled={this.loading}\n            >\n              {app.translator.trans('blomstra-gdpr.lib.request_data.request_button')}\n            </Button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  requestExport() {\n    this.loading = true;\n\n    app\n      .request({\n        method: 'POST',\n        url: app.forum.attribute('apiUrl') + '/gdpr/export',\n        body: {\n          data: {\n            attributes: {\n              userId: this.user.id(),\n            },\n          },\n        },\n      })\n      .then(this.hide.bind(this), this.loaded.bind(this));\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/HeaderSecondary'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/NotificationsDropdown'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Component'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/LoadingIndicator'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/icon'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/humanTime'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/UserCard'];","import app from 'flarum/forum/app';\nimport Modal, { IInternalModalAttrs } from 'flarum/common/components/Modal';\nimport Button from 'flarum/common/components/Button';\nimport username from 'flarum/common/helpers/username';\nimport extractText from 'flarum/common/utils/extractText';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport Stream from 'flarum/common/utils/Stream';\nimport type Mithril from 'mithril';\nimport ErasureRequest from 'src/common/models/ErasureRequest';\nimport UserCard from 'flarum/forum/components/UserCard';\n\ninterface ProcessErasureRequestModalAttrs extends IInternalModalAttrs {\n  request: ErasureRequest;\n}\n\nexport default class ProcessErasureRequestModal extends Modal<ProcessErasureRequestModalAttrs> {\n  comments: Stream<string>;\n  loadingAnonymization: boolean = false;\n  loadingDeletion: boolean = false;\n  request!: ErasureRequest;\n\n  oninit(vnode: Mithril.Vnode<ProcessErasureRequestModalAttrs>) {\n    super.oninit(vnode);\n\n    this.request = this.attrs.request;\n\n    this.comments = Stream('');\n  }\n\n  className() {\n    return 'ProcessErasureRequestModal Modal--medium';\n  }\n\n  title() {\n    return app.translator.trans('blomstra-gdpr.forum.process_erasure.title');\n  }\n\n  content() {\n    return (\n      <div className=\"Modal-body\">\n        <div className=\"Form Form--centered\">{this.fields().toArray()}</div>\n      </div>\n    );\n  }\n\n  fields() {\n    const items = new ItemList<Mithril.Children>();\n\n    const erasureRequest = this.attrs.request;\n\n    items.add(\n      'text',\n      <div>\n        <UserCard className=\"UserCard--popover UserCard--gdpr\" user={this.request.user()} />\n        <p className=\"helpText\">{app.translator.trans('blomstra-gdpr.forum.process_erasure.text', { name: username(this.request.user()) })}</p>\n      </div>\n    );\n\n    erasureRequest?.reason() &&\n      items.add(\n        'reason',\n        <p className=\"helpText\">\n          <code>{erasureRequest.reason()}</code>\n        </p>\n      );\n\n    items.add(\n      'comments',\n      <div className=\"Form-group\">\n        <textarea\n          className=\"FormControl\"\n          value={this.comments()}\n          bidi={this.comments}\n          placeholder={extractText(app.translator.trans('blomstra-gdpr.forum.process_erasure.comments_label'))}\n        ></textarea>\n      </div>\n    );\n\n    if (app.forum.attribute('erasureAnonymizationAllowed')) {\n      items.add(\n        'anonymize',\n        <div className=\"Form-group\">\n          {Button.component(\n            {\n              className: 'Button Button--primary Button--block',\n              loading: this.loadingAnonymization,\n              onclick: () => this.process('anonymization'),\n            },\n            app.translator.trans('blomstra-gdpr.forum.process_erasure.anonymization_button')\n          )}\n        </div>\n      );\n    }\n\n    if (app.forum.attribute('erasureDeletionAllowed')) {\n      items.add(\n        'delete',\n        <div className=\"Form-group\">\n          {Button.component(\n            {\n              className: 'Button Button--danger Button--block',\n              loading: this.loadingDeletion,\n              onclick: () => this.process('deletion'),\n            },\n            app.translator.trans('blomstra-gdpr.forum.process_erasure.deletion_button')\n          )}\n        </div>\n      );\n    }\n\n    return items;\n  }\n\n  process(mode: string) {\n    if (\n      !confirm(\n        app.translator.trans('blomstra-gdpr.forum.process_erasure.confirm', {\n          name: extractText(username(this.request.user())),\n          mode,\n        }) as string\n      )\n    ) {\n      return;\n    }\n\n    if (mode === 'anonymization') {\n      this.loadingAnonymization = true;\n    } else {\n      this.loadingDeletion = true;\n    }\n\n    m.redraw();\n\n    this.request\n      .save({ processor_comment: this.comments(), meta: { mode } })\n      .then((erasureRequest) => {\n        app.store.remove(erasureRequest);\n        this.loadingAnonymization = false;\n        this.loadingDeletion = false;\n        m.redraw();\n        this.hide();\n      })\n      .catch(() => {\n        this.loadingAnonymization = false;\n        this.loadingDeletion = false;\n        m.redraw();\n      });\n  }\n}\n","import app from 'flarum/forum/app';\nimport Component from 'flarum/common/Component';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport avatar from 'flarum/common/helpers/avatar';\nimport icon from 'flarum/common/helpers/icon';\nimport username from 'flarum/common/helpers/username';\nimport humanTime from 'flarum/common/helpers/humanTime';\n\nimport ProcessErasureRequestModal from './ProcessErasureRequestModal';\n\nexport default class ErasureRequestsList extends Component {\n  view() {\n    const erasureRequests = app.store.all('user-erasure-requests');\n    const state = this.attrs.state;\n\n    return (\n      <div className=\"NotificationList ErasureRequestsList\">\n        <div className=\"NotificationList-header\">\n          <h4 className=\"App-titleControl App-titleControl--text\">{app.translator.trans('blomstra-gdpr.forum.erasure_requests.title')}</h4>\n        </div>\n        <div className=\"NotificationList-content\">\n          <ul className=\"NotificationGroup-content\">\n            {erasureRequests.length ? (\n              erasureRequests.map((request) => {\n                return (\n                  <li>\n                    <a onclick={this.showModal.bind(this, request)} className=\"Notification Request\">\n                      {avatar(request.user())}\n                      {icon('fas fa-user-edit', { className: 'Notification-icon' })}\n                      <span className=\"Notification-content\">\n                        {app.translator.trans(`blomstra-gdpr.forum.erasure_requests.item_text`, {\n                          name: username(request.user()),\n                        })}\n                      </span>\n                      {humanTime(request.createdAt())}\n                    </a>\n                  </li>\n                );\n              })\n            ) : !state.loading ? (\n              <div className=\"NotificationList-empty\">{app.translator.trans('blomstra-gdpr.forum.erasure_requests.empty_text')}</div>\n            ) : (\n              LoadingIndicator.component({ className: 'LoadingIndicator--block' })\n            )}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n\n  showModal(request) {\n    app.modal.show(ProcessErasureRequestModal, { request });\n  }\n}\n","import app from 'flarum/forum/app';\nimport NotificationsDropdown from 'flarum/forum/components/NotificationsDropdown';\n\nimport ErasureRequestsList from './ErasureRequestsList';\nimport { IDropdownAttrs } from 'flarum/common/components/Dropdown';\nimport ErasureRequestsListState from '../states/ErasureRequestsListState';\n\ninterface ErasureRequestsDropdownAttrs extends IDropdownAttrs {\n  state: ErasureRequestsListState;\n}\n\nexport default class ErasureRequestsDropdown extends NotificationsDropdown<ErasureRequestsDropdownAttrs> {\n  static initAttrs(attrs: ErasureRequestsDropdownAttrs) {\n    attrs.label = attrs.label || app.translator.trans('blomstra-gdpr.forum.erasure_requests.tooltip');\n    attrs.icon = attrs.icon || 'fas fa-user-minus';\n\n    super.initAttrs(attrs);\n  }\n\n  getMenu() {\n    return (\n      <div className={'Dropdown-menu ' + this.attrs.menuClassName} onclick={this.menuClick.bind(this)}>\n        {this.showing ? ErasureRequestsList.component({ state: this.attrs.state }) : ''}\n      </div>\n    );\n  }\n\n  goToRoute() {\n    m.route.set(app.route('erasure-requests'));\n  }\n\n  getUnreadCount(): number | undefined {\n    if (!this.attrs.state.requestsLoaded) {\n      return app.forum.attribute('erasureRequestCount');\n    }\n\n    return app.store.all('erasure-requests').length;\n  }\n\n  getNewCount() {\n    return this.getUnreadCount();\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Page'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/utils/UserControls'];","import app from 'flarum/forum/app';\nimport Modal, { IInternalModalAttrs } from 'flarum/common/components/Modal';\nimport User from 'flarum/common/models/User';\nimport type Mithril from 'mithril';\nimport username from 'flarum/common/helpers/username';\nimport Button from 'flarum/common/components/Button';\n\ninterface DeleteUserModalAttrs extends IInternalModalAttrs {\n  user: User;\n}\n\nexport default class DeleteUserModal extends Modal<DeleteUserModalAttrs> {\n  user!: User;\n  loadingAnonymization: boolean = false;\n  loadingDeletion: boolean = false;\n\n  oninit(vnode: Mithril.Vnode<DeleteUserModalAttrs>) {\n    super.oninit(vnode);\n\n    this.user = this.attrs.user;\n  }\n\n  className() {\n    return 'DeleteUserModal Modal--small';\n  }\n\n  title() {\n    return app.translator.trans('blomstra-gdpr.forum.delete_user.title', {\n      username: username(this.user),\n    });\n  }\n\n  content() {\n    return (\n      <div className=\"Modal-body\">\n        <div className=\"Form Form--centered\">\n          <p className=\"helpText\">\n            {app.translator.trans('blomstra-gdpr.forum.delete_user.text', {\n              username: username(this.user),\n            })}\n          </p>\n          <div className=\"Form-group\">\n            <Button\n              className=\"Button Button--primary Button--block\"\n              onclick={() => this.defaultErasure()}\n              loading={this.loading}\n              disabled={this.loading}\n            >\n              {app.translator.trans('blomstra-gdpr.forum.delete_user.modal_delete_button')}\n            </Button>\n          </div>\n          {app.forum.attribute('erasureAnonymizationAllowed') && app.forum.attribute('erasureDeletionAllowed') && (\n            <div>\n              <div className=\"Form-group\">\n                <Button\n                  className=\"Button Button--block\"\n                  onclick={() => this.specificErasure('anonymization')}\n                  loading={this.loadingAnonymization}\n                  disabled={this.loadingAnonymization}\n                >\n                  {app.translator.trans('blomstra-gdpr.forum.process_erasure.anonymization_button')}\n                </Button>\n              </div>\n              <div className=\"Form-group\">\n                <Button\n                  className=\"Button Button--danger Button--block\"\n                  onclick={() => this.specificErasure('deletion')}\n                  loading={this.loadingDeletion}\n                  disabled={this.loadingDeletion}\n                >\n                  {app.translator.trans('blomstra-gdpr.forum.process_erasure.deletion_button')}\n                </Button>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  defaultErasure() {\n    this.loading = true;\n\n    this.user.delete().then(\n      () => {\n        this.hide();\n        this.loading = false;\n        m.redraw();\n      },\n      () => {}\n    );\n  }\n\n  specificErasure(mode: string) {\n    if (mode === 'anonymization') {\n      this.loadingAnonymization = true;\n    } else {\n      this.loadingDeletion = true;\n    }\n\n    app\n      .request({\n        method: 'DELETE',\n        url: app.forum.attribute('apiUrl') + '/users/' + this.user.id() + '/gdpr/' + mode,\n      })\n      .then(\n        () => {\n          this.hide();\n          this.loadingAnonymization = false;\n          this.loadingDeletion = false;\n          m.redraw();\n        },\n        () => []\n      );\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/models/User'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Badge'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extenders'];","import app from 'flarum/forum/app';\nimport Page from 'flarum/common/components/Page';\n\nimport ErasureRequestsList from './ErasureRequestsList';\n\nexport default class ErasureRequestsPage extends Page {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    app.history.push('erasure-requests');\n\n    app.erasureRequests.load();\n\n    this.bodyClass = 'App--ErasureRequests';\n  }\n\n  view() {\n    return (\n      <div className=\"ErasureRequestsPage\">\n        <ErasureRequestsList state={app.erasureRequests}></ErasureRequestsList>\n      </div>\n    );\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Model'];","import Model from 'flarum/common/Model';\nimport User from 'flarum/common/models/User';\n\nexport default class ErasureRequest extends Model {\n  status() {\n    return Model.attribute<string>('status').call(this);\n  }\n\n  reason() {\n    return Model.attribute<string>('reason').call(this);\n  }\n\n  createdAt() {\n    return Model.attribute('createdAt', Model.transformDate).call(this);\n  }\n\n  userConfirmedAt() {\n    return Model.attribute('userConfirmedAt', Model.transformDate).call(this);\n  }\n\n  processedAt() {\n    return Model.attribute('processedAt', Model.transformDate).call(this);\n  }\n\n  processorComment() {\n    return Model.attribute<string>('processorComment').call(this);\n  }\n\n  processedMode() {\n    return Model.attribute<string>('processedMode').call(this);\n  }\n\n  user() {\n    return Model.hasOne<User>('user').call(this);\n  }\n\n  processedBy() {\n    return Model.hasOne<User>('processedBy').call(this);\n  }\n}\n","import Model from 'flarum/common/Model';\nimport User from 'flarum/common/models/User';\n\nexport default class Export extends Model {\n  file() {\n    return Model.attribute<string>('file').call(this);\n  }\n\n  createdAt() {\n    return Model.attribute('createdAt', Model.transformDate);\n  }\n\n  destroysAt() {\n    return Model.attribute('destroysAt', Model.transformDate);\n  }\n\n  user() {\n    return Model.hasOne<User>('user');\n  }\n\n  actor() {\n    return Model.hasOne<User>('actor');\n  }\n}\n","import Extend from 'flarum/common/extenders';\nimport User from 'flarum/common/models/User';\nimport ErasureRequest from './models/ErasureRequest';\nimport Export from './models/Export';\n\nexport default [\n  new Extend.Store() //\n    .add('user-erasure-requests', ErasureRequest)\n    .add('exports', Export),\n\n  new Extend.Model(User) //\n    .attribute<boolean>('canModerateExports')\n    .attribute<boolean>('anonymized')\n    .hasOne<ErasureRequest>('erasureRequest'),\n];\n","import Extend from 'flarum/common/extenders';\nimport ErasureRequestsPage from './components/ErasureRequestsPage';\n\nimport { default as extend } from '../common/extend';\n\nexport default [\n  ...extend,\n\n  new Extend.Routes() //\n    .add('erasure-requests', '/erasure-requests', ErasureRequestsPage),\n];\n","import app from 'flarum/forum/app';\nimport ErasureRequestsListState from './states/ErasureRequestsListState';\nimport ExportAvailableNotification from './components/ExportAvailableNotification';\nimport extendUserSettingsPage from './extenders/extendUserSettingsPage';\nimport extendHeaderSecondary from './extenders/extendHeaderSecondary';\nimport extendPage from './extenders/extendPage';\nimport extendUserControls from './extenders/extendUserControls';\nimport addAnonymousBadges from './addAnonymousBadges';\n\nexport { default as extend } from './extend';\n\napp.initializers.add('blomstra-gdpr', () => {\n  app.erasureRequests = new ErasureRequestsListState();\n\n  app.notificationComponents.gdprExportAvailable = ExportAvailableNotification;\n\n  extendUserSettingsPage();\n  extendHeaderSecondary();\n  extendPage();\n  extendUserControls();\n  addAnonymousBadges();\n});\n","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport SettingsPage from 'flarum/forum/components/SettingsPage';\nimport FieldSet from 'flarum/common/components/FieldSet';\nimport type Mithril from 'mithril';\nimport Button from 'flarum/common/components/Button';\nimport RequestErasureModal from '../components/RequestErasureModal';\nimport RequestDataExportModal from '../../common/components/RequestDataExportModal';\n\nexport default function extendUserSettingsPage() {\n  extend(SettingsPage.prototype, 'settingsItems', function (items: ItemList<Mithril.Children>) {\n    const user = this.user;\n\n    if (!user) {\n      return;\n    }\n\n    items.add(\n      'dataItems',\n      <FieldSet className=\"Settings-gdpr\" label={app.translator.trans('blomstra-gdpr.forum.settings.data.heading')}>\n        {\n          /** @ts-ignore **/\n          this.dataItems().toArray()\n        }\n      </FieldSet>,\n      90\n    );\n  });\n\n  /** @ts-ignore */\n  SettingsPage.prototype.dataItems = function (): ItemList<Mithril.Children> {\n    const items = new ItemList<Mithril.Children>();\n\n    items.add(\n      'gdprErasure',\n      <div className=\"gdprErasure-container\">\n        <Button className=\"Button Button-gdprErasure\" icon=\"fas fa-user-minus\" onclick={() => app.modal.show(RequestErasureModal)}>\n          {app.translator.trans('blomstra-gdpr.forum.settings.request_erasure_button')}\n        </Button>\n        <p className=\"helpText\">{app.translator.trans('blomstra-gdpr.forum.settings.request_erasure_help')}</p>\n      </div>,\n      50\n    );\n\n    items.add(\n      'gdprExport',\n      <div className=\"gdprExport-container\">\n        <Button\n          className=\"Button Button-gdprExport\"\n          icon=\"fas fa-file-export\"\n          onclick={() => app.modal.show(RequestDataExportModal, { user: this.user })}\n        >\n          {app.translator.trans('blomstra-gdpr.forum.settings.export_data_button')}\n        </Button>\n        <p className=\"helpText\">{app.translator.trans('blomstra-gdpr.forum.settings.export_data_help')}</p>\n      </div>,\n      40\n    );\n\n    return items;\n  };\n}\n","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport HeaderSecondary from 'flarum/forum/components/HeaderSecondary';\nimport ErasureRequestsDropdown from '../components/ErasureRequestsDropdown';\n\nexport default function extendHeaderSecondary() {\n  extend(HeaderSecondary.prototype, 'items', function (items) {\n    if (app.forum.attribute('erasureRequestCount')) {\n      items.add('erasureRequests', <ErasureRequestsDropdown state={app.erasureRequests} />, 20);\n    }\n  });\n}\n","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport Page from 'flarum/common/components/Page';\n\nexport default function extendPage() {\n  extend(Page.prototype, 'oninit', function () {\n    if (m.route.param('erasureRequestConfirmed')) {\n      app.alerts.show({ type: 'success' }, app.translator.trans('blomstra-gdpr.forum.erasure_request_confirmed'));\n    }\n  });\n}\n","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport UserControls from 'flarum/forum/utils/UserControls';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport User from 'flarum/common/models/User';\nimport Button from 'flarum/common/components/Button';\nimport RequestDataExportModal from '../../common/components/RequestDataExportModal';\nimport type Mithril from 'mithril';\nimport DeleteUserModal from '../components/DeleteUserModal';\n\nexport default function extendUserControls() {\n  extend(UserControls, 'moderationControls', function (items: ItemList<Mithril.Children>, user: User) {\n    if (user.canModerateExports()) {\n      items.add(\n        'gdpr-export',\n        <Button icon=\"fas fa-file-export\" onclick={() => app.modal.show(RequestDataExportModal, { user })}>\n          {app.translator.trans('blomstra-gdpr.forum.settings.export_data_button')}\n        </Button>\n      );\n    }\n  });\n\n  extend(UserControls, 'destructiveControls', function (items: ItemList<Mithril.Children>, user: User) {\n    items.remove('delete');\n\n    if (user.canDelete()) {\n      items.add(\n        'gdpr-erase',\n        <Button icon=\"fas fa-eraser\" onclick={() => app.modal.show(DeleteUserModal, { user })}>\n          {app.translator.trans('blomstra-gdpr.forum.delete_user.delete_button')}\n        </Button>\n      );\n    }\n  });\n}\n","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport User from 'flarum/common/models/User';\nimport Badge from 'flarum/common/components/Badge';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport type Mithril from 'mithril';\n\nexport default function () {\n  extend(User.prototype, 'badges', function (badges: ItemList<Mithril.Children>) {\n    if (this.anonymized()) {\n      badges.add(\n        'anonymized',\n        <Badge label={app.translator.trans('blomstra-gdpr.forum.badges.anonymized_user')} icon=\"fas fa-user-secret\" type=\"anonymized\" />\n      );\n    }\n  });\n}\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","ErasureRequestsListState","loading","requestsLoaded","load","_this","this","m","redraw","app","find","then","_setPrototypeOf","p","setPrototypeOf","bind","__proto__","_inheritsLoose","subClass","superClass","create","constructor","ExportAvailableNotification","_Notification","apply","arguments","_proto","icon","href","exportModel","attrs","notification","subject","attribute","file","content","trans","username","fromUser","excerpt","Notification","RequestErasureModal","_Modal","oninit","vnode","reason","Stream","password","className","title","fields","toArray","items","ItemList","currRequest","user","erasureRequest","add","status","Button","onclick","oncancel","type","bidi","placeholder","extractText","oninput","e","target","_this2","data","relationships","onsubmit","_this3","preventDefault","createRecord","save","meta","pushData","Modal","RequestDataExportModal","_len","length","args","Array","_key","concat","avatar","requestExport","disabled","method","url","body","attributes","userId","id","hide","loaded","ProcessErasureRequestModal","comments","loadingAnonymization","loadingDeletion","request","UserCard","name","process","mode","confirm","processor_comment","remove","ErasureRequestsList","_Component","view","erasureRequests","all","state","map","showModal","humanTime","createdAt","LoadingIndicator","show","Component","ErasureRequestsDropdown","_NotificationsDropdow","initAttrs","label","getMenu","menuClassName","menuClick","showing","component","goToRoute","route","set","getUnreadCount","getNewCount","NotificationsDropdown","DeleteUserModal","defaultErasure","specificErasure","_this4","ErasureRequestsPage","_Page","push","bodyClass","Page","ErasureRequest","_Model","Model","userConfirmedAt","processedAt","processorComment","processedMode","processedBy","Export","destroysAt","actor","Extend","User","hasOne","extend","gdprExportAvailable","SettingsPage","FieldSet","dataItems","HeaderSecondary","param","UserControls","canModerateExports","canDelete","badges","anonymized","Badge"],"sourceRoot":""}