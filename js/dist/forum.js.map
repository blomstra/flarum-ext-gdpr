{"version":3,"file":"forum.js","mappings":"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","sources":["webpack://@blomstra/gdpr/webpack/bootstrap","webpack://@blomstra/gdpr/webpack/runtime/compat get default export","webpack://@blomstra/gdpr/webpack/runtime/define property getters","webpack://@blomstra/gdpr/webpack/runtime/hasOwnProperty shorthand","webpack://@blomstra/gdpr/webpack/runtime/make namespace object","webpack://@blomstra/gdpr/external root \"flarum.core.compat['forum/app']\"","webpack://@blomstra/gdpr/./src/forum/states/ErasureRequestsListState.ts","webpack://@blomstra/gdpr/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@blomstra/gdpr/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@blomstra/gdpr/external root \"flarum.core.compat['forum/components/Notification']\"","webpack://@blomstra/gdpr/./src/forum/components/ExportAvailableNotification.ts","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/extend']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/utils/ItemList']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['forum/components/SettingsPage']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/components/FieldSet']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/components/Button']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/components/Modal']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/utils/extractText']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/utils/Stream']\"","webpack://@blomstra/gdpr/./src/forum/components/RequestErasureModal.js","webpack://@blomstra/gdpr/./src/forum/components/RequestDataModal.tsx","webpack://@blomstra/gdpr/external root \"flarum.core.compat['forum/components/HeaderSecondary']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['forum/components/NotificationsDropdown']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/Component']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/components/LoadingIndicator']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/helpers/avatar']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/helpers/icon']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/helpers/username']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/helpers/humanTime']\"","webpack://@blomstra/gdpr/./src/forum/components/ProcessErasureRequestModal.js","webpack://@blomstra/gdpr/./src/forum/components/ErasureRequestsList.js","webpack://@blomstra/gdpr/./src/forum/components/ErasureRequestsDropdown.tsx","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/components/Page']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/extenders']\"","webpack://@blomstra/gdpr/./src/forum/components/ErasureRequestsPage.js","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/models/User']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/Model']\"","webpack://@blomstra/gdpr/./src/common/models/ErasureRequest.ts","webpack://@blomstra/gdpr/./src/common/models/Export.ts","webpack://@blomstra/gdpr/./src/common/extend.ts","webpack://@blomstra/gdpr/./src/forum/extend.ts","webpack://@blomstra/gdpr/./src/forum/index.ts","webpack://@blomstra/gdpr/./src/forum/extenders/extendUserSettingsPage.tsx","webpack://@blomstra/gdpr/./src/forum/extenders/extendHeaderSecondary.tsx","webpack://@blomstra/gdpr/./src/forum/extenders/extendPage.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","import app from 'flarum/forum/app';\n\nexport default class ErasureRequestsListState {\n  loading: boolean = false;\n  requestsLoaded: boolean = false;\n\n  load() {\n    if (this.requestsLoaded) {\n      return;\n    }\n\n    this.loading = true;\n    m.redraw();\n\n    app.store\n      .find('user-erasure-requests')\n      .then(\n        () => (this.requestsLoaded = true),\n        () => {}\n      )\n      .then(() => {\n        this.loading = false;\n        m.redraw();\n      });\n  }\n}\n","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/Notification'];","import app from 'flarum/forum/app';\nimport Notification from 'flarum/forum/components/Notification';\nimport Export from '../../common/models/Export';\n\nexport default class ExportAvailableNotification extends Notification {\n  icon() {\n    return 'fas fa-file-export';\n  }\n\n  href() {\n    const exportModel = this.attrs.notification.subject() as Export;\n\n    // Building the full url scheme so that Mithril treats this as an external link, so the download will work correctly.\n    return app.forum.attribute('baseUrl') + app.route('gdpr.export', { file: exportModel.file() });\n  }\n\n  content() {\n    return app.translator.trans('blomstra-gdpr.forum.notification.export-ready');\n  }\n\n  excerpt() {\n    return null;\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/ItemList'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/SettingsPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/FieldSet'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Modal'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/extractText'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/Stream'];","import app from 'flarum/forum/app';\nimport Modal from 'flarum/common/components/Modal';\nimport Button from 'flarum/common/components/Button';\nimport extractText from 'flarum/common/utils/extractText';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport Stream from 'flarum/common/utils/Stream';\n\nexport default class RequestErasureModal extends Modal {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    this.reason = Stream('');\n    this.password = Stream('');\n  }\n\n  className() {\n    return 'RequestErasureModal Modal--small';\n  }\n\n  title() {\n    return app.translator.trans('blomstra-gdpr.forum.request_erasure.title');\n  }\n\n  content() {\n    return (\n      <div className=\"Modal-body\">\n        <div className=\"Form Form--centered\">{this.fields().toArray()}</div>\n      </div>\n    );\n  }\n\n  fields() {\n    const items = new ItemList();\n\n    const currRequest = app.session.user.erasureRequest();\n\n    if (currRequest) {\n      items.add(\n        'status',\n        <div className=\"Form-group\">\n          <p className=\"helpText\">{app.translator.trans(`blomstra-gdpr.forum.request_erasure.status.${currRequest.status()}`)}</p>\n        </div>\n      );\n\n      if (currRequest.reason()) {\n        items.add(\n          'reason',\n          <div className=\"Form-group\">\n            <p className=\"helpText\">{app.translator.trans('blomstra-gdpr.forum.request_erasure.reason', { reason: currRequest.reason() })}</p>\n          </div>\n        );\n      }\n\n      items.add(\n        'cancel',\n        <div className=\"Form-group\">\n          {Button.component(\n            {\n              className: 'Button Button--primary Button--block',\n              onclick: this.oncancel.bind(this),\n              loading: this.loading,\n            },\n            app.translator.trans('blomstra-gdpr.forum.request_erasure.cancel_button')\n          )}\n        </div>\n      );\n    } else {\n      items.add('text', <p className=\"helpText\">{app.translator.trans('blomstra-gdpr.forum.request_erasure.text')}</p>);\n\n      if (!app.forum.attribute('passwordlessSignUp')) {\n        items.add(\n          'password',\n          <div className=\"Form-group\">\n            <input\n              type=\"password\"\n              className=\"FormControl\"\n              bidi={this.password}\n              placeholder={extractText(app.translator.trans('blomstra-gdpr.forum.request_erasure.password_label'))}\n            />\n          </div>\n        );\n      }\n\n      items.add(\n        'reason',\n        <div className=\"Form-group\">\n          <textarea\n            className=\"FormControl\"\n            value={this.reason()}\n            oninput={(e) => this.reason(e.target.value)}\n            placeholder={extractText(app.translator.trans('blomstra-gdpr.forum.request_erasure.reason_label'))}\n          ></textarea>\n        </div>\n      );\n\n      items.add(\n        'submit',\n        <div className=\"Form-group\">\n          {Button.component(\n            {\n              className: 'Button Button--primary Button--block',\n              type: 'submit',\n              loading: this.loading,\n            },\n            app.translator.trans('blomstra-gdpr.forum.request_erasure.request_button')\n          )}\n        </div>\n      );\n    }\n\n    return items;\n  }\n\n  oncancel(e) {\n    this.loading = true;\n    m.redraw();\n\n    app.session.user\n      .erasureRequest()\n      .delete()\n      .then(() => {\n        this.loading = false;\n        m.redraw();\n      });\n  }\n\n  data() {\n    // Status is set so that the proper confirmation message is displayed.\n    return {\n      reason: this.reason(),\n      status: 'user_confirmed',\n      relationships: { user: app.session.user },\n    };\n  }\n\n  onsubmit(e) {\n    e.preventDefault();\n\n    this.loading = true;\n\n    app.store\n      .createRecord('user-erasure-requests')\n      .save(this.data(), { meta: { password: this.password() } })\n      .then((erasureRequest) => {\n        app.session.user.pushData({ relationships: { erasureRequest } });\n        this.loading = false;\n        m.redraw();\n      })\n      .catch(() => {\n        this.loading = false;\n        m.redraw();\n      });\n  }\n}\n","import app from 'flarum/forum/app';\nimport Modal from 'flarum/common/components/Modal';\nimport Button from 'flarum/common/components/Button';\n\nexport default class RequestDataModal extends Modal {\n  className() {\n    return 'RequestDataModal Modal--small';\n  }\n\n  title() {\n    return app.translator.trans('blomstra-gdpr.forum.request_data.title');\n  }\n\n  content() {\n    return (\n      <div className=\"Modal-body\">\n        <div className=\"Form Form--centered\">\n          <p className=\"helpText\">{app.translator.trans('blomstra-gdpr.forum.request_data.text')}</p>\n          <div className=\"Form-group\">\n            {Button.component(\n              {\n                className: 'Button Button--primary Button--block',\n                type: 'submit',\n                loading: this.loading,\n              },\n              app.translator.trans('blomstra-gdpr.forum.request_data.request_button')\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  onsubmit(e) {\n    e.preventDefault();\n\n    this.loading = true;\n\n    app\n      .request({\n        method: 'POST',\n        url: app.forum.attribute('apiUrl') + '/gdpr/export',\n      })\n      .then(this.hide.bind(this), this.loaded.bind(this));\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/HeaderSecondary'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/NotificationsDropdown'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Component'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/LoadingIndicator'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/avatar'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/icon'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/username'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/humanTime'];","import app from 'flarum/forum/app';\nimport Modal from 'flarum/common/components/Modal';\nimport Button from 'flarum/common/components/Button';\nimport username from 'flarum/common/helpers/username';\nimport extractText from 'flarum/common/utils/extractText';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport Stream from 'flarum/common/utils/Stream';\n\nexport default class ProcessErasureRequestModal extends Modal {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    this.comments = Stream('');\n\n    this.loading = {};\n  }\n\n  className() {\n    return 'ProcessErasureRequestModal Modal--small';\n  }\n\n  title() {\n    return app.translator.trans('blomstra-gdpr.forum.process_erasure.title');\n  }\n\n  content() {\n    return (\n      <div className=\"Modal-body\">\n        <div className=\"Form Form--centered\">{this.fields().toArray()}</div>\n      </div>\n    );\n  }\n\n  fields() {\n    const items = new ItemList();\n\n    const erasureRequest = this.attrs.request;\n\n    items.add(\n      'text',\n      <p className=\"helpText\">{app.translator.trans('blomstra-gdpr.forum.process_erasure.text', { name: username(this.attrs.request.user()) })}</p>\n    );\n\n    erasureRequest.reason() &&\n      items.add(\n        'reason',\n        <p className=\"helpText\">\n          <code>{erasureRequest.reason()}</code>\n        </p>\n      );\n\n    items.add(\n      'comments',\n      <div className=\"Form-group\">\n        <textarea\n          className=\"FormControl\"\n          value={this.comments()}\n          oninput={(e) => this.comments(e.target.value)}\n          placeholder={extractText(app.translator.trans('blomstra-gdpr.forum.process_erasure.comments_label'))}\n        ></textarea>\n      </div>\n    );\n\n    if (app.forum.attribute('erasureAnonymizationAllowed')) {\n      items.add(\n        'anonymize',\n        <div className=\"Form-group\">\n          {Button.component(\n            {\n              className: 'Button Button--primary Button--block',\n              type: 'submit',\n              loading: this.loading.anonymization,\n              onclick: (e) => this.onsubmit(e, 'anonymization'),\n            },\n            app.translator.trans('blomstra-gdpr.forum.process_erasure.anonymization_button')\n          )}\n        </div>\n      );\n    }\n\n    if (app.forum.attribute('erasureDeletionAllowed')) {\n      items.add(\n        'delete',\n        <div className=\"Form-group\">\n          {Button.component(\n            {\n              className: 'Button Button--danger Button--block',\n              type: 'submit',\n              loading: this.loading.deletion,\n              onclick: (e) => this.onsubmit(e, 'deletion'),\n            },\n            app.translator.trans('blomstra-gdpr.forum.process_erasure.deletion_button')\n          )}\n        </div>\n      );\n    }\n\n    return items;\n  }\n\n  onsubmit(e, mode) {\n    e.preventDefault();\n\n    if (\n      !confirm(\n        app.translator.trans('blomstra-gdpr.forum.process_erasure.confirm', {\n          name: extractText(username(this.attrs.request.user())),\n          mode: extractText(mode),\n        })\n      )\n    ) {\n      return;\n    }\n\n    this.loading[MediaSource] = true;\n    m.redraw();\n\n    this.attrs.request\n      .save({ processor_comment: this.comments() }, { meta: { mode } })\n      .then((erasureRequest) => {\n        app.store.remove(erasureRequest);\n        this.loading[MediaSource] = false;\n        m.redraw();\n        this.hide();\n      })\n      .catch(() => {\n        this.loading[MediaSource] = false;\n        m.redraw();\n      });\n  }\n}\n","import app from 'flarum/forum/app';\nimport Component from 'flarum/common/Component';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport avatar from 'flarum/common/helpers/avatar';\nimport icon from 'flarum/common/helpers/icon';\nimport username from 'flarum/common/helpers/username';\nimport humanTime from 'flarum/common/helpers/humanTime';\n\nimport ProcessErasureRequestModal from './ProcessErasureRequestModal';\n\nexport default class ErasureRequestsList extends Component {\n  view() {\n    const erasureRequests = app.store.all('user-erasure-requests');\n    const state = this.attrs.state;\n\n    return (\n      <div className=\"NotificationList ErasureRequestsList\">\n        <div className=\"NotificationList-header\">\n          <h4 className=\"App-titleControl App-titleControl--text\">{app.translator.trans('blomstra-gdpr.forum.erasure_requests.title')}</h4>\n        </div>\n        <div className=\"NotificationList-content\">\n          <ul className=\"NotificationGroup-content\">\n            {erasureRequests.length ? (\n              erasureRequests.map((request) => {\n                return (\n                  <li>\n                    <a onclick={this.showModal.bind(this, request)} className=\"Notification Request\">\n                      {avatar(request.user())}\n                      {icon('fas fa-user-edit', { className: 'Notification-icon' })}\n                      <span className=\"Notification-content\">\n                        {app.translator.trans(`blomstra-gdpr.forum.erasure_requests.item_text`, {\n                          name: username(request.user()),\n                        })}\n                      </span>\n                      {humanTime(request.createdAt())}\n                    </a>\n                  </li>\n                );\n              })\n            ) : !state.loading ? (\n              <div className=\"NotificationList-empty\">{app.translator.trans('blomstra-gdpr.forum.erasure_requests.empty_text')}</div>\n            ) : (\n              LoadingIndicator.component({ className: 'LoadingIndicator--block' })\n            )}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n\n  showModal(request) {\n    app.modal.show(ProcessErasureRequestModal, { request });\n  }\n}\n","import app from 'flarum/forum/app';\nimport NotificationsDropdown from 'flarum/forum/components/NotificationsDropdown';\n\nimport ErasureRequestsList from './ErasureRequestsList';\nimport { IDropdownAttrs } from 'flarum/common/components/Dropdown';\nimport ErasureRequestsListState from '../states/ErasureRequestsListState';\n\ninterface ErasureRequestsDropdownAttrs extends IDropdownAttrs {\n  state: ErasureRequestsListState;\n}\n\nexport default class ErasureRequestsDropdown extends NotificationsDropdown<ErasureRequestsDropdownAttrs> {\n  static initAttrs(attrs: ErasureRequestsDropdownAttrs) {\n    attrs.label = attrs.label || app.translator.trans('blomstra-gdpr.forum.erasure_requests.tooltip');\n    attrs.icon = attrs.icon || 'fas fa-user-minus';\n\n    super.initAttrs(attrs);\n  }\n\n  getMenu() {\n    return (\n      <div className={'Dropdown-menu ' + this.attrs.menuClassName} onclick={this.menuClick.bind(this)}>\n        {this.showing ? ErasureRequestsList.component({ state: this.attrs.state }) : ''}\n      </div>\n    );\n  }\n\n  goToRoute() {\n    m.route.set(app.route('erasure-requests'));\n  }\n\n  getUnreadCount(): number | undefined {\n    if (!this.attrs.state.requestsLoaded) {\n      return app.forum.attribute('erasureRequestCount');\n    }\n\n    return app.store.all('erasure-requests').length;\n  }\n\n  getNewCount() {\n    return this.getUnreadCount();\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Page'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extenders'];","import app from 'flarum/forum/app';\nimport Page from 'flarum/common/components/Page';\n\nimport ErasureRequestsList from './ErasureRequestsList';\n\nexport default class ErasureRequestsPage extends Page {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    app.history.push('erasure-requests');\n\n    app.erasureRequests.load();\n\n    this.bodyClass = 'App--ErasureRequests';\n  }\n\n  view() {\n    return (\n      <div className=\"ErasureRequestsPage\">\n        <ErasureRequestsList state={app.erasureRequests}></ErasureRequestsList>\n      </div>\n    );\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/models/User'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Model'];","import Model from 'flarum/common/Model';\nimport User from 'flarum/common/models/User';\n\nexport default class ErasureRequest extends Model {\n  status() {\n    return Model.attribute<string>('status').call(this);\n  }\n\n  reason() {\n    return Model.attribute<string>('reason').call(this);\n  }\n\n  createdAt() {\n    return Model.attribute('createdAt', Model.transformDate).call(this);\n  }\n\n  userConfirmedAt() {\n    return Model.attribute('userConfirmedAt', Model.transformDate).call(this);\n  }\n\n  processedAt() {\n    return Model.attribute('processedAt', Model.transformDate).call(this);\n  }\n\n  processorComment() {\n    return Model.attribute<string>('processorComment').call(this);\n  }\n\n  processedMode() {\n    return Model.attribute<string>('processedMode').call(this);\n  }\n\n  user() {\n    return Model.hasOne<User>('user').call(this);\n  }\n\n  processedBy() {\n    return Model.hasOne<User>('processedBy').call(this);\n  }\n}\n","import Model from 'flarum/common/Model';\n\nexport default class Export extends Model {\n  file() {\n    return Model.attribute<string>('file').call(this);\n  }\n\n  destroysAt() {\n    return Model.attribute('destroysAt', Model.transformDate);\n  }\n}\n","import Extend from 'flarum/common/extenders';\nimport User from 'flarum/common/models/User';\nimport ErasureRequest from './models/ErasureRequest';\nimport Export from './models/Export';\n\nexport default [\n  new Extend.Store() //\n    .add('user-erasure-requests', ErasureRequest)\n    .add('exports', Export),\n\n  new Extend.Model(User) //\n    .hasOne<ErasureRequest>('erasureRequest'),\n];\n","import Extend from 'flarum/common/extenders';\nimport ErasureRequestsPage from './components/ErasureRequestsPage';\n\nimport { default as extend } from '../common/extend';\n\nexport default [\n  ...extend,\n\n  new Extend.Routes() //\n    .add('erasure-requests', '/erasure-requests', ErasureRequestsPage)\n    .add('gdpr.export', '/gdpr/export/:file', ''),\n];\n","import app from 'flarum/forum/app';\nimport ErasureRequestsListState from './states/ErasureRequestsListState';\nimport ExportAvailableNotification from './components/ExportAvailableNotification';\nimport extendUserSettingsPage from './extenders/extendUserSettingsPage';\nimport extendHeaderSecondary from './extenders/extendHeaderSecondary';\nimport extendPage from './extenders/extendPage';\n\nexport { default as extend } from './extend';\n\napp.initializers.add('blomstra-gdpr', () => {\n  app.erasureRequests = new ErasureRequestsListState();\n\n  app.notificationComponents.gdprExportAvailable = ExportAvailableNotification;\n\n  extendUserSettingsPage();\n  extendHeaderSecondary();\n  extendPage();\n});\n","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport SettingsPage from 'flarum/forum/components/SettingsPage';\nimport FieldSet from 'flarum/common/components/FieldSet';\nimport type Mithril from 'mithril';\nimport Button from 'flarum/common/components/Button';\nimport RequestErasureModal from '../components/RequestErasureModal';\nimport RequestDataModal from '../components/RequestDataModal';\n\nexport default function extendUserSettingsPage() {\n  extend(SettingsPage.prototype, 'settingsItems', function (items: ItemList<Mithril.Children>) {\n    const user = this.user;\n\n    if (!user) {\n      return;\n    }\n\n    items.add(\n      'dataItems',\n      <FieldSet className=\"Settings-gdpr\" label={app.translator.trans('blomstra-gdpr.forum.settings.data.heading')}>\n        {\n          /** @ts-ignore **/\n          this.dataItems().toArray()\n        }\n      </FieldSet>,\n      90\n    );\n  });\n\n  /** @ts-ignore */\n  SettingsPage.prototype.dataItems = function (): ItemList<Mithril.Children> {\n    const items = new ItemList<Mithril.Children>();\n\n    items.add(\n      'gdprErasure',\n      <div className=\"gdprErasure-container\">\n        <Button className=\"Button Button-gdprErasure\" icon=\"fas fa-user-minus\" onclick={() => app.modal.show(RequestErasureModal)}>\n          {app.translator.trans('blomstra-gdpr.forum.settings.request_erasure_button')}\n        </Button>\n        <p className=\"helpText\">{app.translator.trans('blomstra-gdpr.forum.settings.request_erasure_help')}</p>\n      </div>,\n      50\n    );\n\n    items.add(\n      'gdprExport',\n      <div className=\"gdprExport-container\">\n        <Button className=\"Button Button-gdprExport\" icon=\"fas fa-file-export\" onclick={() => app.modal.show(RequestDataModal)}>\n          {app.translator.trans('blomstra-gdpr.forum.settings.export_data_button')}\n        </Button>\n        <p className=\"helpText\">{app.translator.trans('blomstra-gdpr.forum.settings.export_data_help')}</p>\n      </div>,\n      40\n    );\n\n    return items;\n  };\n}\n","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport HeaderSecondary from 'flarum/forum/components/HeaderSecondary';\nimport ErasureRequestsDropdown from '../components/ErasureRequestsDropdown';\n\nexport default function extendHeaderSecondary() {\n  extend(HeaderSecondary.prototype, 'items', function (items) {\n    if (app.forum.attribute('erasureRequestCount')) {\n      items.add('erasureRequests', <ErasureRequestsDropdown state={app.erasureRequests} />, 20);\n    }\n  });\n}\n","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport Page from 'flarum/common/components/Page';\n\nexport default function extendPage() {\n  extend(Page.prototype, 'oninit', function () {\n    if (m.route.param('erasureRequestConfirmed')) {\n      app.alerts.show({ type: 'success' }, app.translator.trans('blomstra-gdpr.forum.erasure_request_confirmed'));\n    }\n  });\n}\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","ErasureRequestsListState","loading","requestsLoaded","load","this","m","redraw","app","find","then","_setPrototypeOf","p","setPrototypeOf","bind","__proto__","_inheritsLoose","subClass","superClass","create","constructor","ExportAvailableNotification","icon","href","exportModel","attrs","notification","subject","attribute","file","content","trans","excerpt","Notification","RequestErasureModal","oninit","vnode","reason","Stream","password","className","title","fields","toArray","items","ItemList","currRequest","user","erasureRequest","add","status","Button","onclick","oncancel","type","bidi","placeholder","extractText","oninput","e","target","data","relationships","onsubmit","preventDefault","createRecord","save","meta","pushData","Modal","RequestDataModal","method","url","hide","loaded","ProcessErasureRequestModal","comments","request","name","username","anonymization","deletion","mode","confirm","MediaSource","processor_comment","remove","ErasureRequestsList","view","erasureRequests","all","state","length","map","showModal","avatar","humanTime","createdAt","LoadingIndicator","show","Component","ErasureRequestsDropdown","initAttrs","label","getMenu","menuClassName","menuClick","showing","component","goToRoute","route","set","getUnreadCount","getNewCount","NotificationsDropdown","ErasureRequestsPage","push","bodyClass","Page","ErasureRequest","Model","userConfirmedAt","processedAt","processorComment","processedMode","processedBy","Export","destroysAt","Extend","User","hasOne","extend","gdprExportAvailable","SettingsPage","dataItems","HeaderSecondary","param"],"sourceRoot":""}