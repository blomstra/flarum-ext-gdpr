{"version":3,"file":"forum.js","mappings":"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","sources":["webpack://@flarum/gdpr/webpack/bootstrap","webpack://@flarum/gdpr/webpack/runtime/compat get default export","webpack://@flarum/gdpr/webpack/runtime/define property getters","webpack://@flarum/gdpr/webpack/runtime/hasOwnProperty shorthand","webpack://@flarum/gdpr/webpack/runtime/make namespace object","webpack://@flarum/gdpr/external root \"flarum.core.compat['forum/app']\"","webpack://@flarum/gdpr/./src/forum/states/ErasureRequestsListState.ts","webpack://@flarum/gdpr/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@flarum/gdpr/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@flarum/gdpr/external root \"flarum.core.compat['forum/components/Notification']\"","webpack://@flarum/gdpr/external root \"flarum.core.compat['common/helpers/username']\"","webpack://@flarum/gdpr/./src/forum/components/ExportAvailableNotification.ts","webpack://@flarum/gdpr/external root \"flarum.core.compat['common/extend']\"","webpack://@flarum/gdpr/external root \"flarum.core.compat['common/utils/ItemList']\"","webpack://@flarum/gdpr/external root \"flarum.core.compat['forum/components/SettingsPage']\"","webpack://@flarum/gdpr/external root \"flarum.core.compat['common/components/FieldSet']\"","webpack://@flarum/gdpr/external root \"flarum.core.compat['common/components/Button']\"","webpack://@flarum/gdpr/external root \"flarum.core.compat['common/components/Modal']\"","webpack://@flarum/gdpr/external root \"flarum.core.compat['common/utils/extractText']\"","webpack://@flarum/gdpr/external root \"flarum.core.compat['common/utils/Stream']\"","webpack://@flarum/gdpr/./src/forum/components/RequestErasureModal.tsx","webpack://@flarum/gdpr/external root \"flarum.core.compat['common/app']\"","webpack://@flarum/gdpr/external root \"flarum.core.compat['common/helpers/avatar']\"","webpack://@flarum/gdpr/./src/common/components/RequestDataExportModal.tsx","webpack://@flarum/gdpr/external root \"flarum.core.compat['forum/components/HeaderSecondary']\"","webpack://@flarum/gdpr/external root \"flarum.core.compat['forum/components/NotificationsDropdown']\"","webpack://@flarum/gdpr/external root \"flarum.core.compat['common/Component']\"","webpack://@flarum/gdpr/external root \"flarum.core.compat['common/components/LoadingIndicator']\"","webpack://@flarum/gdpr/external root \"flarum.core.compat['common/helpers/icon']\"","webpack://@flarum/gdpr/external root \"flarum.core.compat['common/helpers/humanTime']\"","webpack://@flarum/gdpr/external root \"flarum.core.compat['forum/components/UserCard']\"","webpack://@flarum/gdpr/./src/forum/components/ProcessErasureRequestModal.tsx","webpack://@flarum/gdpr/./src/forum/components/ErasureRequestsList.js","webpack://@flarum/gdpr/./src/forum/components/ErasureRequestsDropdown.tsx","webpack://@flarum/gdpr/external root \"flarum.core.compat['common/components/Page']\"","webpack://@flarum/gdpr/external root \"flarum.core.compat['forum/utils/UserControls']\"","webpack://@flarum/gdpr/./src/forum/components/DeleteUserModal.tsx","webpack://@flarum/gdpr/external root \"flarum.core.compat['common/models/User']\"","webpack://@flarum/gdpr/external root \"flarum.core.compat['common/components/Badge']\"","webpack://@flarum/gdpr/external root \"flarum.core.compat['common/extenders']\"","webpack://@flarum/gdpr/./src/forum/components/ErasureRequestsPage.js","webpack://@flarum/gdpr/external root \"flarum.core.compat['common/Model']\"","webpack://@flarum/gdpr/./src/common/models/ErasureRequest.ts","webpack://@flarum/gdpr/./src/common/models/Export.ts","webpack://@flarum/gdpr/./src/common/extend.ts","webpack://@flarum/gdpr/./src/forum/extend.ts","webpack://@flarum/gdpr/./src/forum/index.ts","webpack://@flarum/gdpr/./src/forum/extenders/extendUserSettingsPage.tsx","webpack://@flarum/gdpr/./src/forum/extenders/extendHeaderSecondary.tsx","webpack://@flarum/gdpr/./src/forum/extenders/extendPage.ts","webpack://@flarum/gdpr/./src/forum/extenders/extendUserControls.tsx","webpack://@flarum/gdpr/./src/forum/addAnonymousBadges.tsx"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","import app from 'flarum/forum/app';\n\nexport default class ErasureRequestsListState {\n  loading: boolean = false;\n  requestsLoaded: boolean = false;\n\n  load() {\n    if (this.requestsLoaded) {\n      return;\n    }\n\n    this.loading = true;\n    m.redraw();\n\n    app.store\n      .find('user-erasure-requests')\n      .then(\n        () => (this.requestsLoaded = true),\n        () => {}\n      )\n      .then(() => {\n        this.loading = false;\n        m.redraw();\n      });\n  }\n}\n","function _setPrototypeOf(t, e) {\n  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {\n    return t.__proto__ = e, t;\n  }, _setPrototypeOf(t, e);\n}\nexport { _setPrototypeOf as default };","import setPrototypeOf from \"./setPrototypeOf.js\";\nfunction _inheritsLoose(t, o) {\n  t.prototype = Object.create(o.prototype), t.prototype.constructor = t, setPrototypeOf(t, o);\n}\nexport { _inheritsLoose as default };","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/Notification'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/username'];","import app from 'flarum/forum/app';\nimport Notification from 'flarum/forum/components/Notification';\nimport Export from '../../common/models/Export';\nimport username from 'flarum/common/helpers/username';\n\nexport default class ExportAvailableNotification extends Notification {\n  icon() {\n    return 'fas fa-file-export';\n  }\n\n  href() {\n    const exportModel = this.attrs.notification.subject() as Export;\n\n    // Building the full url scheme so that Mithril treats this as an external link, so the download will work correctly.\n    return app.forum.attribute<string>('baseUrl') + `/gdpr/export/${exportModel.file()}`;\n  }\n\n  content() {\n    const notification = this.attrs.notification;\n    return app.translator.trans('flarum-gdpr.forum.notification.export-ready', {\n      username: username(notification.fromUser()),\n    });\n  }\n\n  excerpt() {\n    return null;\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/ItemList'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/SettingsPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/FieldSet'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Modal'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/extractText'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/Stream'];","import app from 'flarum/forum/app';\nimport Modal from 'flarum/common/components/Modal';\nimport Button from 'flarum/common/components/Button';\nimport extractText from 'flarum/common/utils/extractText';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport Stream from 'flarum/common/utils/Stream';\nimport Mithril from 'mithril';\nimport type User from 'flarum/common/models/User';\nimport type ErasureRequest from '../../common/models/ErasureRequest';\n\nexport default class RequestErasureModal extends Modal {\n  reason: Stream<string>;\n  password: Stream<string>;\n  user!: User | null;\n\n  oninit(vnode: Mithril.Vnode) {\n    super.oninit(vnode);\n\n    this.reason = Stream('');\n    this.password = Stream('');\n\n    this.user = app.session.user;\n  }\n\n  className() {\n    return 'RequestErasureModal Modal--small';\n  }\n\n  title() {\n    return app.translator.trans('flarum-gdpr.forum.request_erasure.title');\n  }\n\n  content() {\n    return (\n      <div className=\"Modal-body\">\n        <div className=\"Form Form--centered\">{this.fields().toArray()}</div>\n      </div>\n    );\n  }\n\n  fields() {\n    const items = new ItemList<Mithril.Children>();\n\n    const currRequest = this.user?.erasureRequest() as ErasureRequest | null;\n\n    if (currRequest && currRequest.status() !== 'cancelled') {\n      items.add(\n        'status',\n        <div className=\"Form-group\">\n          <p className=\"helpText\">{app.translator.trans(`flarum-gdpr.forum.request_erasure.status.${currRequest.status()}`)}</p>\n        </div>\n      );\n\n      if (currRequest.reason()) {\n        items.add(\n          'reason',\n          <div className=\"Form-group\">\n            <p className=\"helpText\">{app.translator.trans('flarum-gdpr.forum.request_erasure.reason', { reason: currRequest.reason() })}</p>\n          </div>\n        );\n      }\n\n      items.add(\n        'cancel',\n        <div className=\"Form-group\">\n          {Button.component(\n            {\n              className: 'Button Button--primary Button--block',\n              onclick: this.oncancel.bind(this),\n              loading: this.loading,\n            },\n            app.translator.trans('flarum-gdpr.forum.request_erasure.cancel_button')\n          )}\n        </div>\n      );\n    } else {\n      items.add('text', <p className=\"helpText\">{app.translator.trans('flarum-gdpr.forum.request_erasure.text')}</p>);\n\n      if (!app.forum.attribute('passwordlessSignUp')) {\n        items.add(\n          'password',\n          <div className=\"Form-group\">\n            <input\n              type=\"password\"\n              className=\"FormControl\"\n              bidi={this.password}\n              placeholder={extractText(app.translator.trans('flarum-gdpr.forum.request_erasure.password_label'))}\n            />\n          </div>\n        );\n      }\n\n      items.add(\n        'reason',\n        <div className=\"Form-group\">\n          <textarea\n            className=\"FormControl\"\n            value={this.reason()}\n            oninput={(e: Event) => {\n              const target = e.target as HTMLTextAreaElement | null;\n              if (target) {\n                this.reason(target.value);\n              }\n            }}\n            placeholder={extractText(app.translator.trans('flarum-gdpr.forum.request_erasure.reason_label'))}\n          ></textarea>\n        </div>\n      );\n\n      items.add(\n        'submit',\n        <div className=\"Form-group\">\n          {Button.component(\n            {\n              className: 'Button Button--primary Button--block',\n              type: 'submit',\n              loading: this.loading,\n            },\n            app.translator.trans('flarum-gdpr.forum.request_erasure.request_button')\n          )}\n        </div>\n      );\n    }\n\n    return items;\n  }\n\n  oncancel(e: Event) {\n    this.loading = true;\n    m.redraw();\n\n    if (this.user) {\n      this.user\n        .erasureRequest()\n        .delete()\n        .then(() => {\n          this.loading = false;\n          m.redraw();\n        });\n    }\n  }\n\n  data() {\n    // Status is set so that the proper confirmation message is displayed.\n    return {\n      reason: this.reason(),\n      status: 'user_confirmed',\n      relationships: { user: app.session.user },\n    };\n  }\n\n  onsubmit(e: Event) {\n    e.preventDefault();\n\n    this.loading = true;\n\n    app.store\n      .createRecord<ErasureRequest>('user-erasure-requests')\n      .save(this.data(), { meta: { password: this.password() } })\n      .then((erasureRequest) => {\n        if (this.user) {\n          this.user.pushData({ relationships: { erasureRequest } });\n        }\n        this.loading = false;\n        m.redraw();\n      })\n      .catch(() => {\n        this.loading = false;\n        m.redraw();\n      });\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/avatar'];","import app from 'flarum/common/app';\nimport Modal, { IInternalModalAttrs } from 'flarum/common/components/Modal';\nimport Button from 'flarum/common/components/Button';\nimport username from 'flarum/common/helpers/username';\nimport User from 'flarum/common/models/User';\nimport type Mithril from 'mithril';\nimport avatar from 'flarum/common/helpers/avatar';\n\ninterface RequestDataExportModalAttrs extends IInternalModalAttrs {\n  user: User;\n}\n\nexport default class RequestDataExportModal extends Modal<RequestDataExportModalAttrs> {\n  user!: User;\n\n  oninit(vnode: Mithril.Vnode<RequestDataExportModalAttrs>) {\n    super.oninit(vnode);\n\n    this.user = this.attrs.user;\n  }\n\n  className() {\n    return 'RequestDataModal Modal--small';\n  }\n\n  title() {\n    return app.translator.trans('flarum-gdpr.lib.request_data.title', {\n      username: username(this.user),\n    });\n  }\n\n  content() {\n    return (\n      <div className=\"Modal-body\">\n        <div className=\"Form Form--centered\">\n          <div className=\"User\">{avatar(this.user)}</div>\n          <p className=\"helpText\">{app.translator.trans('flarum-gdpr.lib.request_data.text')}</p>\n          <div className=\"Form-group\">\n            <Button\n              className=\"Button Button--primary Button--block\"\n              onclick={() => this.requestExport()}\n              loading={this.loading}\n              disabled={this.loading}\n            >\n              {app.translator.trans('flarum-gdpr.lib.request_data.request_button')}\n            </Button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  requestExport() {\n    this.loading = true;\n\n    app\n      .request({\n        method: 'POST',\n        url: app.forum.attribute('apiUrl') + '/gdpr/export',\n        body: {\n          data: {\n            attributes: {\n              userId: this.user.id(),\n            },\n          },\n        },\n      })\n      .then(this.hide.bind(this), this.loaded.bind(this));\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/HeaderSecondary'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/NotificationsDropdown'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Component'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/LoadingIndicator'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/icon'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/humanTime'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/UserCard'];","import app from 'flarum/forum/app';\nimport Modal, { IInternalModalAttrs } from 'flarum/common/components/Modal';\nimport Button from 'flarum/common/components/Button';\nimport username from 'flarum/common/helpers/username';\nimport extractText from 'flarum/common/utils/extractText';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport Stream from 'flarum/common/utils/Stream';\nimport type Mithril from 'mithril';\nimport ErasureRequest from 'src/common/models/ErasureRequest';\nimport UserCard from 'flarum/forum/components/UserCard';\n\ninterface ProcessErasureRequestModalAttrs extends IInternalModalAttrs {\n  request: ErasureRequest;\n}\n\nexport default class ProcessErasureRequestModal extends Modal<ProcessErasureRequestModalAttrs> {\n  comments: Stream<string>;\n  loadingAnonymization: boolean = false;\n  loadingDeletion: boolean = false;\n  request!: ErasureRequest;\n\n  oninit(vnode: Mithril.Vnode<ProcessErasureRequestModalAttrs>) {\n    super.oninit(vnode);\n\n    this.request = this.attrs.request;\n\n    this.comments = Stream('');\n  }\n\n  className() {\n    return 'ProcessErasureRequestModal Modal--medium';\n  }\n\n  title() {\n    return app.translator.trans('flarum-gdpr.forum.process_erasure.title');\n  }\n\n  content() {\n    return (\n      <div className=\"Modal-body\">\n        <div className=\"Form Form--centered\">{this.fields().toArray()}</div>\n      </div>\n    );\n  }\n\n  fields() {\n    const items = new ItemList<Mithril.Children>();\n\n    const erasureRequest = this.attrs.request;\n\n    items.add(\n      'text',\n      <div>\n        <UserCard className=\"UserCard--popover UserCard--gdpr\" user={this.request.user()} />\n        <p className=\"helpText\">{app.translator.trans('flarum-gdpr.forum.process_erasure.text', { name: username(this.request.user()) })}</p>\n      </div>\n    );\n\n    erasureRequest?.reason() &&\n      items.add(\n        'reason',\n        <p className=\"helpText\">\n          <code>{erasureRequest.reason()}</code>\n        </p>\n      );\n\n    items.add(\n      'comments',\n      <div className=\"Form-group\">\n        <textarea\n          className=\"FormControl\"\n          value={this.comments()}\n          bidi={this.comments}\n          placeholder={extractText(app.translator.trans('flarum-gdpr.forum.process_erasure.comments_label'))}\n        ></textarea>\n      </div>\n    );\n\n    if (app.forum.attribute('erasureAnonymizationAllowed')) {\n      items.add(\n        'anonymize',\n        <div className=\"Form-group\">\n          {Button.component(\n            {\n              className: 'Button Button--primary Button--block',\n              loading: this.loadingAnonymization,\n              onclick: () => this.process('anonymization'),\n            },\n            app.translator.trans('flarum-gdpr.forum.process_erasure.anonymization_button')\n          )}\n        </div>\n      );\n    }\n\n    if (app.forum.attribute('erasureDeletionAllowed')) {\n      items.add(\n        'delete',\n        <div className=\"Form-group\">\n          {Button.component(\n            {\n              className: 'Button Button--danger Button--block',\n              loading: this.loadingDeletion,\n              onclick: () => this.process('deletion'),\n            },\n            app.translator.trans('flarum-gdpr.forum.process_erasure.deletion_button')\n          )}\n        </div>\n      );\n    }\n\n    return items;\n  }\n\n  process(mode: string) {\n    if (\n      !confirm(\n        app.translator.trans('flarum-gdpr.forum.process_erasure.confirm', {\n          name: extractText(username(this.request.user())),\n          mode,\n        }) as string\n      )\n    ) {\n      return;\n    }\n\n    if (mode === 'anonymization') {\n      this.loadingAnonymization = true;\n    } else {\n      this.loadingDeletion = true;\n    }\n\n    m.redraw();\n\n    this.request\n      .save({ processor_comment: this.comments(), meta: { mode } })\n      .then((erasureRequest) => {\n        app.store.remove(erasureRequest);\n        this.loadingAnonymization = false;\n        this.loadingDeletion = false;\n        m.redraw();\n        this.hide();\n      })\n      .catch(() => {\n        this.loadingAnonymization = false;\n        this.loadingDeletion = false;\n        m.redraw();\n      });\n  }\n}\n","import app from 'flarum/forum/app';\nimport Component from 'flarum/common/Component';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport avatar from 'flarum/common/helpers/avatar';\nimport icon from 'flarum/common/helpers/icon';\nimport username from 'flarum/common/helpers/username';\nimport humanTime from 'flarum/common/helpers/humanTime';\n\nimport ProcessErasureRequestModal from './ProcessErasureRequestModal';\n\nexport default class ErasureRequestsList extends Component {\n  view() {\n    const erasureRequests = app.store.all('user-erasure-requests');\n    const state = this.attrs.state;\n\n    return (\n      <div className=\"NotificationList ErasureRequestsList\">\n        <div className=\"NotificationList-header\">\n          <h4 className=\"App-titleControl App-titleControl--text\">{app.translator.trans('flarum-gdpr.forum.erasure_requests.title')}</h4>\n        </div>\n        <div className=\"NotificationList-content\">\n          <ul className=\"NotificationGroup-content\">\n            {erasureRequests.length ? (\n              erasureRequests.map((request) => {\n                return (\n                  <li>\n                    <a onclick={this.showModal.bind(this, request)} className=\"Notification Request\">\n                      {avatar(request.user())}\n                      {icon('fas fa-user-edit', { className: 'Notification-icon' })}\n                      <span className=\"Notification-content\">\n                        {app.translator.trans(`flarum-gdpr.forum.erasure_requests.item_text`, {\n                          name: username(request.user()),\n                        })}\n                      </span>\n                      {humanTime(request.createdAt())}\n                    </a>\n                  </li>\n                );\n              })\n            ) : !state.loading ? (\n              <div className=\"NotificationList-empty\">{app.translator.trans('flarum-gdpr.forum.erasure_requests.empty_text')}</div>\n            ) : (\n              LoadingIndicator.component({ className: 'LoadingIndicator--block' })\n            )}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n\n  showModal(request) {\n    app.modal.show(ProcessErasureRequestModal, { request });\n  }\n}\n","import app from 'flarum/forum/app';\nimport NotificationsDropdown from 'flarum/forum/components/NotificationsDropdown';\n\nimport ErasureRequestsList from './ErasureRequestsList';\nimport { IDropdownAttrs } from 'flarum/common/components/Dropdown';\nimport ErasureRequestsListState from '../states/ErasureRequestsListState';\n\ninterface ErasureRequestsDropdownAttrs extends IDropdownAttrs {\n  state: ErasureRequestsListState;\n}\n\nexport default class ErasureRequestsDropdown extends NotificationsDropdown<ErasureRequestsDropdownAttrs> {\n  static initAttrs(attrs: ErasureRequestsDropdownAttrs) {\n    attrs.label = attrs.label || app.translator.trans('flarum-gdpr.forum.erasure_requests.tooltip');\n    attrs.icon = attrs.icon || 'fas fa-user-minus';\n\n    super.initAttrs(attrs);\n  }\n\n  getMenu() {\n    return (\n      <div className={'Dropdown-menu ' + this.attrs.menuClassName} onclick={this.menuClick.bind(this)}>\n        {this.showing ? ErasureRequestsList.component({ state: this.attrs.state }) : ''}\n      </div>\n    );\n  }\n\n  goToRoute() {\n    m.route.set(app.route('erasure-requests'));\n  }\n\n  getUnreadCount(): number | undefined {\n    if (!this.attrs.state.requestsLoaded) {\n      return app.forum.attribute('erasureRequestCount');\n    }\n\n    return app.store.all('erasure-requests').length;\n  }\n\n  getNewCount() {\n    return this.getUnreadCount();\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Page'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/utils/UserControls'];","import app from 'flarum/forum/app';\nimport Modal, { IInternalModalAttrs } from 'flarum/common/components/Modal';\nimport User from 'flarum/common/models/User';\nimport type Mithril from 'mithril';\nimport username from 'flarum/common/helpers/username';\nimport Button from 'flarum/common/components/Button';\n\ninterface DeleteUserModalAttrs extends IInternalModalAttrs {\n  user: User;\n}\n\nexport default class DeleteUserModal extends Modal<DeleteUserModalAttrs> {\n  user!: User;\n  loadingAnonymization: boolean = false;\n  loadingDeletion: boolean = false;\n\n  oninit(vnode: Mithril.Vnode<DeleteUserModalAttrs>) {\n    super.oninit(vnode);\n\n    this.user = this.attrs.user;\n  }\n\n  className() {\n    return 'DeleteUserModal Modal--small';\n  }\n\n  title() {\n    return app.translator.trans('flarum-gdpr.forum.delete_user.title', {\n      username: username(this.user),\n    });\n  }\n\n  content() {\n    return (\n      <div className=\"Modal-body\">\n        <div className=\"Form Form--centered\">\n          <p className=\"helpText\">\n            {app.translator.trans('flarum-gdpr.forum.delete_user.text', {\n              username: username(this.user),\n            })}\n          </p>\n          <div className=\"Form-group\">\n            <Button\n              className=\"Button Button--primary Button--block\"\n              onclick={() => this.defaultErasure()}\n              loading={this.loading}\n              disabled={this.loading}\n            >\n              {app.translator.trans('flarum-gdpr.forum.delete_user.modal_delete_button')}\n            </Button>\n          </div>\n          {app.forum.attribute('erasureAnonymizationAllowed') && app.forum.attribute('erasureDeletionAllowed') && (\n            <div>\n              <div className=\"Form-group\">\n                <Button\n                  className=\"Button Button--block\"\n                  onclick={() => this.specificErasure('anonymization')}\n                  loading={this.loadingAnonymization}\n                  disabled={this.loadingAnonymization}\n                >\n                  {app.translator.trans('flarum-gdpr.forum.process_erasure.anonymization_button')}\n                </Button>\n              </div>\n              <div className=\"Form-group\">\n                <Button\n                  className=\"Button Button--danger Button--block\"\n                  onclick={() => this.specificErasure('deletion')}\n                  loading={this.loadingDeletion}\n                  disabled={this.loadingDeletion}\n                >\n                  {app.translator.trans('flarum-gdpr.forum.process_erasure.deletion_button')}\n                </Button>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  defaultErasure() {\n    this.loading = true;\n\n    this.user.delete().then(\n      () => {\n        this.hide();\n        this.loading = false;\n        m.redraw();\n      },\n      () => {}\n    );\n  }\n\n  specificErasure(mode: string) {\n    if (mode === 'anonymization') {\n      this.loadingAnonymization = true;\n    } else {\n      this.loadingDeletion = true;\n    }\n\n    app\n      .request({\n        method: 'DELETE',\n        url: app.forum.attribute('apiUrl') + '/users/' + this.user.id() + '/gdpr/' + mode,\n      })\n      .then(\n        () => {\n          this.hide();\n          this.loadingAnonymization = false;\n          this.loadingDeletion = false;\n          m.redraw();\n        },\n        () => []\n      );\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/models/User'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Badge'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extenders'];","import app from 'flarum/forum/app';\nimport Page from 'flarum/common/components/Page';\n\nimport ErasureRequestsList from './ErasureRequestsList';\n\nexport default class ErasureRequestsPage extends Page {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    app.history.push('erasure-requests');\n\n    app.erasureRequests.load();\n\n    this.bodyClass = 'App--ErasureRequests';\n  }\n\n  view() {\n    return (\n      <div className=\"ErasureRequestsPage\">\n        <ErasureRequestsList state={app.erasureRequests}></ErasureRequestsList>\n      </div>\n    );\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Model'];","import Model from 'flarum/common/Model';\nimport User from 'flarum/common/models/User';\n\nexport default class ErasureRequest extends Model {\n  status() {\n    return Model.attribute<string>('status').call(this);\n  }\n\n  reason() {\n    return Model.attribute<string>('reason').call(this);\n  }\n\n  createdAt() {\n    return Model.attribute('createdAt', Model.transformDate).call(this);\n  }\n\n  userConfirmedAt() {\n    return Model.attribute('userConfirmedAt', Model.transformDate).call(this);\n  }\n\n  processedAt() {\n    return Model.attribute('processedAt', Model.transformDate).call(this);\n  }\n\n  processorComment() {\n    return Model.attribute<string>('processorComment').call(this);\n  }\n\n  processedMode() {\n    return Model.attribute<string>('processedMode').call(this);\n  }\n\n  user() {\n    return Model.hasOne<User>('user').call(this);\n  }\n\n  processedBy() {\n    return Model.hasOne<User>('processedBy').call(this);\n  }\n}\n","import Model from 'flarum/common/Model';\nimport User from 'flarum/common/models/User';\n\nexport default class Export extends Model {\n  file() {\n    return Model.attribute<string>('file').call(this);\n  }\n\n  createdAt() {\n    return Model.attribute('createdAt', Model.transformDate);\n  }\n\n  destroysAt() {\n    return Model.attribute('destroysAt', Model.transformDate);\n  }\n\n  user() {\n    return Model.hasOne<User>('user');\n  }\n\n  actor() {\n    return Model.hasOne<User>('actor');\n  }\n}\n","import Extend from 'flarum/common/extenders';\nimport User from 'flarum/common/models/User';\nimport ErasureRequest from './models/ErasureRequest';\nimport Export from './models/Export';\n\nexport default [\n  new Extend.Store() //\n    .add('user-erasure-requests', ErasureRequest)\n    .add('exports', Export),\n\n  new Extend.Model(User) //\n    .attribute<boolean>('canModerateExports')\n    .attribute<boolean>('anonymized')\n    .hasOne<ErasureRequest>('erasureRequest'),\n];\n","import Extend from 'flarum/common/extenders';\nimport ErasureRequestsPage from './components/ErasureRequestsPage';\n\nimport { default as extend } from '../common/extend';\n\nexport default [\n  ...extend,\n\n  new Extend.Routes() //\n    .add('erasure-requests', '/erasure-requests', ErasureRequestsPage),\n];\n","import app from 'flarum/forum/app';\nimport ErasureRequestsListState from './states/ErasureRequestsListState';\nimport ExportAvailableNotification from './components/ExportAvailableNotification';\nimport extendUserSettingsPage from './extenders/extendUserSettingsPage';\nimport extendHeaderSecondary from './extenders/extendHeaderSecondary';\nimport extendPage from './extenders/extendPage';\nimport extendUserControls from './extenders/extendUserControls';\nimport addAnonymousBadges from './addAnonymousBadges';\n\nexport { default as extend } from './extend';\n\napp.initializers.add('flarum-gdpr', () => {\n  app.erasureRequests = new ErasureRequestsListState();\n\n  app.notificationComponents.gdprExportAvailable = ExportAvailableNotification;\n\n  extendUserSettingsPage();\n  extendHeaderSecondary();\n  extendPage();\n  extendUserControls();\n  addAnonymousBadges();\n});\n","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport SettingsPage from 'flarum/forum/components/SettingsPage';\nimport FieldSet from 'flarum/common/components/FieldSet';\nimport type Mithril from 'mithril';\nimport Button from 'flarum/common/components/Button';\nimport RequestErasureModal from '../components/RequestErasureModal';\nimport RequestDataExportModal from '../../common/components/RequestDataExportModal';\n\nexport default function extendUserSettingsPage() {\n  extend(SettingsPage.prototype, 'settingsItems', function (items: ItemList<Mithril.Children>) {\n    const user = this.user;\n\n    if (!user) {\n      return;\n    }\n\n    items.add(\n      'dataItems',\n      <FieldSet className=\"Settings-gdpr\" label={app.translator.trans('flarum-gdpr.forum.settings.data.heading')}>\n        {this.dataItems().toArray()}\n      </FieldSet>,\n      -100\n    );\n  });\n\n  SettingsPage.prototype.dataItems = function (): ItemList<Mithril.Children> {\n    const items = new ItemList<Mithril.Children>();\n\n    items.add(\n      'gdprErasure',\n      <div className=\"gdprErasure-container\">\n        <Button className=\"Button Button-gdprErasure\" icon=\"fas fa-user-minus\" onclick={() => app.modal.show(RequestErasureModal)}>\n          {app.translator.trans('flarum-gdpr.forum.settings.request_erasure_button')}\n        </Button>\n        <p className=\"helpText\">{app.translator.trans('flarum-gdpr.forum.settings.request_erasure_help')}</p>\n      </div>,\n      50\n    );\n\n    items.add(\n      'gdprExport',\n      <div className=\"gdprExport-container\">\n        <Button\n          className=\"Button Button-gdprExport\"\n          icon=\"fas fa-file-export\"\n          onclick={() => app.modal.show(RequestDataExportModal, { user: this.user })}\n        >\n          {app.translator.trans('flarum-gdpr.forum.settings.export_data_button')}\n        </Button>\n        <p className=\"helpText\">{app.translator.trans('flarum-gdpr.forum.settings.export_data_help')}</p>\n      </div>,\n      40\n    );\n\n    return items;\n  };\n}\n","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport HeaderSecondary from 'flarum/forum/components/HeaderSecondary';\nimport ErasureRequestsDropdown from '../components/ErasureRequestsDropdown';\n\nexport default function extendHeaderSecondary() {\n  extend(HeaderSecondary.prototype, 'items', function (items) {\n    if (app.forum.attribute<number | null>('erasureRequestCount')) {\n      items.add('erasureRequests', <ErasureRequestsDropdown state={app.erasureRequests} />, 20);\n    }\n  });\n}\n","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport Page from 'flarum/common/components/Page';\n\nexport default function extendPage() {\n  extend(Page.prototype, 'oninit', function () {\n    if (m.route.param('erasureRequestConfirmed')) {\n      app.alerts.show({ type: 'success' }, app.translator.trans('flarum-gdpr.forum.erasure_request_confirmed'));\n    }\n  });\n}\n","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport UserControls from 'flarum/forum/utils/UserControls';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport User from 'flarum/common/models/User';\nimport Button from 'flarum/common/components/Button';\nimport RequestDataExportModal from '../../common/components/RequestDataExportModal';\nimport type Mithril from 'mithril';\nimport DeleteUserModal from '../components/DeleteUserModal';\n\nexport default function extendUserControls() {\n  extend(UserControls, 'moderationControls', function (items: ItemList<Mithril.Children>, user: User) {\n    if (user.canModerateExports()) {\n      items.add(\n        'gdpr-export',\n        <Button icon=\"fas fa-file-export\" onclick={() => app.modal.show(RequestDataExportModal, { user })}>\n          {app.translator.trans('flarum-gdpr.forum.settings.export_data_button')}\n        </Button>\n      );\n    }\n  });\n\n  extend(UserControls, 'destructiveControls', function (items: ItemList<Mithril.Children>, user: User) {\n    items.remove('delete');\n\n    if (user.canDelete()) {\n      items.add(\n        'gdpr-erase',\n        <Button icon=\"fas fa-eraser\" onclick={() => app.modal.show(DeleteUserModal, { user })}>\n          {app.translator.trans('flarum-gdpr.forum.delete_user.delete_button')}\n        </Button>\n      );\n    }\n  });\n}\n","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport User from 'flarum/common/models/User';\nimport Badge from 'flarum/common/components/Badge';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport type Mithril from 'mithril';\n\nexport default function () {\n  extend(User.prototype, 'badges', function (badges: ItemList<Mithril.Children>) {\n    if (this.anonymized()) {\n      badges.add(\n        'anonymized',\n        <Badge label={app.translator.trans('flarum-gdpr.forum.badges.anonymized_user')} icon=\"fas fa-user-secret\" type=\"anonymized\" />\n      );\n    }\n  });\n}\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","ErasureRequestsListState","loading","requestsLoaded","load","_this","this","m","redraw","app","find","then","_setPrototypeOf","t","e","setPrototypeOf","bind","__proto__","_inheritsLoose","create","constructor","ExportAvailableNotification","_Notification","apply","arguments","_proto","icon","href","exportModel","attrs","notification","subject","attribute","file","content","trans","username","fromUser","excerpt","Notification","RequestErasureModal","_Modal","_len","length","args","Array","_key","concat","reason","password","user","oninit","vnode","Stream","className","title","fields","toArray","_this$user","_this2","items","ItemList","currRequest","erasureRequest","status","add","Button","onclick","oncancel","type","bidi","placeholder","extractText","oninput","target","_this3","data","relationships","onsubmit","_this4","preventDefault","createRecord","save","meta","pushData","Modal","RequestDataExportModal","avatar","requestExport","disabled","method","url","body","attributes","userId","id","hide","loaded","ProcessErasureRequestModal","comments","loadingAnonymization","loadingDeletion","request","UserCard","name","process","mode","confirm","processor_comment","remove","ErasureRequestsList","_Component","view","erasureRequests","all","state","map","showModal","humanTime","createdAt","LoadingIndicator","show","Component","ErasureRequestsDropdown","_NotificationsDropdow","initAttrs","label","getMenu","menuClassName","menuClick","showing","component","goToRoute","route","set","getUnreadCount","getNewCount","NotificationsDropdown","DeleteUserModal","defaultErasure","specificErasure","ErasureRequestsPage","_Page","push","bodyClass","Page","ErasureRequest","_Model","Model","userConfirmedAt","processedAt","processorComment","processedMode","processedBy","Export","destroysAt","actor","Extend","User","hasOne","extend","gdprExportAvailable","SettingsPage","FieldSet","dataItems","HeaderSecondary","param","UserControls","canModerateExports","canDelete","badges","anonymized","Badge"],"sourceRoot":""}