{"version":3,"file":"forum.js","mappings":"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","sources":["webpack://@blomstra/gdpr/webpack/bootstrap","webpack://@blomstra/gdpr/webpack/runtime/compat get default export","webpack://@blomstra/gdpr/webpack/runtime/define property getters","webpack://@blomstra/gdpr/webpack/runtime/hasOwnProperty shorthand","webpack://@blomstra/gdpr/webpack/runtime/make namespace object","webpack://@blomstra/gdpr/external root \"flarum.core.compat['forum/app']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/extend']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/components/Button']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['forum/components/HeaderSecondary']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/components/Page']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['forum/components/SettingsPage']\"","webpack://@blomstra/gdpr/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@blomstra/gdpr/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@blomstra/gdpr/external root \"flarum.core.compat['components/Modal']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['components/Button']\"","webpack://@blomstra/gdpr/./src/forum/components/RequestDataModal.js","webpack://@blomstra/gdpr/external root \"flarum.core.compat['utils/extractText']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['utils/ItemList']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['utils/Stream']\"","webpack://@blomstra/gdpr/./src/forum/components/RequestErasureModal.js","webpack://@blomstra/gdpr/external root \"flarum.core.compat['components/NotificationsDropdown']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['Component']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['components/LoadingIndicator']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['helpers/avatar']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['helpers/icon']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['helpers/username']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['helpers/humanTime']\"","webpack://@blomstra/gdpr/./src/forum/components/ProcessErasureRequestModal.js","webpack://@blomstra/gdpr/./src/forum/components/ErasureRequestsList.js","webpack://@blomstra/gdpr/./src/forum/components/ErasureRequestsDropdown.js","webpack://@blomstra/gdpr/./src/forum/states/ErasureRequestsListState.js","webpack://@blomstra/gdpr/external root \"flarum.core.compat['forum/components/Notification']\"","webpack://@blomstra/gdpr/./src/forum/components/ExportAvailableNotification.ts","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/extenders']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/models/User']\"","webpack://@blomstra/gdpr/external root \"flarum.core.compat['common/Model']\"","webpack://@blomstra/gdpr/./src/forum/models/ErasureRequest.ts","webpack://@blomstra/gdpr/external root \"flarum.core.compat['components/Page']\"","webpack://@blomstra/gdpr/./src/forum/components/ErasureRequestsPage.js","webpack://@blomstra/gdpr/./src/forum/models/Export.ts","webpack://@blomstra/gdpr/./src/forum/extend.ts","webpack://@blomstra/gdpr/./src/forum/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/HeaderSecondary'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Page'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/SettingsPage'];","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['components/Modal'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['components/Button'];","import app from 'flarum/forum/app';\nimport Modal from 'flarum/components/Modal';\nimport Button from 'flarum/components/Button';\n\nexport default class RequestDataModal extends Modal {\n  className() {\n    return 'RequestDataModal Modal--small';\n  }\n\n  title() {\n    return app.translator.trans('blomstra-gdpr.forum.request_data.title');\n  }\n\n  content() {\n    return (\n      <div className=\"Modal-body\">\n        <div className=\"Form Form--centered\">\n          <p className=\"helpText\">{app.translator.trans('blomstra-gdpr.forum.request_data.text')}</p>\n          <div className=\"Form-group\">\n            {Button.component(\n              {\n                className: 'Button Button--primary Button--block',\n                type: 'submit',\n                loading: this.loading,\n              },\n              app.translator.trans('blomstra-gdpr.forum.request_data.request_button')\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  onsubmit(e) {\n    e.preventDefault();\n\n    this.loading = true;\n\n    app\n      .request({\n        method: 'POST',\n        url: app.forum.attribute('apiUrl') + '/gdpr/export',\n      })\n      .then(this.hide.bind(this), this.loaded.bind(this));\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['utils/extractText'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['utils/ItemList'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['utils/Stream'];","import Modal from 'flarum/components/Modal';\nimport Button from 'flarum/components/Button';\nimport extractText from 'flarum/utils/extractText';\nimport ItemList from 'flarum/utils/ItemList';\nimport Stream from 'flarum/utils/Stream';\n\nexport default class RequestErasureModal extends Modal {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    this.reason = Stream('');\n    this.password = Stream('');\n  }\n\n  className() {\n    return 'RequestErasureModal Modal--small';\n  }\n\n  title() {\n    return app.translator.trans('blomstra-gdpr.forum.request_erasure.title');\n  }\n\n  content() {\n    return (\n      <div className=\"Modal-body\">\n        <div className=\"Form Form--centered\">{this.fields().toArray()}</div>\n      </div>\n    );\n  }\n\n  fields() {\n    const items = new ItemList();\n\n    const currRequest = app.session.user.erasureRequest();\n\n    if (currRequest) {\n      items.add(\n        'status',\n        <div className=\"Form-group\">\n          <p className=\"helpText\">{app.translator.trans(`blomstra-gdpr.forum.request_erasure.status.${currRequest.status()}`)}</p>\n        </div>\n      );\n\n      if (currRequest.reason()) {\n        items.add(\n          'reason',\n          <div className=\"Form-group\">\n            <p className=\"helpText\">{app.translator.trans('blomstra-gdpr.forum.request_erasure.reason', { reason: currRequest.reason() })}</p>\n          </div>\n        );\n      }\n\n      items.add(\n        'cancel',\n        <div className=\"Form-group\">\n          {Button.component(\n            {\n              className: 'Button Button--primary Button--block',\n              onclick: this.oncancel.bind(this),\n              loading: this.loading,\n            },\n            app.translator.trans('blomstra-gdpr.forum.request_erasure.cancel_button')\n          )}\n        </div>\n      );\n    } else {\n      items.add('text', <p className=\"helpText\">{app.translator.trans('blomstra-gdpr.forum.request_erasure.text')}</p>);\n\n      items.add(\n        'password',\n        <div className=\"Form-group\">\n          <input\n            type=\"password\"\n            className=\"FormControl\"\n            bidi={this.password}\n            placeholder={extractText(app.translator.trans('blomstra-gdpr.forum.request_erasure.password_label'))}\n          />\n        </div>\n      );\n\n      items.add(\n        'reason',\n        <div className=\"Form-group\">\n          <textarea\n            className=\"FormControl\"\n            value={this.reason()}\n            oninput={(e) => this.reason(e.target.value)}\n            placeholder={extractText(app.translator.trans('blomstra-gdpr.forum.request_erasure.reason_label'))}\n          ></textarea>\n        </div>\n      );\n\n      items.add(\n        'submit',\n        <div className=\"Form-group\">\n          {Button.component(\n            {\n              className: 'Button Button--primary Button--block',\n              type: 'submit',\n              loading: this.loading,\n            },\n            app.translator.trans('blomstra-gdpr.forum.request_erasure.request_button')\n          )}\n        </div>\n      );\n    }\n\n    return items;\n  }\n\n  oncancel(e) {\n    this.loading = true;\n    m.redraw();\n\n    app.session.user\n      .erasureRequest()\n      .delete()\n      .then(() => {\n        this.loading = false;\n        m.redraw();\n      });\n  }\n\n  data() {\n    // Status is set so that the proper confirmation message is displayed.\n    return {\n      reason: this.reason(),\n      status: 'user_confirmed',\n      relationships: { user: app.session.user },\n    };\n  }\n\n  onsubmit(e) {\n    e.preventDefault();\n\n    this.loading = true;\n\n    app.store\n      .createRecord('user-erasure-requests')\n      .save(this.data(), { meta: { password: this.password() } })\n      .then((erasureRequest) => {\n        app.session.user.pushData({ relationships: { erasureRequest } });\n        this.loading = false;\n        m.redraw();\n      })\n      .catch(() => {\n        this.loading = false;\n        m.redraw();\n      });\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['components/NotificationsDropdown'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['Component'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['components/LoadingIndicator'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['helpers/avatar'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['helpers/icon'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['helpers/username'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['helpers/humanTime'];","import Modal from 'flarum/components/Modal';\nimport Button from 'flarum/components/Button';\nimport username from 'flarum/helpers/username';\nimport extractText from 'flarum/utils/extractText';\nimport ItemList from 'flarum/utils/ItemList';\nimport Stream from 'flarum/utils/Stream';\n\nexport default class ProcessErasureRequestModal extends Modal {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    this.comments = Stream('');\n\n    this.loading = {};\n  }\n\n  className() {\n    return 'ProcessErasureRequestModal Modal--small';\n  }\n\n  title() {\n    return app.translator.trans('blomstra-gdpr.forum.process_erasure.title');\n  }\n\n  content() {\n    return (\n      <div className=\"Modal-body\">\n        <div className=\"Form Form--centered\">{this.fields().toArray()}</div>\n      </div>\n    );\n  }\n\n  fields() {\n    const items = new ItemList();\n\n    items.add(\n      'text',\n      <p className=\"helpText\">{app.translator.trans('blomstra-gdpr.forum.process_erasure.text', { name: username(this.attrs.request.user()) })}</p>\n    );\n\n    items.add(\n      'comments',\n      <div className=\"Form-group\">\n        <textarea\n          className=\"FormControl\"\n          value={this.comments()}\n          oninput={(e) => this.comments(e.target.value)}\n          placeholder={extractText(app.translator.trans('blomstra-gdpr.forum.process_erasure.comments_label'))}\n        ></textarea>\n      </div>\n    );\n\n    if (app.forum.attribute('erasureAnonymizationAllowed')) {\n      items.add(\n        'anonymize',\n        <div className=\"Form-group\">\n          {Button.component(\n            {\n              className: 'Button Button--primary Button--block',\n              type: 'submit',\n              loading: this.loading.anonymization,\n              onclick: (e) => this.onsubmit(e, 'anonymization'),\n            },\n            app.translator.trans('blomstra-gdpr.forum.process_erasure.anonymization_button')\n          )}\n        </div>\n      );\n    }\n\n    if (app.forum.attribute('erasureDeletionAllowed')) {\n      items.add(\n        'delete',\n        <div className=\"Form-group\">\n          {Button.component(\n            {\n              className: 'Button Button--danger Button--block',\n              type: 'submit',\n              loading: this.loading.deletion,\n              onclick: (e) => this.onsubmit(e, 'deletion'),\n            },\n            app.translator.trans('blomstra-gdpr.forum.process_erasure.deletion_button')\n          )}\n        </div>\n      );\n    }\n\n    return items;\n  }\n\n  onsubmit(e, mode) {\n    e.preventDefault();\n\n    if (\n      !confirm(\n        app.translator.trans('blomstra-gdpr.forum.process_erasure.confirm', {\n          name: extractText(username(this.attrs.request.user())),\n          mode: extractText(mode),\n        })\n      )\n    ) {\n      return;\n    }\n\n    this.loading[MediaSource] = true;\n    m.redraw();\n\n    this.attrs.request\n      .save({ processor_comment: this.comments() }, { meta: { mode } })\n      .then((erasureRequest) => {\n        app.store.remove(erasureRequest);\n        this.loading[MediaSource] = false;\n        m.redraw();\n        this.hide();\n      })\n      .catch(() => {\n        this.loading[MediaSource] = false;\n        m.redraw();\n      });\n  }\n}\n","/*\n *\n *  This file is part of fof/erasurerequests.\n *\n *  Copyright (c) 2019 FriendsOfFlarum.\n *\n *  For the full copyright and license information, please view the LICENSE.md\n *  file that was distributed with this source code.\n *\n */\n\nimport Component from 'flarum/Component';\nimport LoadingIndicator from 'flarum/components/LoadingIndicator';\nimport avatar from 'flarum/helpers/avatar';\nimport icon from 'flarum/helpers/icon';\nimport username from 'flarum/helpers/username';\nimport humanTime from 'flarum/helpers/humanTime';\n\nimport ProcessErasureRequestModal from './ProcessErasureRequestModal';\n\nexport default class ErasureRequestsList extends Component {\n  view() {\n    const erasureRequests = app.store.all('user-erasure-requests');\n    const state = this.attrs.state;\n\n    return (\n      <div className=\"NotificationList ErasureRequestsList\">\n        <div className=\"NotificationList-header\">\n          <h4 className=\"App-titleControl App-titleControl--text\">{app.translator.trans('blomstra-gdpr.forum.erasure_requests.title')}</h4>\n        </div>\n        <div className=\"NotificationList-content\">\n          <ul className=\"NotificationGroup-content\">\n            {erasureRequests.length ? (\n              erasureRequests.map((request) => {\n                return (\n                  <li>\n                    <a onclick={this.showModal.bind(this, request)} className=\"Notification Request\">\n                      {avatar(request.user())}\n                      {icon('fas fa-user-edit', { className: 'Notification-icon' })}\n                      <span className=\"Notification-content\">\n                        {app.translator.trans(`blomstra-gdpr.forum.erasure_requests.item_text`, {\n                          name: username(request.user()),\n                        })}\n                      </span>\n                      {humanTime(request.createdAt())}\n                    </a>\n                  </li>\n                );\n              })\n            ) : !state.loading ? (\n              <div className=\"NotificationList-empty\">{app.translator.trans('blomstra-gdpr.forum.erasure_requests.empty_text')}</div>\n            ) : (\n              LoadingIndicator.component({ className: 'LoadingIndicator--block' })\n            )}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n\n  showModal(request) {\n    app.modal.show(ProcessErasureRequestModal, { request });\n  }\n}\n","/*\n *\n *  This file is part of fof/erasurerequests.\n *\n *  Copyright (c) 2019 FriendsOfFlarum.\n *\n *  For the full copyright and license information, please view the LICENSE.md\n *  file that was distributed with this source code.\n *\n */\n\nimport NotificationsDropdown from 'flarum/components/NotificationsDropdown';\n\nimport ErasureRequestsList from './ErasureRequestsList';\n\nexport default class ErasureRequestsDropdown extends NotificationsDropdown {\n  static initAttrs(attrs) {\n    attrs.label = attrs.label || app.translator.trans('blomstra-gdpr.forum.erasure_requests.tooltip');\n    attrs.icon = attrs.icon || 'fas fa-user-minus';\n\n    super.initAttrs(attrs);\n  }\n\n  getMenu() {\n    return (\n      <div className={'Dropdown-menu ' + this.attrs.menuClassName} onclick={this.menuClick.bind(this)}>\n        {this.showing ? ErasureRequestsList.component({ state: this.attrs.state }) : ''}\n      </div>\n    );\n  }\n\n  goToRoute() {\n    m.route.set(app.route('erasure-requests'));\n  }\n\n  getUnreadCount() {\n    if (!this.attrs.state.requestsLoaded) {\n      return app.forum.attribute('erasureRequestCount');\n    }\n\n    return app.store.all('erasure-requests').length;\n  }\n\n  getNewCount() {\n    return this.getUnreadCount();\n  }\n}\n","export default class ErasureRequestsListState {\n  constructor(app) {\n    this.app = app;\n\n    this.loading = false;\n\n    this.requestsLoaded = false;\n  }\n\n  load() {\n    if (this.requestsLoaded) {\n      return;\n    }\n\n    this.loading = true;\n    m.redraw();\n\n    app.store\n      .find('user-erasure-requests')\n      .then(\n        () => (this.requestsLoaded = true),\n        () => {}\n      )\n      .then(() => {\n        this.loading = false;\n        m.redraw();\n      });\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/Notification'];","import app from 'flarum/forum/app';\nimport Notification from 'flarum/forum/components/Notification';\nimport Export from '../models/Export';\n\nexport default class ExportAvailableNotification extends Notification {\n  icon() {\n    return 'fas fa-file-export';\n  }\n\n  href() {\n    const exportModel = this.attrs.notification.subject() as Export;\n\n    // Building the full url scheme so that Mithril treats this as an external link, so the download will work correctly.\n    return app.forum.attribute('baseUrl') + app.route('gdpr.export', { file: exportModel.file() });\n  }\n\n  content() {\n    return app.translator.trans('blomstra-gdpr.forum.notification.export-ready');\n  }\n\n  excerpt() {\n    return null;\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extenders'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/models/User'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Model'];","import Model from 'flarum/common/Model';\nimport User from 'flarum/common/models/User';\n\nexport default class ErasureRequest extends Model {\n  status() {\n    return Model.attribute<string>('status').call(this);\n  }\n\n  reason() {\n    return Model.attribute<string>('reason').call(this);\n  }\n\n  createdAt() {\n    return Model.attribute('createdAt', Model.transformDate).call(this);\n  }\n\n  userConfirmedAt() {\n    return Model.attribute('userConfirmedAt', Model.transformDate).call(this);\n  }\n\n  processedAt() {\n    return Model.attribute('processedAt', Model.transformDate).call(this);\n  }\n\n  processorComment() {\n    return Model.attribute<string>('processorComment').call(this);\n  }\n\n  user() {\n    return Model.hasOne<User>('user').call(this);\n  }\n\n  processedBy() {\n    return Model.hasOne<User>('processedBy').call(this);\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['components/Page'];","/*\n *\n *  This file is part of fof/erasurerequests.\n *\n *  Copyright (c) 2019 FriendsOfFlarum.\n *\n *  For the full copyright and license information, please view the LICENSE.md\n *  file that was distributed with this source code.\n *\n */\n\nimport Page from 'flarum/components/Page';\n\nimport ErasureRequestsList from './ErasureRequestsList';\n\nexport default class ErasureRequestsPage extends Page {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    app.history.push('erasure-requests');\n\n    app.erasureRequests.load();\n\n    this.bodyClass = 'App--ErasureRequests';\n  }\n\n  view() {\n    return (\n      <div className=\"ErasureRequestsPage\">\n        <ErasureRequestsList state={app.erasureRequests}></ErasureRequestsList>\n      </div>\n    );\n  }\n}\n","import Model from 'flarum/common/Model';\n\nexport default class Export extends Model {\n  file() {\n    return Model.attribute<string>('file').call(this);\n  }\n\n  destroysAt() {\n    return Model.attribute('destroysAt', Model.transformDate);\n  }\n}\n","import Extend from 'flarum/common/extenders';\nimport User from 'flarum/common/models/User';\nimport ErasureRequest from './models/ErasureRequest';\nimport ErasureRequestsPage from './components/ErasureRequestsPage';\nimport Export from './models/Export';\n\nexport default [\n  new Extend.Store() //\n    .add('user-erasure-requests', ErasureRequest)\n    .add('exports', Export),\n\n  new Extend.Model(User) //\n    .hasOne<ErasureRequest>('erasureRequest'),\n\n  new Extend.Routes() //\n    .add('erasure-requests', '/erasure-requests', ErasureRequestsPage)\n    .add('gdpr.export', '/gdpr/export/:file', ''),\n];\n","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport Button from 'flarum/common/components/Button';\nimport HeaderSecondary from 'flarum/forum/components/HeaderSecondary';\nimport Page from 'flarum/common/components/Page';\nimport SettingsPage from 'flarum/forum/components/SettingsPage';\nimport RequestDataModal from './components/RequestDataModal';\nimport RequestErasureModal from './components/RequestErasureModal';\nimport ErasureRequestsDropdown from './components/ErasureRequestsDropdown';\nimport ErasureRequestsListState from './states/ErasureRequestsListState';\nimport ExportAvailableNotification from './components/ExportAvailableNotification';\n\nexport { default as extend } from './extend';\n\napp.initializers.add('blomstra-gdpr', () => {\n  app.erasureRequests = new ErasureRequestsListState(app);\n\n  app.notificationComponents.gdprExportAvailable = ExportAvailableNotification;\n\n  extend(Page.prototype, 'oninit', function () {\n    if (m.route.param('erasureRequestConfirmed')) {\n      app.alerts.show({ type: 'success' }, app.translator.trans('blomstra-gdpr.forum.erasure_request_confirmed'));\n    }\n  });\n\n  extend(SettingsPage.prototype, 'accountItems', function (items) {\n    items.add(\n      'gdprErasure',\n      Button.component(\n        {\n          className: 'Button',\n          onclick: () => app.modal.show(RequestErasureModal),\n        },\n        app.translator.trans('blomstra-gdpr.forum.settings.request_erasure_button')\n      )\n    );\n  });\n\n  extend(SettingsPage.prototype, 'accountItems', function (items) {\n    items.add(\n      'gdprExport',\n      Button.component(\n        {\n          className: 'Button',\n          onclick: () => app.modal.show(RequestDataModal),\n        },\n        app.translator.trans('blomstra-gdpr.forum.settings.export_data_button')\n      )\n    );\n  });\n\n  extend(HeaderSecondary.prototype, 'items', function (items) {\n    if (app.forum.attribute('erasureRequestCount')) {\n      items.add('UsernameRequests', <ErasureRequestsDropdown state={app.erasureRequests} />, 20);\n    }\n  });\n});\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","_setPrototypeOf","p","setPrototypeOf","bind","__proto__","_inheritsLoose","subClass","superClass","create","constructor","RequestDataModal","className","title","app","trans","content","Button","type","loading","this","onsubmit","e","preventDefault","method","url","attribute","then","hide","loaded","Modal","RequestErasureModal","oninit","vnode","reason","Stream","password","translator","fields","toArray","items","ItemList","currRequest","session","user","erasureRequest","add","status","onclick","oncancel","bidi","placeholder","extractText","oninput","target","m","redraw","data","relationships","store","createRecord","save","meta","pushData","ProcessErasureRequestModal","comments","name","username","attrs","request","forum","anonymization","deletion","mode","confirm","MediaSource","processor_comment","remove","ErasureRequestsList","view","erasureRequests","all","state","length","map","showModal","avatar","icon","humanTime","createdAt","LoadingIndicator","modal","show","Component","ErasureRequestsDropdown","initAttrs","label","getMenu","menuClassName","menuClick","showing","component","goToRoute","route","set","getUnreadCount","requestsLoaded","getNewCount","NotificationsDropdown","ErasureRequestsListState","load","find","ExportAvailableNotification","href","exportModel","notification","subject","file","excerpt","Notification","ErasureRequest","Model","userConfirmedAt","processedAt","processorComment","processedBy","ErasureRequestsPage","history","push","bodyClass","Page","Export","destroysAt","Extend","User","hasOne","gdprExportAvailable","extend","param","SettingsPage","HeaderSecondary"],"sourceRoot":""}